%PDF-1.3
%âãÏÓ
2 0 obj
<<
/Length 2045
>>
stream
BT
/TT2 1 Tf
12 0 0 12 117.792 669 Tm
0 g
/GS1 gs
0 Tc
0 Tw
[(Intr)18(oducción a Sistemas Operati)10(v)10(os: Comunicación entr)18(e)-250(P)0(r)18(ocesos)]TJ
/TT4 1 Tf
10 0 0 10 269.53 633 Tm
(Clips xxx)Tj
-2.845 -1.2 TD
[(F)55(r)55( )210(ancisco J Ballester)45(os)]TJ
/TT2 1 Tf
-16.908 -4.8 TD
0.25 Tw
[(1. Pipefr)18(oms)]TJ
/TT6 1 Tf
0 -1.56 TD
0.0417 Tw
[(Otra función de utilidad realiza el trabajo in)40(v)15(erso, permite leer la salida de un comando e)15(xterno en un pro-)]TJ
0 -1.2 TD
0 Tw
(grama escrito en C. Este podría ser el código de )Tj
/TT7 1 Tf
19.3545 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(cha función.)Tj
/TT9 1 Tf
8 0 0 8 133 527.4 Tm
(int)Tj
0 -1.5 TD
(pipefrom\(char* cmd\))Tj
T*
({)Tj
2.4 -1.5 TD
(int fd[2];)Tj
0 -3 TD
(if \(pipe\(fd\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(switch\(fork\(\)\){)Tj
T*
(case -1:)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(case 0:)Tj
2.4 -1.5 TD
(close\(fd[0]\);)Tj
T*
(dup2\(fd[1], 1\);)Tj
T*
(close\(fd[1]\);)Tj
T*
(execl\("/bin/sh", "sh", "-c", cmd, NULL\);)Tj
T*
(err\(1, "execl"\);)Tj
-2.4 -1.5 TD
(default:)Tj
2.4 -1.5 TD
(close\(fd[1]\);)Tj
T*
(return fd[0];)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 257.4 Tm
0.0758 Tw
[(En este caso redirigimos la salida estándar del nue)25(v)20(o)20( )-20(proceso al pipe \(en el proceso hijo\) y retornamos el)]TJ
0 -1.2 TD
0 Tw
(descriptor para leer del pipe.)Tj
0 -2.4 TD
0.1086 Tw
(Podemos utilizar esta función en un programa para leer la salida de un comando. Por ejemplo, este pro-)Tj
0 -1.2 TD
0.1187 Tw
(grama ejecuta el comando)Tj
/TT9 1 Tf
11.1916 0 TD
0 Tw
(who)Tj
/TT6 1 Tf
2.169 0 TD
0.1187 Tw
(que muestra qué usuarios están utilizando el sistema y lee su salida. En)Tj
-13.3606 -1.2 TD
0.0223 Tw
[(nuestro caso nos limitamos a escribir toda la salida del comando en nuestra salida estándar)55(.)-272.3(E)0(n)-272.3(u)0(n)-272.3(caso real)]TJ
T*
0 Tw
(podríamos procesar la salida de)Tj
/TT9 1 Tf
12.8564 0 TD
(who)Tj
/TT6 1 Tf
2.0503 0 TD
(para hacer con ella algo más interesante.)Tj
ET
endstream
endobj
3 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT7 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
12 0 obj
<<
/Length 1591
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-2-)Tj
/TT9 1 Tf
8 0 0 8 133 708 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <stdlib.h>)Tj
T*
(#include <unistd.h>)Tj
T*
(#include <err.h>)Tj
0 -3 TD
(int)Tj
0 -1.5 TD
(pipefrom\(char* cmd\))Tj
T*
({)Tj
2.4 -1.5 TD
(// como se muestra arriba)Tj
-2.4 -1.5 TD
(})Tj
0 -3 TD
(static int)Tj
0 -1.5 TD
(readall\(int fd, char buf[], int nbuf\))Tj
T*
({)Tj
2.4 -1.5 TD
(int tot, nr;)Tj
0 -3 TD
(for \(tot = 0; tot < nbuf; tot += nr\) {)Tj
2.4 -1.5 TD
(nr = read\(fd, buf+tot, nbuf-tot\);)Tj
T*
(if \(nr < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(nr == 0\) {)Tj
2.4 -1.5 TD
(break;)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
T*
(return tot;)Tj
-2.4 -1.5 TD
(})Tj
0 -3 TD
(int)Tj
0 -1.5 TD
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
1.8 Tw
[(int fd,)-600(nr;)]TJ
T*
(char buf[1024];)Tj
0 -3 TD
0 Tw
(fd = pipefrom\("who"\);)Tj
0 -1.5 TD
(if \(fd < 0\))Tj
2.4 -1.5 TD
(err\(1, "pipefrom"\);)Tj
-2.4 -1.5 TD
(nr = readall\(fd, buf, sizeof buf - 1\);)Tj
T*
(close\(fd\);)Tj
T*
(if \(nr < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "read"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(buf[nr] = 0;)Tj
T*
(printf\("command output:\\n%s--\\n", buf\);)Tj
T*
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 138 Tm
0.005 Tw
[(El programa incluye una función auxiliar)40(,)]TJ
/TT9 1 Tf
16.9563 0 TD
0 Tw
(readall)Tj
/TT6 1 Tf
4.2007 0 TD
0.005 Tw
[(,)-255(que lee todo el contenido desde el descriptor indicado)]TJ
-21.157 -1.2 TD
0 Tw
[(dejándolo en un b)20(u)0(f)25(fer)55(.)-250(Esta podría ser una ejecuciæon del programa:)]TJ
ET
endstream
endobj
13 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
15 0 obj
<<
/Length 4265
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-3-)Tj
/TT9 1 Tf
8 0 0 8 133 708 Tm
(unix$ pwho)Tj
0 -1.5 TD
[(nemo )-2400(console)-1200(Jul 13 07:30)]TJ
T*
[(nemo )-2400(ttys000)-1200(Jul 13 07:31)]TJ
T*
[(nemo )-2400(ttys001)-1200(Aug 18 15:59)]TJ
T*
[(nemo )-2400(ttys002)-1200(Aug 20 18:48)]TJ
T*
(unix$)Tj
/TT2 1 Tf
10 0 0 10 72 606 Tm
0.25 Tw
[(2. Sustitución)-250(de )250(comandos)]TJ
/TT6 1 Tf
0 -1.56 TD
0.0514 Tw
[(El shell incluye sintaxis que realiza un trabajo similar al código que acabamos de v)15(e)0(r)55(.)-301.4(Se)-301.4(trata de la la lla-)]TJ
0 -1.2 TD
0 Tw
(mada)Tj
/TT4 1 Tf
2.4213 0 TD
0.0058 Tw
(sustitución de comandos)Tj
/TT6 1 Tf
10.0999 0 TD
0 Tw
(o)Tj
/TT4 1 Tf
0.7559 0 TD
0.0059 Tw
(interpolación de salida)Tj
/TT6 1 Tf
9.5446 0 TD
[(de comandos.)-505.9(La idea es utilizar un comando)]TJ
/TT4 1 Tf
18.5965 0 TD
0 Tw
(den-)Tj
-41.4182 -1.2 TD
[(tr)45(o)]TJ
/TT6 1 Tf
1.4026 0 TD
0.0305 Tw
[(de una línea de comandos para que dicho comando escriba el te)15(xto que debiéramos escribir nosotros en)]TJ
-1.4026 -1.2 TD
0 Tw
(caso contrario.)Tj
0 -2.4 TD
0.0018 Tw
[(Por ejemplo, podríamos querer guardar en una v)25(ariable de entorno la fecha actual. P)15(ara ello deberíamos eje-)]TJ
0 -1.2 TD
0 Tw
(cutar)Tj
/TT9 1 Tf
2.3175 0 TD
(date)Tj
/TT6 1 Tf
2.7194 0 TD
0.0689 Tw
[(y)-319(lue)15(go escribir una línea de comandos que asigne a una v)25(ariable de entorno lo que)]TJ
/TT9 1 Tf
34.4961 0 TD
0 Tw
(date)Tj
/TT6 1 Tf
2.7193 0 TD
(ha)Tj
-42.2523 -1.2 TD
0.0475 Tw
[(escrito. Pero, por un lado, esto no es práctico y)65(,)-297.6(por otro, si queremos ejecutar estos comandos como parte)]TJ
T*
-0.0001 Tc
0.0001 Tw
[(de un script, no queremos que un humano tenga)-250.1(que editar el script cada v)14.9(ez que lo ejecutamos.)]TJ
0 -2.4 TD
0 Tc
0.1282 Tw
[(Por ejemplo, tal v)15(ez queremos hacer un script llamado)]TJ
/TT9 1 Tf
23.1315 0 TD
0 Tw
(mkvers)Tj
/TT6 1 Tf
3.9788 0 TD
0.1281 Tw
(que genere un )Tj
/TT7 1 Tf
6.2427 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.1281 Tw
(chero fuente en C que)Tj
-33.9091 -1.2 TD
0 Tw
(declare un array que de)Tj
/TT7 1 Tf
9.3276 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
[(na la v)15(ersión del programa con la fecha actual.)]TJ
-9.8838 -2.4 TD
[(V)111(eamos cómo hacerlo. Queremos tener un )]TJ
/TT7 1 Tf
17.1883 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
-0.0002 Tc
0.0002 Tw
(chero que contenga, por ejemplo,)Tj
/TT9 1 Tf
8 0 0 8 133 416.4 Tm
0 Tc
0 Tw
(char vers[] = "vers: Fri Aug 26 17:05:14 CEST 2016";)Tj
/TT6 1 Tf
10 0 0 10 72 386.4 Tm
0.02 Tw
(para utilizarlo junto con otros )Tj
/TT7 1 Tf
12.1801 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
-0.0001 Tc
0.0201 Tw
[(cheros al construir nuestro ejecutable. El plan es que cada v)14.9(ez que hagamos)]TJ
-12.7362 -1.2 TD
0 Tc
0 Tw
(un cambio signi)Tj
/TT7 1 Tf
6.3882 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
[(cati)25(v)20(o)0(,)-250(ejecutaremos)]TJ
/TT9 1 Tf
8 0 0 8 133 356.4 Tm
(unix$ mkvers)Tj
/TT6 1 Tf
10 0 0 10 72 338.4 Tm
0.0849 Tw
[(y)-335(lue)15(go compilaremos el programa. De ese modo el programa podría imprimir \(si así se le pide\) la fecha)]TJ
0 -1.2 TD
0 Tw
[(que corresponde a la v)15(ersión del programa.)]TJ
0 -2.4 TD
(Este podría ser el script:)Tj
/TT9 1 Tf
8 0 0 8 133 284.4 Tm
(#!/bin/sh)Tj
0 -1.5 TD
(DATE=‘date‘)Tj
0 -3 TD
(\()Tj
2.4 -1.5 TD
(echo -n ’char vers[] = "vers: ’)Tj
T*
(echo -n "$DATE")Tj
T*
0.6 Tw
(echo ’";’)Tj
-2.4 -1.5 TD
0 Tw
[(\))-600(>)-600(vers.c)]TJ
/TT6 1 Tf
10 0 0 10 72 170.4 Tm
(La linea que nos interesa es)Tj
/TT9 1 Tf
8 0 0 8 133 152.4 Tm
(DATE=‘date‘)Tj
/TT6 1 Tf
10 0 0 10 72 134.4 Tm
(que es similar a haber escrito)Tj
/TT9 1 Tf
8 0 0 8 133 116.4 Tm
(DATE="Fri Aug 26 17:12:10 CEST 2016")Tj
/TT6 1 Tf
10 0 0 10 72 98.4 Tm
(si es que esa era la fecha.)Tj
0 -2.4 TD
0.0555 Tw
(Lo que hace el shell cuando una línea de comandos contiene ")Tj
/TT9 1 Tf
25.4259 0 TD
0 Tw
(‘)Tj
/TT6 1 Tf
0.6001 0 TD
(...)Tj
/TT9 1 Tf
0.75 0 TD
(‘)Tj
/TT6 1 Tf
0.6001 0 TD
0.0556 Tw
[(")-305.6(e)0(s)-305.6(ejecutar el comando que hay entre)]TJ
-27.3761 -1.2 TD
0 Tw
(")Tj
/TT9 1 Tf
0.4082 0 TD
(‘)Tj
/TT6 1 Tf
0.6001 0 TD
(...)Tj
/TT9 1 Tf
0.75 0 TD
(‘)Tj
/TT6 1 Tf
0.6001 0 TD
0.0115 Tw
[(")-261.5(y)-261.5(sustituir ese te)15(xto de la línea de comandos por la salida de dicho comando. T)80(ambién se dice que el)]TJ
ET
endstream
endobj
16 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT7 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
18 0 obj
<<
/Length 4219
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-4-)Tj
-21.017 -3.6 TD
0.1235 Tw
[(shell interpola la salida de dicho comando en la línea de comandos. P)15(ara conse)15(guir eso, el shell ejecuta)]TJ
0 -1.2 TD
0.0925 Tw
(código similar a)Tj
/TT9 1 Tf
6.9704 0 TD
0 Tw
(pipefrom\(\))Tj
/TT6 1 Tf
6.3435 0 TD
0.0925 Tw
[(y)-342.5(lee la salida del comando. Una v)15(ez la ha leído por completo, la utiliza)]TJ
-13.3138 -1.2 TD
0 Tw
(como parte de la línea de comandos y continúa ejecutándola.)Tj
0 -2.4 TD
(Por ejemplo, el comando)Tj
/TT4 1 Tf
10.2476 0 TD
(seq\(1\))Tj
/TT6 1 Tf
2.749 0 TD
[(se utiliza para contar)55(.)-500(Resulta muy útil para numerar cosas. Por ejemplo,)]TJ
/TT9 1 Tf
8 0 0 8 133 642 Tm
(unix$ seq 4)Tj
0 -1.5 TD
(1)Tj
T*
(2)Tj
T*
(3)Tj
T*
(4)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 552 Tm
[(Como puedes v)15(er en la salida de este comando)]TJ
/TT9 1 Tf
8 0 0 8 133 534 Tm
(unix$ echo x ‘seq 4‘ y)Tj
T*
0.6 Tc
(x1234y)Tj
T*
0 Tc
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 492 Tm
0.0855 Tw
(el shell ha ejecutado)Tj
/TT9 1 Tf
8.7273 0 TD
0 Tw
(echo)Tj
/TT6 1 Tf
2.736 0 TD
0.0856 Tw
(con ")Tj
/TT9 1 Tf
2.1877 0 TD
0.6856 Tc
0 Tw
(1234)Tj
/TT6 1 Tf
4.4572 0 TD
0 Tc
0.0856 Tw
[(")-335.6(e)0(n)-335.6(l)0(a)-335.6(línea de comandos: ha reemplazado el comando entre)]TJ
-18.1081 -1.2 TD
0.0603 Tw
[(comillas in)40(v)15(ertidas por la salida de dicho comando. ¡Y ha reemplazado los ")]TJ
/TT9 1 Tf
31.1505 0 TD
0 Tw
(\\n)Tj
/TT6 1 Tf
1.2002 0 TD
0.0603 Tw
[(")-310.3(e)0(n)-310.3(dicha salida por espa-)]TJ
-32.3507 -1.2 TD
0 Tw
[(cios en blanco!)-500(Piensa que es una)]TJ
/TT4 1 Tf
13.8848 0 TD
(línea)Tj
/TT6 1 Tf
2.2495 0 TD
(de comandos y no queremos )Tj
/TT7 1 Tf
11.6362 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(nes de línea en ella.)Tj
-28.3267 -2.4 TD
(Es)Tj
/TT4 1 Tf
1.2621 0 TD
(muy)Tj
/TT6 1 Tf
1.9281 0 TD
0.0121 Tw
(habitual utilizar la sustitución de comandos, sobre todo a la hora de programar scripts. Por ejemplo,)Tj
-3.1902 -1.2 TD
0.0222 Tw
(este libro tenía inicialmente )Tj
/TT7 1 Tf
11.4179 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0222 Tw
(cheros llamados)Tj
/TT9 1 Tf
6.7646 0 TD
0 Tw
(ch1.w)Tj
/TT6 1 Tf
3.2727 0 TD
0.0222 Tw
(para el primer capítulo,)Tj
/TT9 1 Tf
9.6679 0 TD
0 Tw
(ch2.w)Tj
/TT6 1 Tf
3.2727 0 TD
0.0222 Tw
[(para el se)15(gundo, etc.)]TJ
-34.9519 -2.4 TD
0.0315 Tw
(Podemos crear estos )Tj
/TT7 1 Tf
8.5091 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0315 Tw
[(cheros utilizando un b)20(ucle)]TJ
/TT9 1 Tf
10.8804 0 TD
0 Tw
(for)Tj
/TT6 1 Tf
2.0818 0 TD
0.0316 Tw
(en el shell y la sustitución de comandos. Lo primero)Tj
-22.0274 -1.2 TD
0.0216 Tw
[(que haremos será guardar en una v)25(ariable los números para los 6 capítulos que pensábamos escribir inicial-)]TJ
T*
0 Tw
(mente.)Tj
/TT9 1 Tf
8 0 0 8 133 366 Tm
(unix$ caps=‘seq 6‘)Tj
0 -1.5 TD
(unix$ echo $caps)Tj
T*
0.6 Tc
(123456)Tj
T*
0 Tc
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 300 Tm
[(Y)-250(ahora podemos ejecutar el siguiente comando que crea cada uno de los )]TJ
/TT7 1 Tf
29.5161 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(cheros:)Tj
/TT9 1 Tf
8 0 0 8 133 282 Tm
(unix$ for c in $caps)Tj
0 -1.5 TD
0.6 Tc
[(>d)600(o)]TJ
T*
0 Tc
[(>)-3000(echo creating chap $c)]TJ
T*
[(>)-3000(touch ch$c.w)]TJ
T*
[(>)-600(done)]TJ
T*
(creating chap 1)Tj
T*
(creating chap 2)Tj
T*
(creating chap 3)Tj
T*
(creating chap 4)Tj
T*
(creating chap 5)Tj
T*
(creating chap 6)Tj
T*
(unix$ echo ch*.w)Tj
T*
(ch1.w ch2.w ch3.w ch4.w ch5.w ch6.w)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 96 Tm
0.0789 Tw
[(Como puedes v)15(e)0(r)40(,)-328.9(el)-328.9(comando)]TJ
/TT9 1 Tf
12.7252 0 TD
0 Tw
(for)Tj
/TT6 1 Tf
2.1292 0 TD
0.0789 Tw
[(es de nue)25(v)20(o)20( )-20(parte de la sintaxis del shell, similar al comando)]TJ
/TT9 1 Tf
25.368 0 TD
0 Tw
(if)Tj
/TT6 1 Tf
1.5292 0 TD
(que)Tj
-41.7517 -1.2 TD
0.163 Tw
(vimos anteriormente. En este caso, este comando ejecuta las líneas de comandos entre)Tj
/TT9 1 Tf
36.8006 0 TD
0 Tw
(do)Tj
/TT6 1 Tf
1.6132 0 TD
(y)Tj
/TT9 1 Tf
0.913 0 TD
(done)Tj
/TT6 1 Tf
2.8134 0 TD
(\(el)Tj
-42.1402 -1.2 TD
0.0598 Tw
[(cuerpo del b)20(ucle\) para cada uno de los v)25(alores que siguen a)]TJ
/TT9 1 Tf
24.6629 0 TD
0 Tw
(in)Tj
/TT6 1 Tf
1.2002 0 TD
0.0599 Tw
[(,)-309.9(haciendo que la v)25(ariable de entorno cuyo)]TJ
ET
endstream
endobj
19 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT4 5 0 R
/TT6 6 0 R
/TT7 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
21 0 obj
<<
/Length 1380
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-5-)Tj
-21.017 -3.6 TD
0.02 Tw
(nombre precede a)Tj
/TT9 1 Tf
7.4169 0 TD
0 Tw
(in)Tj
/TT6 1 Tf
1.4702 0 TD
-0.0001 Tc
0.0201 Tw
[(contenga)-270.1(e)-0.1(l)-270.1(v)24.9(alor correspondiente en cada iteración. Si no has entendido este párrafo,)]TJ
-8.8871 -1.2 TD
0 Tc
0 Tw
(mira la salida del comando anterior y fíjate en qué es)Tj
/TT9 1 Tf
21.4082 0 TD
($c)Tj
/TT6 1 Tf
1.4502 0 TD
(en cada iteración.)Tj
-22.8584 -2.4 TD
(Podríamos haber escrito este otro comando)Tj
/TT9 1 Tf
8 0 0 8 133 654 Tm
(unix$ for c in ‘seq 6‘ ; do)Tj
0 -1.5 TD
[(>)-3000(echo creating chap $c)]TJ
T*
[(>)-3000(touch ch$c.w)]TJ
T*
[(>)-600(done)]TJ
/TT6 1 Tf
10 0 0 10 72 600 Tm
[(y)-250(e)0(l)-250(efecto habría sido el mismo.)]TJ
0 -2.4 TD
0.0992 Tw
[(Poco a poco v)15(emos que podemos utilizar el shell para combinar programas e)15(xistentes para hacer nuestro)]TJ
0 -1.2 TD
0 Tw
[(trabajo. ¡Eso es UNIX!.)-500(Recuerda...)]TJ
2.5 -1.56 TD
0.0479 Tw
[(•)-2150(L)0(a)-297.9(primera opción es utilizar el manual y encontrar un programa ya hecho que puede hacer lo)]TJ
2.5 -1.2 TD
0 Tw
(que deseamos hacer)Tj
-2.5 -1.56 TD
[(•)-2150(L)0(a)-250(s)0(e)15(gunda mejor opción es combinar programas e)15(xistentes utilizando el shell para ello)]TJ
T*
[(•)-2150(L)0(a)-250(última opción es escribir un programa en C para hacer el trabajo.)]TJ
ET
endstream
endobj
22 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
9 0 obj
<<
/Type /ExtGState
/SA false
/SM 0.02
/OP false
/op false
/OPM 1
/BG2 /Default
/UCR2 /Default
/HT /Default
/TR2 /Default
>>
endobj
23 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 676
/Descent -250
/Flags 262178
/FontBBox [-168 -218 1000 935]
/FontName /Times-Bold
/ItalicAngle 0
/StemV 133
/XHeight 461
/StemH 139
>>
endobj
24 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 653
/Descent -250
/Flags 98
/FontBBox [-169 -217 1010 883]
/FontName /Times-Italic
/ItalicAngle -15
/StemV 76
/XHeight 441
/StemH 76
>>
endobj
25 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 662
/Descent -250
/Flags 34
/FontBBox [-168 -218 1000 898]
/FontName /Times-Roman
/ItalicAngle 0
/StemV 84
/XHeight 450
/StemH 84
>>
endobj
26 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 662
/Descent -250
/Flags 34
/FontBBox [-168 -218 1000 898]
/FontName /Times-Roman
/ItalicAngle 0
/StemV 84
/XHeight 450
/StemH 84
>>
endobj
27 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 35
/FontBBox [-28 -250 628 805]
/FontName /Courier
/ItalicAngle 0
/StemV 51
/XHeight 426
/StemH 51
>>
endobj
4 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 243
/Widths [250 0 0 0 0 0 0 0 0 0 0 0 0 0 250 0 
0 500 500 0 0 0 0 0 0 0 333 0 0 0 0 0 
0 0 0 722 0 0 0 0 0 389 0 0 0 0 0 778 
611 0 0 556 0 0 0 0 0 0 0 0 0 0 0 0 
0 500 0 444 556 444 333 0 0 278 0 0 0 833 556 500 
556 0 444 389 333 556 500 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 500 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Bold
/FontDescriptor 23 0 R
>>
endobj
5 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 243
/Widths [250 0 0 0 0 0 0 0 333 333 0 0 0 333 0 0 
0 500 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 611 667 0 0 611 0 0 0 444 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 500 0 444 500 444 0 0 0 278 0 0 278 722 500 500 
500 500 389 389 278 500 0 0 444 444 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 278 0 0 
0 0 0 500 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Italic
/FontDescriptor 24 0 R
>>
endobj
6 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 250
/Widths [250 333 408 0 0 0 0 0 333 333 0 0 250 333 250 0 
0 0 500 500 500 500 500 0 0 0 278 0 0 0 0 0 
0 0 0 667 722 611 0 0 0 333 0 0 611 0 722 722 
556 722 667 556 611 722 722 0 722 722 0 0 0 0 0 0 
0 444 500 444 500 444 333 500 500 278 278 0 278 778 500 500 
500 500 333 389 278 500 500 0 500 500 444 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 350 0 0 0 0 0 0 0 0 0 0 
0 333 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 444 0 0 0 0 667 0 0 444 0 0 0 278 0 0 
0 0 0 500 0 0 0 0 0 0 500 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Roman
/FontDescriptor 25 0 R
>>
endobj
7 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 222
/LastChar 222
/Widths [556 ]
/Encoding /MacRomanEncoding
/BaseFont /Times-Roman
/FontDescriptor 26 0 R
>>
endobj
8 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 146
/Widths [600 600 600 600 600 600 0 0 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 0 
0 600 0 600 600 600 600 0 0 0 600 0 600 0 600 0 
0 0 0 600 600 600 0 0 0 0 0 600 600 600 0 0 
0 600 600 600 600 600 600 600 600 600 0 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 0 600 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 600 600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier
/FontDescriptor 27 0 R
>>
endobj
1 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 3 0 R
/Contents 2 0 R
>>
endobj
11 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 13 0 R
/Contents 12 0 R
>>
endobj
14 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 16 0 R
/Contents 15 0 R
>>
endobj
17 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 19 0 R
/Contents 18 0 R
>>
endobj
20 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 22 0 R
/Contents 21 0 R
>>
endobj
28 0 obj
<<
/S /D
>>
endobj
29 0 obj
<<
/Nums [0 28 0 R ]
>>
endobj
10 0 obj
<<
/Type /Pages
/Kids [1 0 R 11 0 R 14 0 R 17 0 R 20 0 R]
/Count 5
/MediaBox [0 0 612 792]
>>
endobj
30 0 obj
<<
/CreationDate (D:20160905151716+02'00')
/ModDate (D:20160905151716+02'00')
/Producer (Apple pstopdf)
>>
endobj
31 0 obj
<<
/Type /Catalog
/Pages 10 0 R
/PageLabels 29 0 R
>>
endobj
xref
0 32
0000000000 65535 f 
0000018289 00000 n 
0000000016 00000 n 
0000002113 00000 n 
0000015529 00000 n 
0000016181 00000 n 
0000016839 00000 n 
0000017578 00000 n 
0000017748 00000 n 
0000014402 00000 n 
0000018774 00000 n 
0000018370 00000 n 
0000002252 00000 n 
0000003896 00000 n 
0000018454 00000 n 
0000004003 00000 n 
0000008321 00000 n 
0000018538 00000 n 
0000008461 00000 n 
0000012733 00000 n 
0000018622 00000 n 
0000012862 00000 n 
0000014295 00000 n 
0000014542 00000 n 
0000014744 00000 n 
0000014944 00000 n 
0000015141 00000 n 
0000015338 00000 n 
0000018706 00000 n 
0000018734 00000 n 
0000018884 00000 n 
0000019007 00000 n 
trailer
<<
/Size 32
/Root 31 0 R
/Info 30 0 R
/ID [<9a0e4567e96cd268be3a0b4a6ee55c6b><9a0e4567e96cd268be3a0b4a6ee55c6b>]
>>
startxref
19077
%%EOF
