%PDF-1.3
%âãÏÓ
2 0 obj
<<
/Length 2217
>>
stream
BT
/TT2 1 Tf
12 0 0 12 158.01 669 Tm
0 g
/GS1 gs
0 Tc
0 Tw
[(Intr)18(oducción a Sistemas Operati)10(v)10(os: Concurr)18(encia)]TJ
/TT4 1 Tf
10 0 0 10 269.53 633 Tm
(Clips xxx)Tj
-2.845 -1.2 TD
[(F)55(r)55( )210(ancisco J Ballester)45(os)]TJ
/TT2 1 Tf
-16.908 -4.8 TD
[(1. )-250(Semáf)25(or)18(os con pipes)]TJ
/TT6 1 Tf
0 -1.56 TD
0.0492 Tw
[(V)111(amos a implementar un semáforo que podremos usar en aplicaciones que compartan un proceso padre \(o)]TJ
0 -1.2 TD
0.094 Tw
(ancestro\) común. La idea es utilizar un pipe como semáforo y guardar tantos bytes en el semáforo como)Tj
T*
0 Tw
[(tick)10(ets queramos tener: P)15(ara hacer un)]TJ
/TT8 1 Tf
15.1908 0 TD
(down)Tj
/TT6 1 Tf
2.6504 0 TD
(leeremos y byte y para hacer un)Tj
/TT8 1 Tf
12.9663 0 TD
(up)Tj
/TT6 1 Tf
1.4502 0 TD
(escribiremos un byte.)Tj
-32.2577 -2.4 TD
0.1187 Tw
(Con esta idea, el único problema es que es preciso crear el semáforo antes de llamar a)Tj
/TT8 1 Tf
36.5589 0 TD
0 Tw
(fork)Tj
/TT6 1 Tf
2.7691 0 TD
0.1187 Tw
(\(para que)Tj
-39.328 -1.2 TD
0.177 Tw
(todos lo procesos lo compartan\), si es que usamos)Tj
/TT8 1 Tf
21.8117 0 TD
0 Tw
(fork)Tj
/TT6 1 Tf
2.4004 0 TD
0.177 Tw
[(.)-427(S)0(i)-427(usamos threads, dado que comparten los)]TJ
-24.2121 -1.2 TD
0 Tw
(descriptores de )Tj
/TT9 1 Tf
6.2754 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero, no tenemos problemas.)Tj
-6.8315 -2.4 TD
[(Este es el interf)10(az para nuestros semáforos)]TJ
/TT11 1 Tf
6.1 -1.8 TD
([sem.h])Tj
/TT6 1 Tf
4.2007 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 431.4 Tm
(typedef struct Sem Sem;)Tj
0 -1.5 TD
(struct Sem {)Tj
2.4 -1.5 TD
(int fd[2];)Tj
-2.4 -1.5 TD
(};)Tj
0 -3 TD
(int semdown\(Sem *s\);)Tj
0 -1.5 TD
(int semup\(Sem *s\);)Tj
T*
(int semcreat\(Sem *s, int val\);)Tj
T*
(void semclose\(Sem *s\);)Tj
/TT6 1 Tf
10 0 0 10 72 317.4 Tm
[(y)-250(esta es la implementación:)]TJ
/TT11 1 Tf
6.1 -1.8 TD
([sem.c])Tj
/TT6 1 Tf
4.2007 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 287.4 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include "sem.h")Tj
0 -3 TD
(int)Tj
0 -1.5 TD
(semdown\(Sem *s\))Tj
T*
({)Tj
2.4 -1.5 TD
(char c;)Tj
0 -3 TD
(if \(read\(s->fd[0], &c, 1\) != 1\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return 0;)Tj
-2.4 -1.5 TD
(})Tj
ET
endstream
endobj
3 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
13 0 obj
<<
/Length 1431
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-2-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(int)Tj
0 -1.5 TD
(semup\(Sem *s\))Tj
T*
({)Tj
2.4 -1.5 TD
(if \(write\(s->fd[1], " ", 1\) != 1\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return 0;)Tj
-2.4 -1.5 TD
(})Tj
0 -4.5 TD
(void)Tj
0 -1.5 TD
(semclose\(Sem *s\))Tj
T*
({)Tj
2.4 -1.5 TD
(close\(s->fd[0]\);)Tj
T*
(close\(s->fd[1]\);)Tj
T*
(s->fd[0] = s->fd[1] = -1;)Tj
-2.4 -1.5 TD
(})Tj
0 -4.5 TD
(int)Tj
0 -1.5 TD
(semcreat\(Sem *s, int n\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i;)Tj
0 -3 TD
(if \(pipe\(s->fd\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(for \(i = 0; i < n; i++\) {)Tj
2.4 -1.5 TD
(if \(semup\(s\) < 0\) {)Tj
2.4 -1.5 TD
(semclose\(s\);)Tj
T*
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
T*
(return 0;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 270 Tm
0.0204 Tw
[(Una v)15(ez los tenemos, podemos utilizarlos como en nuestro programa de ejemplo, que hemos adaptado para)]TJ
0 -1.2 TD
0 Tw
(utilizar estos semáforos:)Tj
/TT11 1 Tf
6.1 -1.8 TD
([semcnt.c])Tj
/TT6 1 Tf
6.001 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 228 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include <stdlib.h>)Tj
T*
(#include <pthread.h>)Tj
T*
(#include <err.h>)Tj
T*
(#include <string.h>)Tj
T*
(#include "sem.h")Tj
0 -3 TD
(enum { Nloops = 10 };)Tj
0 -1.5 TD
(static int nloops = Nloops;)Tj
T*
(static int cnt;)Tj
T*
(static Sem sem;)Tj
ET
endstream
endobj
14 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
16 0 obj
<<
/Length 1454
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-3-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(static void*)Tj
0 -1.5 TD
(tmain\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i;)Tj
0 -3 TD
(for\(i = 0; i < nloops; i++\) {)Tj
2.4 -1.5 TD
(if \(semdown\(&sem\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "down"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(cnt++;)Tj
T*
(if \(semup\(&sem\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "up"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
0 -4.5 TD
(int)Tj
0 -1.5 TD
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i;)Tj
T*
(pthread_t thr[3];)Tj
T*
(void *sts;)Tj
0 -3 TD
(if\(argc > 1\) {)Tj
2.4 -1.5 TD
(nloops = atoi\(argv[1]\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(semcreat\(&sem, 1\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "sem creat"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(for\(i = 0; i < 3; i++\) {)Tj
2.4 -1.5 TD
(if\(pthread_create\(thr+i, NULL, tmain, &cnt\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
0 -3 TD
(for\(i = 0; i < 3; i++\) {)Tj
2.4 -1.5 TD
(pthread_join\(thr[i], &sts\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(semclose\(&sem\);)Tj
T*
(printf\("cnt is %d\\n", cnt\);)Tj
T*
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 162 Tm
(Ahora podemos compilarlo y ejecutarlo sin problemas:)Tj
/TT8 1 Tf
8 0 0 8 133 144 Tm
(unix$ cc -c sem.c)Tj
T*
(unix$ cc -c semcnt.c)Tj
T*
(unix$ cc -o semcnt semcnt.o sem.o)Tj
T*
(unix$ semcnt 10000)Tj
T*
(cnt is 30000)Tj
T*
(unix$)Tj
ET
endstream
endobj
17 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
19 0 obj
<<
/Length 977
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-4-)Tj
-21.017 -3.6 TD
0.0554 Tw
[(Un problema con estos semáforos es que no podemos hacer que el número de tick)10(ets supere el número de)]TJ
0 -1.2 TD
0.0216 Tw
[(bytes que caben en el b)20(u)0(f)25(fer del pipe.)-521.6(¿Qué pasaría si lo hacemos? Una v)15(entaja es que cuando nuestro pro-)]TJ
T*
0.1713 Tw
(grama termine su ejecución se cerrarán sus descriptores de )Tj
/TT9 1 Tf
25.2258 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.1713 Tw
(chero incluso si hemos olvidado llamar a)Tj
/TT8 1 Tf
-25.7819 -1.2 TD
0 Tw
(semclose)Tj
/TT6 1 Tf
5.1346 0 TD
0.0837 Tw
[(y)-333.8(e)0(l)-333.8(semáforo \(el pipe\) se destruirá sin dejar recursos perdidos en el sistema. Otra v)15(entaja es)]TJ
-5.1346 -1.2 TD
0 Tw
(que podemos usarlos tanto si creamos procesos que llamen a)Tj
/TT8 1 Tf
24.4937 0 TD
(fork)Tj
/TT6 1 Tf
2.6504 0 TD
(como si usamos)Tj
/TT8 1 Tf
6.6387 0 TD
(pthread_create)Tj
/TT6 1 Tf
8.4014 0 TD
(.)Tj
ET
endstream
endobj
20 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
10 0 obj
<<
/Type /ExtGState
/SA false
/SM 0.02
/OP false
/op false
/OPM 1
/BG2 /Default
/UCR2 /Default
/HT /Default
/TR2 /Default
>>
endobj
21 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 676
/Descent -250
/Flags 262178
/FontBBox [-168 -218 1000 935]
/FontName /Times-Bold
/ItalicAngle 0
/StemV 133
/XHeight 461
/StemH 139
>>
endobj
22 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 653
/Descent -250
/Flags 98
/FontBBox [-169 -217 1010 883]
/FontName /Times-Italic
/ItalicAngle -15
/StemV 76
/XHeight 441
/StemH 76
>>
endobj
23 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 662
/Descent -250
/Flags 34
/FontBBox [-168 -218 1000 898]
/FontName /Times-Roman
/ItalicAngle 0
/StemV 84
/XHeight 450
/StemH 84
>>
endobj
24 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 35
/FontBBox [-28 -250 628 805]
/FontName /Courier
/ItalicAngle 0
/StemV 51
/XHeight 426
/StemH 51
>>
endobj
25 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 662
/Descent -250
/Flags 34
/FontBBox [-168 -218 1000 898]
/FontName /Times-Roman
/ItalicAngle 0
/StemV 84
/XHeight 450
/StemH 84
>>
endobj
26 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 262179
/FontBBox [-113 -250 749 801]
/FontName /Courier-Bold
/ItalicAngle 0
/StemV 133
/XHeight 439
/StemH 84
>>
endobj
4 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 243
/Widths [250 0 0 0 0 0 0 0 0 0 0 0 0 0 250 0 
0 500 0 0 0 0 0 0 0 0 333 0 0 0 0 0 
0 0 0 722 0 0 0 0 0 389 0 0 0 0 0 778 
0 0 0 556 0 0 0 0 0 0 0 0 0 0 0 0 
0 500 0 444 556 444 333 0 0 278 0 0 0 833 556 500 
556 0 444 389 333 556 500 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 500 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 500 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Bold
/FontDescriptor 21 0 R
>>
endobj
5 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 120
/Widths [250 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 611 667 0 0 611 0 0 0 444 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 500 0 444 0 444 0 0 0 278 0 0 278 0 500 500 
500 0 389 389 278 0 0 0 444 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Italic
/FontDescriptor 22 0 R
>>
endobj
6 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 250
/Widths [250 0 0 0 0 0 0 0 333 333 0 0 250 333 250 0 
0 0 500 500 500 0 0 0 0 0 278 0 0 0 0 444 
0 722 0 667 0 611 0 0 0 0 0 0 611 0 0 722 
556 722 0 556 0 722 722 0 0 0 0 0 0 0 0 0 
0 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 
500 500 333 389 278 500 500 0 0 500 444 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 444 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 444 0 0 0 0 0 0 0 444 0 0 0 278 0 0 
0 0 0 500 0 0 0 0 0 0 500 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Roman
/FontDescriptor 23 0 R
>>
endobj
7 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 125
/Widths [600 600 600 600 600 600 600 0 600 600 600 600 600 600 600 0 
600 600 600 600 0 0 0 0 0 0 0 600 600 600 600 0 
0 0 0 0 0 0 0 0 0 0 0 0 600 0 600 0 
0 0 0 600 0 600 0 0 0 0 0 600 600 600 0 600 
0 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 0 600 600 600 600 600 600 600 600 0 600 0 600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier
/FontDescriptor 24 0 R
>>
endobj
8 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 222
/LastChar 222
/Widths [556 ]
/Encoding /MacRomanEncoding
/BaseFont /Times-Roman
/FontDescriptor 25 0 R
>>
endobj
9 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 46
/LastChar 116
/Widths [600 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 600 0 600 
0 0 0 0 0 600 0 600 0 0 600 0 0 0 0 600 
600 0 0 0 0 600 600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier-Bold
/FontDescriptor 26 0 R
>>
endobj
1 0 obj
<<
/Type /Page
/Parent 11 0 R
/Resources 3 0 R
/Contents 2 0 R
>>
endobj
12 0 obj
<<
/Type /Page
/Parent 11 0 R
/Resources 14 0 R
/Contents 13 0 R
>>
endobj
15 0 obj
<<
/Type /Page
/Parent 11 0 R
/Resources 17 0 R
/Contents 16 0 R
>>
endobj
18 0 obj
<<
/Type /Page
/Parent 11 0 R
/Resources 20 0 R
/Contents 19 0 R
>>
endobj
27 0 obj
<<
/S /D
>>
endobj
28 0 obj
<<
/Nums [0 27 0 R ]
>>
endobj
11 0 obj
<<
/Type /Pages
/Kids [1 0 R 12 0 R 15 0 R 18 0 R]
/Count 4
/MediaBox [0 0 612 792]
>>
endobj
29 0 obj
<<
/CreationDate (D:20160905151720+02'00')
/ModDate (D:20160905151720+02'00')
/Producer (Apple pstopdf)
>>
endobj
30 0 obj
<<
/Type /Catalog
/Pages 11 0 R
/PageLabels 28 0 R
>>
endobj
xref
0 31
0000000000 65535 f 
0000010849 00000 n 
0000000016 00000 n 
0000002285 00000 n 
0000008134 00000 n 
0000008784 00000 n 
0000009166 00000 n 
0000009883 00000 n 
0000010348 00000 n 
0000010518 00000 n 
0000006804 00000 n 
0000011250 00000 n 
0000010930 00000 n 
0000002437 00000 n 
0000003921 00000 n 
0000011014 00000 n 
0000004041 00000 n 
0000005548 00000 n 
0000011098 00000 n 
0000005656 00000 n 
0000006685 00000 n 
0000006945 00000 n 
0000007147 00000 n 
0000007347 00000 n 
0000007544 00000 n 
0000007735 00000 n 
0000007932 00000 n 
0000011182 00000 n 
0000011210 00000 n 
0000011353 00000 n 
0000011476 00000 n 
trailer
<<
/Size 31
/Root 30 0 R
/Info 29 0 R
/ID [<2527f5129b45a1f238feeccdf89e0c91><2527f5129b45a1f238feeccdf89e0c91>]
>>
startxref
11546
%%EOF
