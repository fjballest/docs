%PDF-1.3
%âãÏÓ
2 0 obj
<<
/Length 5328
>>
stream
BT
/TT2 1 Tf
12 0 0 12 158.01 669 Tm
0 g
/GS1 gs
0 Tc
0 Tw
[(Intr)18(oducción a Sistemas Operati)10(v)10(os: Concurr)18(encia)]TJ
/TT4 1 Tf
10 0 0 10 269.53 633 Tm
(Clips xxx)Tj
-2.845 -1.2 TD
[(F)55(r)55( )210(ancisco J Ballester)45(os)]TJ
/TT2 1 Tf
-16.908 -4.8 TD
[(1. )-250(Buffers)-250(compartidos: el pr)18(oductor/consumidor)]TJ
/TT6 1 Tf
0 -1.56 TD
0.1401 Tw
(Un problema que aparece a todas horas en programación concurrente es el del)Tj
/TT2 1 Tf
33.2792 0 TD
0 Tw
[(pr)18(oductor)37(-consumidor)]TJ
/TT6 1 Tf
9.6672 0 TD
(,)Tj
-42.9464 -1.2 TD
0.0855 Tw
(también conocido como el del)Tj
/TT2 1 Tf
12.7293 0 TD
[(b)20(uffer acotado)]TJ
/TT6 1 Tf
6.3145 0 TD
[(.)-335.5(S)0(e)-335.5(trata de tener procesos que producen cosas y procesos)]TJ
-19.0438 -1.2 TD
0.1346 Tw
[(que las consumen, como puede v)15(erse en la )]TJ
/TT7 1 Tf
18.3059 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.1346 Tw
[(gura 1. Cuando el b)20(u)0(f)25(fer no tiene límite se denomina)]TJ
/TT4 1 Tf
22.656 0 TD
0 Tw
[(pr)45(o-)]TJ
-41.5181 -1.2 TD
[(ductor)20(-consumidor)]TJ
/TT6 1 Tf
8.0358 0 TD
0.1398 Tw
(al problema y en otro caso se le conoce como el problema del)Tj
/TT4 1 Tf
26.7246 0 TD
0.1399 Tw
[(b)20(u)0(f)18(fer acotado)]TJ
/TT6 1 Tf
5.9623 0 TD
0 Tw
[(.)-389.9(¡Los)]TJ
-40.7227 -1.2 TD
(pipes son un caso de dicho problema!)Tj
ET
0 G
1 J 1 j 0.4 w 10 M []0 d
1 i 
165.6 450.6 m
165.6 434.702 152.698 421.8 136.8 421.8 c
120.902 421.8 108 434.702 108 450.6 c
108 466.498 120.902 479.4 136.8 479.4 c
152.698 479.4 165.6 466.498 165.6 450.6 c
s
BT
10 0 0 10 117.36 448.4 Tm
(productor)Tj
ET
165.6 378.6 m
165.6 362.702 152.698 349.8 136.8 349.8 c
120.902 349.8 108 362.702 108 378.6 c
108 394.498 120.902 407.4 136.8 407.4 c
152.698 407.4 165.6 394.498 165.6 378.6 c
s
BT
10 0 0 10 117.36 376.4 Tm
(productor)Tj
ET
165.6 306.6 m
165.6 290.702 152.698 277.8 136.8 277.8 c
120.902 277.8 108 290.702 108 306.6 c
108 322.498 120.902 335.4 136.8 335.4 c
152.698 335.4 165.6 322.498 165.6 306.6 c
s
BT
10 0 0 10 117.36 304.4 Tm
(productor)Tj
ET
0.5 g
201.6 385.8 14.4 -14.4 re
f
201.6 371.4 14.4 14.4 re
S
216 385.8 14.4 -14.4 re
f
216 371.4 14.4 14.4 re
S
230.4 385.8 14.4 -14.4 re
f
230.4 371.4 14.4 14.4 re
S
244.8 385.8 14.4 -14.4 re
f
244.8 371.4 14.4 14.4 re
259.2 371.4 14.4 14.4 re
273.6 371.4 14.4 14.4 re
288 371.4 14.4 14.4 re
302.4 371.4 14.4 14.4 re
316.8 371.4 14.4 14.4 re
331.2 371.4 14.4 14.4 re
345.6 371.4 14.4 14.4 re
360 371.4 14.4 14.4 re
468 414.6 m
468 398.702 455.098 385.8 439.2 385.8 c
423.302 385.8 410.4 398.702 410.4 414.6 c
410.4 430.498 423.302 443.4 439.2 443.4 c
455.098 443.4 468 430.498 468 414.6 c
s
BT
10 0 0 10 415.59 412.4 Tm
0 g
(consumidor)Tj
ET
468 342.6 m
468 326.702 455.098 313.8 439.2 313.8 c
423.302 313.8 410.4 326.702 410.4 342.6 c
410.4 358.498 423.302 371.4 439.2 371.4 c
455.098 371.4 468 358.498 468 342.6 c
s
BT
10 0 0 10 415.59 340.4 Tm
(consumidor)Tj
ET
201.6 385.8 m
195.264 389.616 l
197.784 392.136 l
f
0.1 w 
201.6 385.8 m
195.264 389.616 l
197.784 392.136 l
s
0.4 w 
157.23 430.23 m
196.47 390.87 l
S
201.6 378.6 m
194.4 376.8 l
194.4 380.4 l
f
0.1 w 
201.6 378.6 m
194.4 376.8 l
194.4 380.4 l
s
0.4 w 
165.63 378.63 m
194.43 378.63 l
S
201.6 371.4 m
197.784 365.064 l
195.264 367.584 l
f
0.1 w 
201.6 371.4 m
197.784 365.064 l
195.264 367.584 l
s
0.4 w 
157.23 327.03 m
196.47 366.27 l
S
418.824 394.224 m
412.632 390.12 l
411.408 393.504 l
f
0.1 w 
418.824 394.224 m
412.632 390.12 l
411.408 393.504 l
s
0.4 w 
374.43 378.63 m
412.11 391.83 l
S
418.824 362.976 m
411.408 363.696 l
412.632 367.08 l
f
0.1 w 
418.824 362.976 m
411.408 363.696 l
412.632 367.08 l
s
0.4 w 
374.43 378.63 m
412.11 365.31 l
S
BT
/TT2 1 Tf
10 0 0 10 97 254.8 Tm
(Figura 1:)Tj
/TT4 1 Tf
4.2217 0 TD
[(El pr)45(oblema del pr)45(oductor consumidor con un b)20(u)0(f)18(fer acotado.)]TJ
/TT6 1 Tf
-6.7217 -1.2 TD
(La solución es sencilla si pensamos en lo siguiente:)Tj
2.5 -1.56 TD
[(•)-2150(P)15(ara producir un ítem es preciso tener un hueco en el b)20(u)0(f)25(fer)]TJ
T*
[(•)-2150(P)15(ara consumir in ítem es preciso tener un ítem en el b)20(u)0(f)25(fer)]TJ
T*
[(•)-2150(P)15(ara operar con el b)20(u)0(f)25(fer es preciso utilizar un mute)15(x.)]TJ
-2.5 -2.4 TD
0.1179 Tw
[(La idea es tener un semáforo que represente los ítems en el b)20(u)0(f)25(fer)40(,)-367.9(otro que represente los huecos en el)]TJ
0 -1.2 TD
0 Tw
[(b)20(u)0(f)25(fer y otro que represente el mute)15(x:)]TJ
2.5 -1.56 TD
[(•)-2150(Cuando queramos un hueco basta pedirlo:)]TJ
/TT9 1 Tf
19.5514 0 TD
(down\(huecos\))Tj
/TT6 1 Tf
7.2012 0 TD
(.)Tj
-26.7525 -1.56 TD
[(•)-2150(Cuando queramos un ítem basta pedirlo:)]TJ
/TT9 1 Tf
18.941 0 TD
(down\(ítems\))Tj
/TT6 1 Tf
6.6011 0 TD
(.)Tj
-28.0421 -1.2 TD
0.1104 Tw
[(El mute)15(x)-360.4(y)0(a)-360.4(sabes manejarlo. Naturalmente, si alguien produce un ítem deberá llamar a)]TJ
/TT9 1 Tf
36.7396 0 TD
0 Tw
(up\(ítems\))Tj
/TT6 1 Tf
5.7613 0 TD
(e,)Tj
-42.5009 -1.2 TD
0.0446 Tw
(igualmente, si alguien produce un hueco deberá llamar a)Tj
/TT9 1 Tf
23.2255 0 TD
0 Tw
(up\(huecos)Tj
/TT6 1 Tf
5.4009 0 TD
0.0445 Tw
(\). Si piensas en los semáforos como)Tj
-28.6264 -1.2 TD
0 Tw
[(en cajas con tick)10(ets, todo esto te resultará natural.)]TJ
0 -2.4 TD
0.178 Tw
[(Primero v)25(amos a implementar un b)20(u)0(f)25(fer compartido que, en nuestro caso, será una cola de caracteres.)]TJ
ET
endstream
endobj
3 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT7 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
12 0 obj
<<
/Length 2632
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-2-)Tj
-21.017 -3.6 TD
0.1021 Tw
[(V)111(amos a mostrar y discutir el código en el mismo orden en que aparece en el )]TJ
/TT7 1 Tf
32.5675 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero)Tj
/TT9 1 Tf
2.5727 0 TD
(pc.c)Tj
/TT6 1 Tf
2.4004 0 TD
[(,)-352(secuencial-)]TJ
-38.0968 -1.2 TD
(mente de arriba a abajo.)Tj
/TT11 1 Tf
6.1 -1.8 TD
([pc.c])Tj
/TT6 1 Tf
3.6006 0 TD
(:)Tj
/TT9 1 Tf
8 0 0 8 133 666 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include <stdlib.h>)Tj
T*
(#include <string.h>)Tj
T*
(#include <pthread.h>)Tj
T*
(#include <err.h>)Tj
T*
(#include "sem.h")Tj
0 -3 TD
(enum {QSIZE = 4};)Tj
T*
(typedef struct Queue Queue;)Tj
0 -1.5 TD
(struct Queue {)Tj
2.4 -1.5 TD
(Sem mutex, nchars, nholes;)Tj
T*
(char buf[QSIZE];)Tj
T*
(int hd, tl;)Tj
-2.4 -1.5 TD
(};)Tj
/TT6 1 Tf
10 0 0 10 72 456 Tm
0.0559 Tw
(En la cola)Tj
/TT9 1 Tf
4.4157 0 TD
0 Tw
(Queue)Tj
/TT6 1 Tf
3.3064 0 TD
0.0559 Tw
[(guardamos los tres semáforos que hemos mencionado, el b)20(u)0(f)25(fer para guardar los carac-)]TJ
-7.7221 -1.2 TD
0.0304 Tw
(teres y la posición de la cabeza \()Tj
/TT9 1 Tf
13.1786 0 TD
0 Tw
(hd)Tj
/TT6 1 Tf
1.2002 0 TD
0.0303 Tw
[(\))-280.3(y)-280.3(cola \()]TJ
/TT9 1 Tf
3.6724 0 TD
0 Tw
(tl)Tj
/TT6 1 Tf
1.2002 0 TD
0.0303 Tw
[(\))-280.3(e)0(n)-280.3(e)0(l)-280.3(b)20(uf)25(fer)55(.)-280.3(Insertaremos caracteres al )]TJ
/TT7 1 Tf
16.4358 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0303 Tw
(nal de la cola \(en)Tj
/TT9 1 Tf
-36.2434 -1.2 TD
0 Tw
(tl)Tj
/TT6 1 Tf
1.2002 0 TD
[(\))-250(y)-250(los tomaremos del principio, de)]TJ
/TT9 1 Tf
14.2192 0 TD
(hd)Tj
/TT6 1 Tf
1.2002 0 TD
(.)Tj
-16.6196 -2.4 TD
(Inicializar la cola requiere crear los semáforos y poco más:)Tj
/TT9 1 Tf
8 0 0 8 133 390 Tm
(static int)Tj
0 -1.5 TD
(qinit\(Queue *q\))Tj
T*
({)Tj
2.4 -1.5 TD
(memset\(q, 0, sizeof *q\);)Tj
T*
(if \(semcreat\(&q->mutex, 1\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(semcreat\(&q->nchars, 0\) < 0\) {)Tj
2.4 -1.5 TD
(semclose\(&q->mutex\);)Tj
T*
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(semcreat\(&q->nholes, QSIZE\) < 0\) {)Tj
2.4 -1.5 TD
(semclose\(&q->mutex\);)Tj
T*
(semclose\(&q->nchars\);)Tj
T*
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return 0;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 168 Tm
0.05 Tw
[(T)80(omamos la precaución de dejar todos los campos a v)25(alores nulos llamando a)]TJ
/TT9 1 Tf
31.8975 0 TD
0 Tw
(memset)Tj
/TT6 1 Tf
3.9007 0 TD
0.0501 Tw
(para que todo esté)Tj
-35.7981 -1.2 TD
0 Tw
(bien inicializado.)Tj
0 -2.4 TD
[(T)70(erminar de usar la cola requiere cerrar nuestros semáforos:)]TJ
ET
endstream
endobj
13 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT7 7 0 R
/TT9 8 0 R
/TT11 14 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
16 0 obj
<<
/Length 1426
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-3-)Tj
/TT9 1 Tf
8 0 0 8 133 708 Tm
(static void)Tj
0 -1.5 TD
(qterm\(Queue *q\))Tj
T*
({)Tj
2.4 -1.5 TD
(semclose\(&q->mutex\);)Tj
T*
(semclose\(&q->nchars\);)Tj
T*
(semclose\(&q->nholes\);)Tj
T*
(q->hd = q->tl = 0;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 594 Tm
0.1124 Tw
[(¡Ahora hay que hacer la parte interesante! P)15(ara poner un carácter en la cola necesitamos y hueco, lue)15(go)]TJ
0 -1.2 TD
0.0016 Tw
[(ponerlo mientras tenemos el mute)15(x)-251.6(\(para e)25(vitar condiciones de carrera en el uso de la cola\) y además hemos)]TJ
T*
0 Tw
[(de echar un tick)10(et al semáforo que indica cuántos ítems hay en la cola:)]TJ
/TT9 1 Tf
8 0 0 8 133 552 Tm
(static int)Tj
0 -1.5 TD
(qput\(Queue *q, int c\))Tj
T*
({)Tj
2.4 -1.5 TD
(if \(semdown\(&q->nholes\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(semdown\(&q->mutex\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(q->buf[q->tl] = c;)Tj
T*
(q->tl = \(q->tl+1\)%QSIZE;)Tj
T*
(if \(semup\(&q->mutex\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(semup\(&q->nchars\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return 0;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 306 Tm
0.0154 Tw
[(T)80(omar un carácter de la cola es simétrico con respecto a ponerlo. Esta v)15(ez pedimos ítems y generamos hue-)]TJ
0 -1.2 TD
0 Tw
(cos:)Tj
ET
endstream
endobj
17 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
19 0 obj
<<
/Length 1939
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-4-)Tj
/TT9 1 Tf
8 0 0 8 133 708 Tm
(static int)Tj
0 -1.5 TD
(qget\(Queue *q\))Tj
T*
({)Tj
2.4 -1.5 TD
(int c;)Tj
0 -3 TD
(if \(semdown\(&q->nchars\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(semdown\(&q->mutex\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
[(c)-600(=)-600(q->buf[q->hd];)]TJ
T*
(q->hd = \(q->hd+1\)%QSIZE;)Tj
T*
(if \(semup\(&q->mutex\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(semup\(&q->nholes\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return c;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 438 Tm
[(Y)100(a)100( )-100(podemos declarar la cola:)]TJ
/TT9 1 Tf
8 0 0 8 133 420 Tm
(static Queue q;)Tj
/TT6 1 Tf
10 0 0 10 72 390 Tm
(Un)Tj
/TT4 1 Tf
1.4722 0 TD
[(pr)45(oductor)]TJ
/TT6 1 Tf
4.205 0 TD
(será un proceso que pone caracteres en la cola. En nuestro caso cada productor pondrá 10:)Tj
/TT9 1 Tf
8 0 0 8 133 372 Tm
(static void*)Tj
0 -1.5 TD
(tput\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(char *s;)Tj
T*
(int i;)Tj
0 -3 TD
0.6 Tc
[(s=a)600(;)]TJ
0 -1.5 TD
0 Tc
(for \(i = 0; i < 10; i++\) {)Tj
2.4 -1.5 TD
(if \(qput\(&q, *s\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "qput"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 198 Tm
0.0578 Tw
(Hemos pasado como parámetro un puntero a un)Tj
/TT9 1 Tf
19.8458 0 TD
0 Tw
(char)Tj
/TT6 1 Tf
2.7083 0 TD
-0.0001 Tc
0.058 Tw
[(para que cada productor ponga)-308(u)-0.1(n)-308(carácter distinto)]TJ
-22.5541 -1.2 TD
0 Tc
0 Tw
(en la cola.)Tj
0 -2.4 TD
-0.0001 Tc
0.0676 Tw
[(El consumidor v)24.9(a)-317.6(a)-317.6(sacar de la cola todo lo que pueda hasta que obtenga)-317.6(u)-0.1(n)]TJ
/TT9 1 Tf
31.4841 0 TD
0 Tc
0 Tw
(0)Tj
/TT6 1 Tf
0.6001 0 TD
0.0674 Tw
[(,)-317.4(con lo que marcaremos el)]TJ
/TT7 1 Tf
-32.0842 -1.2 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(nal de los datos:)Tj
ET
endstream
endobj
20 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT4 5 0 R
/TT6 6 0 R
/TT7 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
22 0 obj
<<
/Length 1624
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-5-)Tj
/TT9 1 Tf
8 0 0 8 133 708 Tm
(static void*)Tj
0 -1.5 TD
(tget\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(int c;)Tj
T*
(char buf[1];)Tj
0 -3 TD
(for \(;;\) {)Tj
2.4 -1.5 TD
[(c)-600(=)-600(qget\(&q\);)]TJ
T*
(if \(c == 0\) {)Tj
2.4 -1.5 TD
(break;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(c < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "qget"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(buf[0] = c;)Tj
T*
(if \(write\(1, buf, 1\) != 1\) {)Tj
2.4 -1.5 TD
(err\(1, "write"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 438 Tm
[(Por último, nuestro programa principal inicializará la cola y creará dos productores y un consumidor)55(.)]TJ
/TT9 1 Tf
8 0 0 8 133 420 Tm
(int)Tj
T*
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
(pthread_t p1, p2, g;)Tj
T*
(void *sts;)Tj
0 -3 TD
(if \(qinit\(&q\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "qinit"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(pthread_create\(&p1, NULL, tput, "a"\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(pthread_create\(&p2, NULL, tput, "b"\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(pthread_create\(&g, NULL, tget, NULL\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(pthread_join\(p1, &sts\);)Tj
T*
(pthread_join\(p2, &sts\);)Tj
T*
(if \(qput\(&q, 0\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "qput"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(pthread_join\(g, &sts\);)Tj
T*
(write\(1, "\\n", 1\);)Tj
T*
(qterm\(&q\);)Tj
T*
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 66 Tm
(¡Listos para ejecutarlo!)Tj
ET
endstream
endobj
23 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
25 0 obj
<<
/Length 849
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-6-)Tj
/TT9 1 Tf
8 0 0 8 133 708 Tm
(unix$ pc)Tj
0 -1.5 TD
(bbaabaaaaabababbabbb)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 654 Tm
0.0278 Tw
[(Este problema es muy importante. En casi todos los programas utilizarás algún tipo de b)20(u)0(f)25(fer compartido y)]TJ
0 -1.2 TD
0.036 Tw
[(necesitarás código que resuelv)25(a)-286.1(e)0(l)-286.1(problema del productor)20(-consumidor)55(.)-286.1(Además, es un b)20(uen problema para)]TJ
T*
0.0186 Tw
[(terminar de entender cómo se utilizan los semáforos y cómo funcionan. Observ)25(a)-268.6(que si el b)20(u)0(f)25(fer se llena, el)]TJ
T*
0.0049 Tw
[(productor espera a tener hueco. Igualmente, si el b)20(u)0(f)25(fer se v)25(acía, el consumidor espera a tener algo que con-)]TJ
T*
0 Tw
[(sumir)55(.)-250(¡Los pipes funcionan de este modo!)]TJ
ET
endstream
endobj
26 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 9 0 R
>>
>>
endobj
9 0 obj
<<
/Type /ExtGState
/SA false
/SM 0.02
/OP false
/op false
/OPM 1
/BG2 /Default
/UCR2 /Default
/HT /Default
/TR2 /Default
>>
endobj
27 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 676
/Descent -250
/Flags 262178
/FontBBox [-168 -218 1000 935]
/FontName /Times-Bold
/ItalicAngle 0
/StemV 133
/XHeight 461
/StemH 139
>>
endobj
28 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 653
/Descent -250
/Flags 98
/FontBBox [-169 -217 1010 883]
/FontName /Times-Italic
/ItalicAngle -15
/StemV 76
/XHeight 441
/StemH 76
>>
endobj
29 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 662
/Descent -250
/Flags 34
/FontBBox [-168 -218 1000 898]
/FontName /Times-Roman
/ItalicAngle 0
/StemV 84
/XHeight 450
/StemH 84
>>
endobj
30 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 662
/Descent -250
/Flags 34
/FontBBox [-168 -218 1000 898]
/FontName /Times-Roman
/ItalicAngle 0
/StemV 84
/XHeight 450
/StemH 84
>>
endobj
31 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 35
/FontBBox [-28 -250 628 805]
/FontName /Courier
/ItalicAngle 0
/StemV 51
/XHeight 426
/StemH 51
>>
endobj
32 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 262179
/FontBBox [-113 -250 749 801]
/FontName /Courier-Bold
/ItalicAngle 0
/StemV 133
/XHeight 439
/StemH 84
>>
endobj
4 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 243
/Widths [250 0 0 0 0 0 0 0 0 0 0 0 0 333 250 278 
0 500 0 0 0 0 0 0 0 0 333 0 0 0 0 0 
0 0 667 722 0 0 611 0 0 389 0 0 0 0 0 778 
0 0 0 556 0 0 0 0 0 0 0 0 0 0 0 0 
0 500 556 444 556 444 333 500 0 278 0 0 278 833 556 500 
556 0 444 389 333 556 500 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 500 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Bold
/FontDescriptor 27 0 R
>>
endobj
5 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 120
/Widths [250 0 0 0 0 0 0 0 0 0 0 0 0 333 250 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 611 667 0 611 611 0 0 0 444 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 500 500 444 500 444 278 0 0 278 0 0 278 722 500 500 
500 0 389 389 278 500 0 0 444 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Italic
/FontDescriptor 28 0 R
>>
endobj
6 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 250
/Widths [250 333 0 0 0 0 0 0 333 333 0 0 250 333 250 0 
500 500 500 500 500 500 500 0 0 0 278 0 0 0 0 0 
0 722 0 667 0 611 0 0 722 333 0 0 611 0 722 722 
556 0 0 556 611 722 722 0 0 722 0 0 0 0 0 0 
0 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 
500 500 333 389 278 500 500 0 500 500 444 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 350 0 0 0 0 0 0 0 0 0 0 
0 333 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 444 0 0 0 0 0 0 0 444 0 0 0 278 0 0 
0 0 0 500 0 0 0 0 0 0 500 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Roman
/FontDescriptor 29 0 R
>>
endobj
7 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 222
/LastChar 222
/Widths [556 ]
/Encoding /MacRomanEncoding
/BaseFont /Times-Roman
/FontDescriptor 30 0 R
>>
endobj
8 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 237
/Widths [600 600 600 600 600 600 600 0 600 600 600 600 600 600 600 0 
600 600 600 0 600 0 0 0 0 0 0 600 600 600 600 0 
0 0 0 0 0 600 0 0 0 600 0 0 600 0 600 0 
0 600 0 600 0 600 0 0 0 0 600 600 600 600 0 600 
0 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 0 600 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier
/FontDescriptor 31 0 R
>>
endobj
14 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 46
/LastChar 112
/Widths [600 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 600 0 600 
0 0 0 0 0 600 0 0 0 0 0 0 0 0 0 0 
0 0 600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier-Bold
/FontDescriptor 32 0 R
>>
endobj
1 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 3 0 R
/Contents 2 0 R
>>
endobj
11 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 13 0 R
/Contents 12 0 R
>>
endobj
15 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 17 0 R
/Contents 16 0 R
>>
endobj
18 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 20 0 R
/Contents 19 0 R
>>
endobj
21 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 23 0 R
/Contents 22 0 R
>>
endobj
24 0 obj
<<
/Type /Page
/Parent 10 0 R
/Resources 26 0 R
/Contents 25 0 R
>>
endobj
33 0 obj
<<
/S /D
>>
endobj
34 0 obj
<<
/Nums [0 33 0 R ]
>>
endobj
10 0 obj
<<
/Type /Pages
/Kids [1 0 R 11 0 R 15 0 R 18 0 R 21 0 R 24 0 R]
/Count 6
/MediaBox [0 0 612 792]
>>
endobj
35 0 obj
<<
/CreationDate (D:20160905151721+02'00')
/ModDate (D:20160905151721+02'00')
/Producer (Apple pstopdf)
>>
endobj
36 0 obj
<<
/Type /Catalog
/Pages 10 0 R
/PageLabels 34 0 R
>>
endobj
xref
0 37
0000000000 65535 f 
0000019170 00000 n 
0000000016 00000 n 
0000005396 00000 n 
0000016179 00000 n 
0000016841 00000 n 
0000017239 00000 n 
0000017976 00000 n 
0000018146 00000 n 
0000014850 00000 n 
0000019739 00000 n 
0000019251 00000 n 
0000005535 00000 n 
0000008220 00000 n 
0000018856 00000 n 
0000019335 00000 n 
0000008351 00000 n 
0000009830 00000 n 
0000019419 00000 n 
0000009937 00000 n 
0000011929 00000 n 
0000019503 00000 n 
0000012058 00000 n 
0000013735 00000 n 
0000019587 00000 n 
0000013842 00000 n 
0000014743 00000 n 
0000014990 00000 n 
0000015192 00000 n 
0000015392 00000 n 
0000015589 00000 n 
0000015786 00000 n 
0000015977 00000 n 
0000019671 00000 n 
0000019699 00000 n 
0000019856 00000 n 
0000019979 00000 n 
trailer
<<
/Size 37
/Root 36 0 R
/Info 35 0 R
/ID [<ee4ab57346f0221dac491ea09cc0c465><ee4ab57346f0221dac491ea09cc0c465>]
>>
startxref
20049
%%EOF
