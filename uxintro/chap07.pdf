%PDF-1.3
%âãÏÓ
2 0 obj
<<
/Length 4151
>>
stream
BT
/TT2 1 Tf
12 0 0 12 158.01 669 Tm
0 g
/GS1 gs
0 Tc
0 Tw
[(Intr)18(oducción a Sistemas Operati)10(v)10(os: Concurr)18(encia)]TJ
/TT4 1 Tf
10 0 0 10 241.08 633 Tm
[(F)55(r)55( )210(ancisco J Ballester)45(os)]TJ
/TT2 1 Tf
-16.908 -4.8 TD
[(1. )-250(Thr)18(eads y pr)18(ocesos)]TJ
/TT6 1 Tf
0 -1.56 TD
0.0183 Tw
(Hemos utilizado)Tj
/TT8 1 Tf
6.8686 0 TD
0 Tw
(fork)Tj
/TT6 1 Tf
2.6687 0 TD
0.0182 Tw
(para crear procesos, lo que hace que los procesos hijo)Tj
/TT4 1 Tf
21.868 0 TD
0 Tw
(no)Tj
/TT6 1 Tf
1.2682 0 TD
0.0182 Tw
(compartan recursos con el)Tj
-32.6736 -1.2 TD
0.2726 Tw
[(padre: tienen su propia copia de los se)15(gmentos de memoria, descriptores de )]TJ
/TT9 1 Tf
33.6634 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.2726 Tw
(chero, etc. Esa es la)Tj
-34.2196 -1.2 TD
0.0729 Tw
[(abstracción, aunque en realidad, el se)15(gmento de te)15(xto se suele compartir \(dado que es de sólo lectura\). El)]TJ
T*
0.079 Tw
[(resto de se)15(gmentos se comportan como si no se compartiesen, pero UNIX hace que el padre y el hijo los)]TJ
T*
0.1742 Tw
[(compartan tras de)15(gradar sus permisos a sólo-lectura. Cuando un proceso intenta escribir en una de las)]TJ
T*
0.0299 Tw
(páginas que "no comparten", UNIX comprueba que, en efecto, el proceso puede escribir en ella y hace una)Tj
T*
0.0091 Tw
(copia de la página que comparten padre e hijo. Como en este punto cada proceso tiene su propia copia de la)Tj
T*
0.1113 Tw
[(página, los permisos vuelv)15(en a dejarse como lectura-escritura, y el proceso puede completar su escritura)]TJ
T*
0 Tw
(pensando que siempre ha tenido su propia copia. A esto se lo conoce como)Tj
/TT2 1 Tf
30.186 0 TD
(copy on write)Tj
/TT6 1 Tf
5.7769 0 TD
(.)Tj
-35.9629 -2.4 TD
0.0673 Tw
[(Un proceso para el k)10(ernel es, principalmente, el )]TJ
/TT9 1 Tf
19.8536 0 TD
0 Tw
(ß)Tj
/TT6 1 Tf
0.5562 0 TD
0.0672 Tw
[(ujo de control \(su jue)15(go de re)15(gistros ya sea en el proce-)]TJ
-20.4097 -1.2 TD
0.0645 Tw
[(sador o salv)25(ado en su pila de k)10(ernel y su pila, tanto la de usuario como la de k)10(ernel\). El resto de recursos)]TJ
T*
0 Tw
(puede o no compartirlos con el proceso que lo ha creado.)Tj
0 -2.4 TD
0.0377 Tw
[(A)-287.8(l)0(a)-287.8(vista de esto, resulta posible crear un nue)25(v)20(o)20( )-20.1(proceso que comparta la memoria con el padre. A esto se)]TJ
0 -1.2 TD
0.0533 Tw
(lo suele denominar)Tj
/TT2 1 Tf
8.0188 0 TD
0 Tw
[(thr)18(ead)]TJ
/TT6 1 Tf
2.815 0 TD
0.0534 Tw
[(.)-303.3(E)0(l)-303.3(nombre procede de los tiempos en que el k)10(ernel no sabía nada de threads y)]TJ
-10.8338 -1.2 TD
0.0206 Tw
(éstos eran)Tj
/TT4 1 Tf
4.2619 0 TD
[(pr)45(ocesos lig)10(er)45(os de usuario)]TJ
/TT6 1 Tf
11.3153 0 TD
0 Tw
(o)Tj
/TT4 1 Tf
0.7705 0 TD
(corutinas)Tj
/TT6 1 Tf
4.0483 0 TD
0.0205 Tw
(creadas por la librería de C \(u otra similar\) sin ayuda del)Tj
-20.396 -1.2 TD
0.136 Tw
[(k)10(ernel. Desde hace años, los threads son procesos como cualquier otro y el k)10(ernel los plani)]TJ
/TT9 1 Tf
38.3144 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5561 0 TD
0.136 Tw
(ca como a)Tj
-38.8706 -1.2 TD
0.0408 Tw
[(cualquier otro proceso. Lo único que sucede es que algunos procesos comparten se)15(gmentos de memoria \(y)]TJ
T*
0 Tw
[(otros recursos\) con otros procesos.)-500(Eso es todo. Si piensas en los threads como en procesos todo irá bien.)]TJ
0 -2.4 TD
0.0042 Tw
(Resulta más cómodo \(y es más portable\) crear un proceso que comparte los recursos con el padre utilizando)Tj
0 -1.2 TD
0 Tw
(la)Tj
/TT4 1 Tf
1.0482 0 TD
0.0765 Tw
[(libr)37(ería de pthr)37(eads)]TJ
/TT6 1 Tf
8.405 0 TD
(que está instalada en prácticamente todos los sistemas UNIX que utilizando la lla-)Tj
-9.4532 -1.2 TD
0 Tw
[(mada al sistema in)40(v)20(olucrada \(que suele además v)25(ariar mucho de unos UNIX a otros\).)]TJ
0 -2.4 TD
(El siguiente programa crea tres threads que imprimen 5 mensajes cada uno.)Tj
/TT11 1 Tf
6.1 -1.8 TD
([thr.c])Tj
/TT6 1 Tf
4.2007 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 239.4 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include <stdlib.h>)Tj
T*
(#include <pthread.h>)Tj
T*
(#include <err.h>)Tj
T*
(#include <string.h>)Tj
/TT6 1 Tf
10 0 0 10 72 24 Tm
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
3 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
13 0 obj
<<
/Length 2492
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-2-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(static void*)Tj
0 -1.5 TD
(tmain\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i;)Tj
T*
(char *arg, *sts;)Tj
0 -3 TD
(arg = a;)Tj
0 -1.5 TD
(for\(i = 0; i < 5; i++\) {)Tj
2.4 -1.5 TD
(write\(2, arg, strlen\(arg\)\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(asprintf\(&sts, "end %s", strchr\(arg, ’t’\)\);)Tj
T*
(free\(arg\);)Tj
T*
(return sts;)Tj
-2.4 -1.5 TD
(})Tj
0 -4.5 TD
(int)Tj
0 -1.5 TD
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i;)Tj
T*
(pthread_t thr[3];)Tj
T*
(void *sts[3];)Tj
T*
(char tabs[10], *a;)Tj
0 -3 TD
(for\(i = 0; i < 3; i++\) {)Tj
2.4 -1.5 TD
(memset\(tabs, ’\\t’, sizeof tabs\);)Tj
T*
(tabs[i] = 0;)Tj
T*
(asprintf\(&a, "%st %d\\n", tabs, i\);)Tj
T*
(if\(pthread_create\(thr+i, NULL, tmain, a\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
0 -3 TD
(for\(i = 0; i < 3; i++\) {)Tj
2.4 -1.5 TD
(pthread_join\(thr[i], sts+i\);)Tj
T*
(printf\("join %d: %s\\n", i, sts[i]\);)Tj
T*
(free\(sts[i]\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 210 Tm
[(El programa crea un nue)25(v)20(o)20( )-20(thread utilizando código como)]TJ
/TT8 1 Tf
8 0 0 8 133 192 Tm
(pthread_t thr;)Tj
T*
(...)Tj
T*
(if \(pthread_create\(&thr, NULL, func, funcarg\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 126 Tm
0.0632 Tw
[(La llamada crea un proceso que comparte los recursos con el que hace la llamada y arre)15(gla las cosas para)]TJ
0 -1.2 TD
0.0265 Tw
[(que el nue)25(v)20(o)20( )]TJ
/TT9 1 Tf
5.3939 0 TD
0 Tw
(ß)Tj
/TT6 1 Tf
0.5562 0 TD
0.0265 Tw
(ujo de control ejecute)Tj
/TT8 1 Tf
8.9913 0 TD
0 Tw
(func\(funcarg\))Tj
/TT6 1 Tf
7.8013 0 TD
[(.)-276.5(Donde)]TJ
/TT8 1 Tf
3.469 0 TD
(func)Tj
/TT6 1 Tf
2.6769 0 TD
0.0265 Tw
(es el)Tj
/TT4 1 Tf
2.1077 0 TD
[(pr)45(o)10(g)0(r)15(ama principal)]TJ
/TT6 1 Tf
8.15 0 TD
0 Tw
[(o)-276.5(e)0(l)-276.5(punto)]TJ
-39.1461 -1.2 TD
[(de entrada del nue)25(v)20(o)20( )-20(thread y ha de tener una cabecera como)]TJ
/TT8 1 Tf
8 0 0 8 133 84 Tm
(void *func\(void *arg\))Tj
/TT6 1 Tf
10 0 0 10 72 66 Tm
0.0054 Tw
[(El ar)18(gumento que pasamos al )]TJ
/TT9 1 Tf
12.0334 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0054 Tw
(nal a)Tj
/TT8 1 Tf
2.1763 0 TD
0 Tw
(pthread_create)Tj
/TT6 1 Tf
8.6568 0 TD
0.0054 Tw
[(es el ar)18(gumento con que se llamará a dicho punto)]TJ
-23.4227 -4.2 TD
0 Tw
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
14 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
16 0 obj
<<
/Length 4148
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-3-)Tj
-21.017 -3.6 TD
0.0805 Tw
[(de entrada. Además, la función principal del thread de)25(vuelv)15(e)-330.5(u)0(n)]TJ
/TT8 1 Tf
26.5882 0 TD
0 Tw
(void*)Tj
/TT6 1 Tf
3.331 0 TD
0.0804 Tw
[(que hace las v)15(eces de)]TJ
/TT4 1 Tf
9.1878 0 TD
[(e)20(xit status)]TJ
/TT6 1 Tf
-39.107 -1.2 TD
0 Tw
(para el thread.)Tj
0 -2.4 TD
0.0543 Tw
[(El primer ar)18(gumento es un puntero a un)]TJ
/TT2 1 Tf
16.5785 0 TD
0 Tw
(tid)Tj
/TT6 1 Tf
1.4713 0 TD
[(o)-304.3(identi)]TJ
/TT9 1 Tf
3.0816 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0543 Tw
(cador de thread que utiliza la librería de threads para)Tj
-21.6876 -1.2 TD
0 Tw
(identi)Tj
/TT9 1 Tf
2.2773 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.007 Tw
[(car al thread en cuestión. Utilizarás este v)25(alor en sucesi)25(v)25(a)0(s)-257(llamadas que se re)]TJ
/TT9 1 Tf
31.0585 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5561 0 TD
0.007 Tw
(eran al thread que has)Tj
-34.4481 -1.2 TD
0.2214 Tw
(creado. Es similar al)Tj
/TT4 1 Tf
9.2992 0 TD
0 Tw
(pid)Tj
/TT6 1 Tf
1.7492 0 TD
0.2215 Tw
(de un proceso. Piensa que aunque cada thread tiene un proceso, la librería)Tj
-11.0484 -1.2 TD
0 Tw
(mantiene más información sobre cada thread y desea utilizar sus propios identi)Tj
/TT9 1 Tf
31.5176 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(cadores.)Tj
-32.0737 -2.4 TD
(El programa puede después llamar a)Tj
/TT8 1 Tf
8 0 0 8 133 594 Tm
(void *sts;)Tj
0 -1.5 TD
(...)Tj
T*
(pthread_join\(thr, &sts\);)Tj
/TT6 1 Tf
10 0 0 10 72 552 Tm
0.0887 Tw
[(para \(1\) esperar a que el thread termine y \(2\) obtener su estatus.)-588.7(Dicho de otro modo,)]TJ
/TT8 1 Tf
35.9964 0 TD
0 Tw
(pthread_join)Tj
/TT6 1 Tf
-35.9964 -1.2 TD
[(hace las v)15(eces de)]TJ
/TT4 1 Tf
7.0919 0 TD
(wait\(2\))Tj
/TT6 1 Tf
2.8887 0 TD
(.)Tj
-9.9806 -2.4 TD
0.0437 Tw
(Cuando no deseamos llamar a)Tj
/TT8 1 Tf
12.4651 0 TD
0 Tw
(pthread_join)Tj
/TT6 1 Tf
7.4949 0 TD
0.0437 Tw
(para un thread, debemos informar a la librería)Tj
/TT4 1 Tf
18.9249 0 TD
0 Tw
[(pthr)37(ead)]TJ
/TT6 1 Tf
3.3676 0 TD
(de)Tj
-42.2525 -1.2 TD
0.0199 Tw
(tal cosa \(¡Igual que sucedía con)Tj
/TT8 1 Tf
13.0027 0 TD
0 Tw
(fork)Tj
/TT6 1 Tf
2.6703 0 TD
(y)Tj
/TT8 1 Tf
0.7699 0 TD
(wait)Tj
/TT6 1 Tf
2.4004 0 TD
0.0198 Tw
[(!\). Una b)20(uena forma de hacerlo es hacer que la función prin-)]TJ
-18.8433 -1.2 TD
0 Tw
(cipal del thread llame a)Tj
/TT8 1 Tf
8 0 0 8 133 474 Tm
(pthread_t me;)Tj
0 -1.5 TD
(me = pthread_self\(\);)Tj
T*
(pthread_detach\(me\);)Tj
/TT6 1 Tf
10 0 0 10 72 432 Tm
0.1174 Tw
[(Pero observ)25(a)-367.4(que este código ejecuta en el nue)25(v)20(o)20( )-20(thread, no en el código del proceso padre. La función)]TJ
/TT8 1 Tf
0 -1.2 TD
0 Tw
(pthread_self)Tj
/TT6 1 Tf
7.4512 0 TD
(es como)Tj
/TT4 1 Tf
3.5547 0 TD
[(g)10(etpid\(2\))]TJ
/TT6 1 Tf
3.6555 0 TD
[(,)-250(pero de)25(vuelv)15(e)-250(e)0(l)]TJ
/TT4 1 Tf
7.3179 0 TD
[(thr)37(ead id)]TJ
/TT6 1 Tf
3.8517 0 TD
0.25 Tc
[(yn)250(oe)250(l)]TJ
/TT4 1 Tf
2.9717 0 TD
0 Tc
[(pr)45(ocess id)]TJ
/TT6 1 Tf
4.038 0 TD
(.)Tj
-32.8407 -2.4 TD
0.0203 Tw
[(Si ahora vuelv)15(es a leer el programa se)15(guramente entiendas las partes que antes te parecían oscuras. Cuando)]TJ
0 -1.2 TD
0 Tw
[(lo ejecutamos, podemos v)15(er una salida parecida a esta:)]TJ
/TT8 1 Tf
8 0 0 8 133 366 Tm
(unix$ thr)Tj
4.8 -1.5 TD
0.6 Tc
(t2)Tj
T*
(t2)Tj
T*
(t2)Tj
T*
(t2)Tj
-2.4 -1.5 TD
(t1)Tj
-2.4 -1.5 TD
(t0)Tj
2.4 -1.5 TD
(t1)Tj
-2.4 -1.5 TD
(t0)Tj
T*
(t0)Tj
T*
(t0)Tj
T*
(t0)Tj
2.4 -1.5 TD
(t1)Tj
T*
(t1)Tj
T*
(t1)Tj
2.4 -1.5 TD
(t2)Tj
-4.8 -1.5 TD
0 Tc
(join 0: end t 0)Tj
T*
(join 1: end t 1)Tj
T*
(join 2: end t 2)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 108 Tm
0.0379 Tw
[(Siendo procesos distintos... ¡No sabemos en qué orden v)25(an a ejecutar!)-538(Lue)15(go la salida se)15(guramente di)]TJ
/TT9 1 Tf
41.4188 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(era)Tj
-41.9749 -1.2 TD
0.0227 Tw
[(si repetimos la ejecución. Pero podemos v)15(er que los tres threads ejecutan concurrentemente que que el pro-)]TJ
T*
0.0175 Tw
(grama principal puede esperar correctamente a que terminen y recuperar el estatus de salida de cada uno de)Tj
T*
0 Tw
(ellos.)Tj
0 -4.8 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
17 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
19 0 obj
<<
/Length 1498
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-4-)Tj
-21.017 -3.6 TD
0.005 Tw
[(Se)15(guramente resultará instructi)25(v)20(o)20( )-20(que ahora intentes leer de nue)25(v)20(o)20( )-20(el)-255(programa trazando mentalmente cómo)]TJ
0 -1.2 TD
0 Tw
(ha podido producir la salida que hemos visto.)Tj
/TT2 1 Tf
0 -2.4 TD
0.25 Tw
[(2. Condiciones)-250(de )250(carr)18(era)]TJ
/TT6 1 Tf
0 -1.56 TD
0.1391 Tw
[(¿De nue)25(v)20(o?... ¡Sí! En cuanto más de un proceso utiliza el mismo recurso... hay condiciones de carrera.)]TJ
0 -1.2 TD
0 Tw
[(Ahora que podemos compartir memoria entre v)25(arios procesos v)25(amos a v)15(erlo de nue)25(v)20(o)0(.)]TJ
0 -2.4 TD
0.0799 Tw
[(El siguiente programa incrementa un contador un número dado de v)15(eces \(10 por omisión\) en tres threads)]TJ
0 -1.2 TD
0 Tw
(distintos:)Tj
/TT11 1 Tf
6.1 -1.8 TD
([race.c])Tj
/TT6 1 Tf
4.8008 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 578.4 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include <stdlib.h>)Tj
T*
(#include <pthread.h>)Tj
T*
(#include <err.h>)Tj
T*
(#include <string.h>)Tj
0 -3 TD
(enum { Nloops = 10 };)Tj
0 -1.5 TD
(static int nloops = Nloops;)Tj
0 -4.5 TD
(static void*)Tj
0 -1.5 TD
(tmain\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i;)Tj
T*
(int *cntp;)Tj
0 -3 TD
(cntp = a;)Tj
0 -1.5 TD
(for\(i = 0; i < nloops; i++\) {)Tj
2.4 -1.5 TD
(*cntp = *cntp + 1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 24 Tm
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
20 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
22 0 obj
<<
/Length 2158
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-5-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(int)Tj
0 -1.5 TD
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i, cnt;)Tj
T*
(pthread_t thr[3];)Tj
T*
(void *sts[3];)Tj
0 -3 TD
(if\(argc > 1\) {)Tj
2.4 -1.5 TD
(nloops = atoi\(argv[1]\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(cnt = 0;)Tj
T*
(for\(i = 0; i < 3; i++\) {)Tj
2.4 -1.5 TD
(if\(pthread_create\(thr+i, NULL, tmain, &cnt\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
0 -3 TD
(for\(i = 0; i < 3; i++\) {)Tj
2.4 -1.5 TD
(pthread_join\(thr[i], sts+i\);)Tj
T*
(free\(sts[i]\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(printf\("cnt is %d\\n", cnt\);)Tj
T*
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 402 Tm
[(Si lo ejecutamos, el contador debiera ser tres v)15(eces el número de incrementos, ¿No?. Y parece que es así...)]TJ
/TT8 1 Tf
8 0 0 8 133 384 Tm
(unix$ thr)Tj
T*
(cnt is 30)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 330 Tm
-0.0001 Tc
0.0001 Tw
[(Pero... ¡V)110.9(amos a ejecutarlo para que cada thread haga)-250.1(1000 incrementos!)]TJ
/TT8 1 Tf
8 0 0 8 133 312 Tm
0 Tc
0 Tw
(unix$ thr 1000)Tj
T*
(cnt is 2302)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 258 Tm
[(¡Otra v)15(ez!)]TJ
/TT8 1 Tf
8 0 0 8 133 240 Tm
(unix$ thr 1000)Tj
T*
(cnt is 2801)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 186 Tm
0.0318 Tw
(No te gustaría que pasara esto si se tratase del programa que controla ingresos en tu cuenta corriente. Esta-)Tj
0 -1.2 TD
0.0094 Tw
[(mos viendo simplemente el efecto de una condición de carrera en el uso de la v)25(ariable)]TJ
/TT8 1 Tf
34.7776 0 TD
0 Tw
(cnt)Tj
/TT6 1 Tf
1.8003 0 TD
0.0093 Tw
[(,)-259.3(que es compar)20(-)]TJ
-36.5779 -1.2 TD
0.089 Tw
(tida por todos los procesos del programa \(el proceso que teníamos desde el programa principal y los tres)Tj
T*
0 Tw
(threads que hemos creado\).)Tj
0 -2.4 TD
0.1319 Tw
[(Podemos v)15(erlo fácilmente si simpli)]TJ
/TT9 1 Tf
14.6216 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.1319 Tw
(camos el programa para que ejecute sólo dos threads y para que la)Tj
-15.1777 -1.2 TD
0 Tw
(función que ejecutan sea:)Tj
0 -9 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
23 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
25 0 obj
<<
/Length 1685
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-6-)Tj
/TT11 1 Tf
-14.917 -3.6 TD
([race2])Tj
/TT6 1 Tf
4.2007 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 696 Tm
(...)Tj
0 -1.5 TD
(static int cnt;)Tj
T*
(static void*)Tj
T*
(tmain\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i;)Tj
T*
(for \(i =0 ; i < 2; i++\) {)Tj
2.4 -1.5 TD
(cnt++;)Tj
-2.4 -1.5 TD
(})Tj
T*
(printf\("cnt is %d\\n", cnt\);)Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
T*
(...)Tj
/TT6 1 Tf
10 0 0 10 72 522 Tm
0.0356 Tw
(Ahora haremos dos incrementos en dos threads y hemos cambiado la declaración de)Tj
/TT8 1 Tf
34.3681 0 TD
0 Tw
(cnt)Tj
/TT6 1 Tf
2.0859 0 TD
0.0356 Tw
(para que sea una)Tj
-36.454 -1.2 TD
0 Tw
[(v)25(ariable global, por simpli)]TJ
/TT9 1 Tf
10.5282 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(car más.)Tj
-11.0844 -2.4 TD
[(Cuando lo ejecutamos v)15(emos:)]TJ
/TT8 1 Tf
8 0 0 8 133 468 Tm
(unix$ race2)Tj
0 -1.5 TD
(cnt is 2)Tj
T*
(cnt is 4)Tj
/TT6 1 Tf
10 0 0 10 72 426 Tm
[(T)80(odo bien.)]TJ
0 -2.4 TD
[(Cambiemos otra v)15(ez el código para que sea:)]TJ
/TT11 1 Tf
6.1 -1.8 TD
([race3])Tj
/TT6 1 Tf
4.2007 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 372 Tm
(static void*)Tj
0 -1.5 TD
(tmain\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i, loc;)Tj
T*
(for \(i =0 ; i < 2; i++\) {)Tj
2.4 -1.5 TD
(loc = cnt;)Tj
T*
(loc++;)Tj
T*
(cnt = loc;)Tj
-2.4 -1.5 TD
(})Tj
T*
(printf\("cnt is %d\\n", cnt\);)Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 222 Tm
[(Si lo ejecutamos, v)15(emos que todo sigue bien:)]TJ
/TT8 1 Tf
8 0 0 8 133 204 Tm
(unix$ race3)Tj
T*
(cnt is 2)Tj
T*
(cnt is 4)Tj
/TT6 1 Tf
10 0 0 10 72 150 Tm
(Pero si hacemos el siguiente cambio:)Tj
0 -12.6 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
26 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
28 0 obj
<<
/Length 4218
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-7-)Tj
/TT11 1 Tf
-14.917 -3.6 TD
([race4])Tj
/TT6 1 Tf
4.2007 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 696 Tm
(static void*)Tj
0 -1.5 TD
(tmain\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i, loc;)Tj
T*
(for \(i =0 ; i < 2; i++\) {)Tj
2.4 -1.5 TD
(loc = cnt;)Tj
T*
(loc++;)Tj
T*
(sleep\(1\);)Tj
T*
(cnt = loc;)Tj
-2.4 -1.5 TD
(})Tj
T*
(printf\("cnt is %d\\n", cnt\);)Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 534 Tm
(¡La cosa cambia!)Tj
/TT8 1 Tf
8 0 0 8 133 516 Tm
(unix$ race4)Tj
T*
(cnt is 2)Tj
T*
(cnt is 2)Tj
/TT6 1 Tf
10 0 0 10 72 462 Tm
0.1256 Tw
(Ambos threads escriben)Tj
/TT8 1 Tf
10.2352 0 TD
0 Tw
(2)Tj
/TT6 1 Tf
0.9757 0 TD
0.1256 Tw
[(como v)25(alor )]TJ
/TT9 1 Tf
5.0026 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.1256 Tw
(nal para)Tj
/TT8 1 Tf
3.6936 0 TD
0 Tw
(cnt)Tj
/TT6 1 Tf
1.8003 0 TD
0.1255 Tw
[(.)-375.6(Hemos pro)15(v)20(ocado que la condición de carrera se)]TJ
-22.2635 -1.2 TD
0 Tw
(mani)Tj
/TT9 1 Tf
1.9995 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0223 Tw
[(este. Esto quiere decir que, aunque no seamos conscientes, todas las v)15(ersiones anteriores de este pro-)]TJ
-2.5557 -1.2 TD
0 Tw
(grama están mal y no pueden utilizarse.)Tj
0 -2.4 TD
0.0965 Tw
(El problema de la condición de carrera procede en realidad de la)Tj
/TT4 1 Tf
27.1442 0 TD
0 Tw
(ilusión)Tj
/TT6 1 Tf
3.0691 0 TD
0.0964 Tw
(implementada por los procesos:)Tj
/TT4 1 Tf
-30.2133 -1.2 TD
0.2081 Tw
(ejecución secuencial independiente)Tj
/TT6 1 Tf
14.5764 0 TD
[(.)-458.1(Resulta que si tenemos un sólo procesador)40(,)-458.2(l)0(a)-458.2(ejecución no es ni)]TJ
-14.5764 -1.2 TD
0.1312 Tw
[(secuencial ni independiente. UNIX multiple)15(xa \(reparte\) el procesador entre los procesos, y aun así pen-)]TJ
T*
0 Tw
(samos que nuestros programas ejecutan secuencialmente y sin interferencias.)Tj
0 -2.4 TD
0.0446 Tw
(Lo que sucede en realidad es que las instrucciones de los procesos se)Tj
/TT4 1 Tf
28.3762 0 TD
0 Tw
(mezclan)Tj
/TT6 1 Tf
3.5715 0 TD
0.0446 Tw
(en un único )Tj
/TT9 1 Tf
5.0493 0 TD
0 Tw
(ß)Tj
/TT6 1 Tf
0.5562 0 TD
0.0446 Tw
(ujo de control)Tj
-37.5531 -1.2 TD
0.1186 Tw
[(implementado por el procesador)55(.)-368.6(Esto es, ejecutará determinado número de instrucciones de un proceso,)]TJ
T*
0.021 Tw
[(lue)15(go tendremos un cambio de conte)15(xto y ejecutará otro, lue)15(go otro, etc. No sabemos cuándo sucederán los)]TJ
T*
0.0654 Tw
[(cambios de conte)15(xto y por tanto no sabemos en qué orden se mezclaran las instrucciones. Se suele llamar)]TJ
/TT2 1 Tf
T*
0 Tw
[(interlea)25(ving)]TJ
/TT6 1 Tf
5.3354 0 TD
(\(entrelazado\) al mezclado de instrucciones, por cierto.)Tj
-5.3354 -2.4 TD
[(Las primeras v)15(eces que hemos utilizado el programa resulta que todas las instrucciones in)40(v)20(olucradas en)]TJ
/TT8 1 Tf
8 0 0 8 133 264 Tm
(cnt++)Tj
/TT6 1 Tf
10 0 0 10 72 246 Tm
0.0635 Tw
(han ejecutado. Cuando hemos cambiado el código para que sea más parecido a las instrucciones que real-)Tj
0 -1.2 TD
0 Tw
(mente ejecutan)Tj
/TT8 1 Tf
8 0 0 8 133 216 Tm
(loc = cnt;)Tj
0 -1.5 TD
(loc++;)Tj
T*
(cnt = loc;)Tj
/TT6 1 Tf
10 0 0 10 72 174 Tm
[(hemos se)15(guido teniendo \(mala\) suerte y dichas instrucciones han ejecutado sin interrupción.)]TJ
0 -2.4 TD
0.0268 Tw
(Así pues, la ilusión de ejecución secuencial y sin interferencia se ha mantenido. Cuando incrementamos un)Tj
0 -1.2 TD
0.1167 Tw
[(re)15(gistro para incrementar la v)25(ariable el mundo se)15(guía como lo dejamos en la línea anterior y la v)25(ariable)]TJ
T*
0.0638 Tw
[(global \(en la memoria\) se)15(guía teniendo el mismo v)25(alor)55(.)-313.8(Cuando actualizamos en la siguiente línea la v)25(ari-)]TJ
T*
0 Tw
[(able global nadie había consultado ni cambiado la v)25(ariable mientras ejecutamos.)]TJ
0 -2.4 TD
0.0821 Tw
(Al introducir la llamada a)Tj
/TT8 1 Tf
10.9344 0 TD
0 Tw
(sleep)Tj
/TT6 1 Tf
3.3326 0 TD
0.0821 Tw
[(hemos pro)15(v)20(ocado un cambio de conte)15(xto justo en el punto en que ten-)]TJ
-14.267 -1.2 TD
0.0913 Tw
[(emos la condición de carrera \(durante la consulta e incremento de la global\). El efecto puede v)15(erse en la)]TJ
/TT9 1 Tf
T*
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(gura 1.)Tj
-0.5562 -4.2 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
29 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
31 0 obj
<<
/Length 3734
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-8-)Tj
/TT2 1 Tf
8 0 0 8 180 700.84 Tm
[(Thr)18(ead #1)-7185(memoria)-11584.5(Thr)18(ead #2)]TJ
ET
0 G
1 J 1 j 0.32 w 10 M []0 d
1 i 
162 679.2 36 10.8 re
S
BT
/TT8 1 Tf
8 0 0 8 165.6 682.84 Tm
(loc: ?)Tj
ET
270 679.2 36 10.8 re
S
BT
8 0 0 8 273.6 682.84 Tm
(cnt: 0)Tj
ET
378 679.2 36 10.8 re
S
BT
8 0 0 8 381.6 682.84 Tm
(loc: ?)Tj
-25.2 -2.25 TD
(loc = cnt)Tj
0 -1.35 TD
(sleep)Tj
ET
162 632.4 36 10.8 re
S
BT
8 0 0 8 165.6 636.04 Tm
(loc: 0)Tj
ET
270 632.4 36 10.8 re
S
BT
8 0 0 8 273.6 636.04 Tm
(cnt: 0)Tj
ET
378 632.4 36 10.8 re
S
BT
8 0 0 8 381.6 636.04 Tm
(loc: ?)Tj
1.8 -2.25 TD
(loc = cnt)Tj
0 -1.35 TD
(sleep)Tj
ET
162 585.6 36 10.8 re
S
BT
8 0 0 8 165.6 589.24 Tm
(loc: 0)Tj
ET
270 585.6 36 10.8 re
S
BT
8 0 0 8 273.6 589.24 Tm
(cnt: 0)Tj
ET
378 585.6 36 10.8 re
S
BT
8 0 0 8 381.6 589.24 Tm
(loc: 0)Tj
-25.2 -2.25 TD
(loc++)Tj
0 -1.35 TD
(cnt = loc)Tj
T*
(loc = cnt)Tj
T*
(sleep)Tj
ET
162 517.2 36 10.8 re
S
BT
8 0 0 8 165.6 520.84 Tm
(loc: 1)Tj
ET
270 517.2 36 10.8 re
S
BT
8 0 0 8 273.6 520.84 Tm
(cnt: 1)Tj
ET
378 517.2 36 10.8 re
S
BT
8 0 0 8 381.6 520.84 Tm
(loc: 0)Tj
1.8 -2.25 TD
(loc++)Tj
0 -1.35 TD
(cnt = loc)Tj
T*
(loc = cnt)Tj
T*
(sleep)Tj
ET
162 448.8 36 10.8 re
S
BT
8 0 0 8 165.6 452.44 Tm
(loc: 1)Tj
ET
270 448.8 36 10.8 re
S
BT
8 0 0 8 273.6 452.44 Tm
(cnt: 1)Tj
ET
378 448.8 36 10.8 re
S
BT
8 0 0 8 381.6 452.44 Tm
(loc: 1)Tj
-25.2 -2.25 TD
(loc++)Tj
0 -1.35 TD
(cnt = loc)Tj
T*
(loc = cnt)Tj
T*
(sleep)Tj
ET
162 380.4 36 10.8 re
S
BT
8 0 0 8 165.6 384.04 Tm
(loc: 2)Tj
ET
270 380.4 36 10.8 re
S
BT
8 0 0 8 273.6 384.04 Tm
(cnt: 2)Tj
ET
378 380.4 36 10.8 re
S
BT
8 0 0 8 381.6 384.04 Tm
(loc: 1)Tj
1.8 -2.25 TD
(loc++)Tj
0 -1.35 TD
(cnt = loc)Tj
T*
(loc = cnt)Tj
T*
(sleep)Tj
ET
162 312 36 10.8 re
S
BT
8 0 0 8 165.6 315.64 Tm
(loc: 2)Tj
ET
270 312 36 10.8 re
S
BT
8 0 0 8 273.6 315.64 Tm
(cnt: 2)Tj
ET
378 312 36 10.8 re
S
BT
8 0 0 8 381.6 315.64 Tm
(loc: 2)Tj
-25.2 -2.25 TD
(printf)Tj
27 -2.25 TD
(printf)Tj
/TT2 1 Tf
10 0 0 10 97 253 Tm
0.0246 Tw
(Figura 1:)Tj
/TT4 1 Tf
4.2709 0 TD
[(Un entr)37(elazado de sentencias en ambos pr)45(ocesos que da lugar a una condición de carr)37(er)15(a)]TJ
-4.2709 -1.2 TD
0 Tw
[(en la última ver)10(sión del pr)45(o)10(g)0(r)15(ama.)]TJ
/TT6 1 Tf
-2.5 -2.4 TD
0.0462 Tw
[(El problema consiste en que, después de haber consultado el v)25(alor del contador en la local)]TJ
/TT8 1 Tf
37.0072 0 TD
0 Tw
(loc)Tj
/TT6 1 Tf
2.0965 0 TD
0.0462 Tw
[(y)-296.2(antes de)]TJ
-39.1037 -1.2 TD
0.04 Tw
[(que actualicemos el v)25(alor del contador)40(,)]TJ
/TT4 1 Tf
16.0852 0 TD
0 Tw
[(otr)45(o)]TJ
/TT6 1 Tf
1.912 0 TD
0.0401 Tw
(proceso accede al contador y puede que incluso lo cambie. En)Tj
-17.9972 -1.2 TD
0 Tw
(la )Tj
/TT9 1 Tf
0.9717 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
[(gura podemos v)15(er que el entrelazado ha sido:)]TJ
0.9722 -1.56 TD
[(1. )-1500(El)-250(thread 1 consulta la v)25(ariable)]TJ
T*
[(2. )-1500(El)-250(thread 2 consulta la v)25(ariable)]TJ
T*
[(3. )-1500(El)-250(thread 1 incrementa su copia de la v)25(ariable \(re)15(gistro o v)25(ariable local\))]TJ
T*
[(4. )-1500(El)-250(thread 1 incrementa su copia de la v)25(ariable \(re)15(gistro o v)25(ariable local\))]TJ
T*
[(5. )-1500(El)-250(thread 1 actualiza la v)25(ariable)]TJ
T*
[(6. )-1500(El)-250(thread 2 actualiza la v)25(ariable)]TJ
-2.5 -2.4 TD
(Este)Tj
/TT4 1 Tf
2.0262 0 TD
(interleaving)Tj
/TT6 1 Tf
5.1365 0 TD
0.0545 Tw
[(pierde un incremento. El problema es que toda la secuencia de código utilizando la v)25(ari-)]TJ
-7.1627 -1.2 TD
0.0521 Tw
[(able no ejecuta de forma indi)25(visible \(se "cuela" otro proceso que utiliza la misma v)25(ariable\). Si este código)]TJ
0 -3.94 TD
0 Tw
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
32 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
34 0 obj
<<
/Length 5856
>>
stream
BT
/TT6 1 Tf
10 0 0 10 282.17 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-9-)Tj
-21.017 -3.6 TD
(fuese)Tj
/TT2 1 Tf
2.3599 0 TD
(atómico)Tj
/TT6 1 Tf
3.3877 0 TD
[(,)-250(esto es, ejecutase de forma indi)25(visible, no habría condición de carrera; pero no lo es.)]TJ
-5.7476 -2.4 TD
0.0756 Tw
[(Por ello es crítico que no se utilice la v)25(ariable global desde ningún otro proceso mientras la consultamos,)]TJ
0 -1.2 TD
0.0394 Tw
(incrementamos y actualizamos y llamamos)Tj
/TT2 1 Tf
17.6638 0 TD
[(r)18(egión crítica)]TJ
/TT6 1 Tf
6.0027 0 TD
[(a)-289.4(dicho fragmento de código. Una)]TJ
/TT4 1 Tf
14.0929 0 TD
0.0395 Tw
[(r)37(e)40(gión crítica)]TJ
/TT6 1 Tf
-37.7594 -1.2 TD
0.0631 Tw
(es simplemente código que accede a un recurso compartido y que plantea condiciones de carrera si no las)Tj
T*
0.2565 Tw
[(e)25(vitamos haciendo que ejecute de forma atómica \(indi)25(visible con respecto a otros que comparten el)]TJ
T*
0 Tw
(recurso\).)Tj
0 -2.4 TD
0.1243 Tw
(¿Qué sucedía en el programa inicial que hacía)Tj
/TT4 1 Tf
19.6521 0 TD
0 Tw
(n)Tj
/TT6 1 Tf
0.8742 0 TD
0.1242 Tw
(incrementos en 3 threads? Simplemente que hay cierta)Tj
-20.5263 -1.2 TD
0.1381 Tw
[(probabilidad de tener un cambio de conte)15(xto en la re)15(gión crítica. La probabilidad aumenta cuantas más)]TJ
T*
0.0102 Tw
[(v)15(eces ejecutemos la re)15(gión crítica. Al ejecutar mil v)15(eces el incremento en cada thread,)]TJ
/TT4 1 Tf
34.8028 0 TD
0 Tw
(algunos)Tj
/TT6 1 Tf
3.4271 0 TD
0.0101 Tw
(de los incre-)Tj
-38.2299 -1.2 TD
0 Tw
[(mentos sufrieron un cambio de conte)15(xto en mal sitio, eso es todo.)]TJ
/TT2 1 Tf
0 -2.4 TD
0.25 Tw
[(3. Cierr)18(es)]TJ
/TT6 1 Tf
0 -1.56 TD
0.1934 Tw
[(¿Cómo podemos e)25(vitar una condición de carrera como la que hemos visto?)-693.5(La respuesta viene de la)]TJ
0 -1.2 TD
0 Tw
(de)Tj
/TT9 1 Tf
0.9438 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0077 Tw
[(nición del problema. Necesitamos que la re)15(gión crítica ejecute atómicamente \(de forma indi)25(visible en lo)]TJ
-1.5 -1.2 TD
0.0493 Tw
(que se re)Tj
/TT9 1 Tf
3.6523 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0493 Tw
(ere a otros que utilizan el mismo recurso\). Decimos que necesitamos)Tj
/TT2 1 Tf
28.2557 0 TD
(exclusión mutua)Tj
/TT6 1 Tf
7.0224 0 TD
0.0494 Tw
[(.)-299.4(Esto es,)]TJ
-39.4866 -1.2 TD
0.0458 Tw
[(que si un proceso está en la re)15(gión crítica, otros no puedan estarlo. Dicho de otro modo, que si un proceso)]TJ
T*
0 Tw
(está utilizando el recurso compartido otros no puedan hacerlo.)Tj
0 -2.4 TD
0.0196 Tw
(En la )Tj
/TT9 1 Tf
2.3717 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0196 Tw
[(gura 2 puede v)15(erse lo que sucede si)]TJ
/TT8 1 Tf
14.5256 0 TD
0 Tw
(cnt++)Tj
/TT6 1 Tf
3.2701 0 TD
0.0196 Tw
(ejecuta de forma atómica. En este caso, al contrario que)Tj
-20.7235 -1.2 TD
0.0457 Tw
(antes, uno de los procesos ejecuta)Tj
/TT8 1 Tf
14.0198 0 TD
0 Tw
(cnt++)Tj
/TT6 1 Tf
3.2962 0 TD
-0.0003 Tc
0.0466 Tw
[(antes que otro. El que lle)14.7(ga después puede ejecutar)]TJ
/TT8 1 Tf
20.9943 0 TD
0 Tc
0 Tw
(cnt++)Tj
/TT6 1 Tf
3.2962 0 TD
[(par)20(-)]TJ
-41.6065 -1.2 TD
0.0161 Tw
[(tiendo del v)25(alor resultante del primero, sin que e)15(xista problema alguno. Incluso si no sabemos en qué orden)]TJ
T*
0 Tw
(ejecutan los)Tj
/TT8 1 Tf
4.998 0 TD
(cnt++)Tj
/TT6 1 Tf
3.0005 0 TD
[(,)-250(e)0(l)-250(v)25(alor )]TJ
/TT9 1 Tf
3.7514 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(nal resulta correcto.)Tj
/TT2 1 Tf
8 0 0 8 144.224 403.24 Tm
[(Thr)18(ead #1)-5605.5(Child)]TJ
ET
0 G
1 J 1 j 0.32 w 10 M []0 d
1 i 
179.82 381.6 36 10.8 re
S
BT
/TT8 1 Tf
8 0 0 8 183.42 385.24 Tm
(cnt: 0)Tj
-4.2 -2.25 TD
(cnt++)Tj
ET
179.82 345.6 36 10.8 re
S
BT
8 0 0 8 183.42 349.24 Tm
(cnt: 1)Tj
4.8 -2.25 TD
(cnt++)Tj
ET
179.82 309.6 36 10.8 re
S
BT
8 0 0 8 183.42 313.24 Tm
(cnt: 2)Tj
/TT2 1 Tf
1.217 -6.075 TD
(\(a\))Tj
ET
287.82 266.4 0.36 144 re
S
BT
8 0 0 8 324.584 403.24 Tm
[(Thr)18(ead #2)-5605.5(Child)]TJ
ET
360.18 381.6 36 10.8 re
S
BT
/TT8 1 Tf
8 0 0 8 363.78 385.24 Tm
(cnt: 0)Tj
4.8 -2.25 TD
(cnt++)Tj
ET
360.18 345.6 36 10.8 re
S
BT
8 0 0 8 363.78 349.24 Tm
(cnt: 1)Tj
-4.2 -2.25 TD
(cnt++)Tj
ET
360.18 309.6 36 10.8 re
S
BT
8 0 0 8 363.78 313.24 Tm
(cnt: 2)Tj
/TT2 1 Tf
1.189 -6.075 TD
(\(b\))Tj
10 0 0 10 97 243.4 Tm
0.0445 Tw
(Figura 2:)Tj
/TT4 1 Tf
4.3107 0 TD
[(Incr)37(ementando el contador de forma atómica no hay condiciones de carr)37(er)15(a, ya sea \(a\) o)]TJ
-4.3107 -1.2 TD
0 Tw
[(\(b\) lo que suceda en r)37(ealidad.)]TJ
/TT6 1 Tf
-2.5 -2.4 TD
0.0026 Tw
[(Dependiendo del recurso al que accedamos, tenemos di)25(v)15(ersas abstracciones para conse)15(guir e)15(xclusión mutua)]TJ
0 -1.2 TD
0.0791 Tw
[(en la re)15(gión crítica. Lo que necesitamos es una abstracción como mecanismo de)]TJ
/TT2 1 Tf
33.2232 0 TD
0 Tw
[(sincr)18(onización)]TJ
/TT6 1 Tf
6.4775 0 TD
0.079 Tw
(para que)Tj
-39.7007 -1.2 TD
-0.0001 Tc
0.0001 Tw
(unos procesos se pongan de acuerdo con otros.)Tj
0 -2.4 TD
0 Tc
0.0394 Tw
(En el caso de procesos que comparten memoria podemos utilizar una abstracción llamada)Tj
/TT2 1 Tf
36.6377 0 TD
0 Tw
[(cierr)18(e)]TJ
/TT6 1 Tf
2.7685 0 TD
0.0394 Tw
(para con-)Tj
-39.4062 -1.2 TD
0 Tw
[(se)15(guir tener e)15(xclusión mutua. La idea es rodear la re)15(gión crítica por código similar a...)]TJ
/TT8 1 Tf
8 0 0 8 133 129.4 Tm
(lock\(cierre\);)Tj
0 -1.5 TD
(... región crítica...)Tj
T*
(unlock\(cierre\);)Tj
/TT6 1 Tf
10 0 0 10 72 75.4 Tm
0.0026 Tw
[(La v)25(ariable)]TJ
/TT8 1 Tf
4.7551 0 TD
0 Tw
(cierre)Tj
/TT6 1 Tf
3.8532 0 TD
0.0025 Tw
[(y)-252.6(sus dos operaciones se comportan como una "lla)20(v)15(e)0(")-252.5(\(de ahí el nombre\). Sólo un pro-)]TJ
-8.6083 -1.2 TD
0.0048 Tw
(ceso puede tener el cierre. Cuando un proceso llama a)Tj
/TT8 1 Tf
21.8439 0 TD
0 Tw
(lock)Tj
/TT6 1 Tf
2.4004 0 TD
0.0048 Tw
[(,)-254.8(s)0(i)-254.8(e)0(l)-254.8(cierre está abierto \(libre\), el proceso echa)]TJ
-24.2443 -3.94 TD
0 Tw
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
35 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
37 0 obj
<<
/Length 4304
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-10-)Tj
-20.767 -3.6 TD
0.0642 Tw
(el cierre y continúa. Si el cierre está echado \(ocupado\) el proceso espera \(dentro de)Tj
/TT8 1 Tf
34.3912 0 TD
0 Tw
(lock)Tj
/TT6 1 Tf
2.4004 0 TD
0.0642 Tw
[(\))-314.2(y)65(,)-314.2(cuando esté)]TJ
-36.7916 -1.2 TD
0 Tw
(libre, el proceso echa el cierre y continúa. La operación)Tj
/TT8 1 Tf
22.4331 0 TD
(unlock)Tj
/TT6 1 Tf
3.8506 0 TD
(suelta o libera el cierre.)Tj
-26.2837 -2.4 TD
0.2134 Tw
(Existen instrucciones capaces de consultar y actualizar una posición de memoria de forma atómica y)Tj
0 -1.2 TD
0.143 Tw
(pueden utilizarse para implementar)Tj
/TT8 1 Tf
14.8991 0 TD
0 Tw
(lock)Tj
/TT6 1 Tf
2.7934 0 TD
(y)Tj
/TT8 1 Tf
0.893 0 TD
(unlock)Tj
/TT6 1 Tf
3.6006 0 TD
0.1429 Tw
[(.)-393(Basta usar un entero y suponer que si es cero el)]TJ
-22.1861 -1.2 TD
0 Tw
(cierre está libre y si no lo es está ocupado.)Tj
0 -2.4 TD
0.0178 Tw
(Dependiendo del tipo de cierre que utilicemos es posible que el proceso esté en un)Tj
/TT8 1 Tf
33.4506 0 TD
0 Tw
(while)Tj
/TT6 1 Tf
3.2683 0 TD
0.0178 Tw
(esperando a que)Tj
-36.7189 -1.2 TD
0.0566 Tw
(el cierre se libere. En tal caso el proceso utiliza el procesador para esperar y decimos que tenemos)Tj
/TT2 1 Tf
40.4176 0 TD
0 Tw
(espera)Tj
-40.4176 -1.2 TD
[(acti)10(v)10(a)]TJ
/TT6 1 Tf
2.5347 0 TD
0.0395 Tw
[(.)-289.5(A)-289.5(estos cierres se los conoce como)]TJ
/TT2 1 Tf
15.0059 0 TD
(spin locks)Tj
/TT6 1 Tf
4.2358 0 TD
[(.)-289.5(Igualmente, es posible que los cierres cooperen con)]TJ
-21.7764 -1.2 TD
0.0456 Tw
(UNIX y que el sistema pueda bloquear al proceso mientras espera. Esto último es lo deseable, pero has de)Tj
T*
0 Tw
[(consultar el manual para v)15(er qué cierres tienes disponibles en tu librería de threads.)]TJ
0 -2.4 TD
0.106 Tw
[(Cuando un cierre \(u otra abstracción\) se utiliza para dar e)15(xclusión mutua se lo denomina)]TJ
/TT2 1 Tf
37.201 0 TD
0 Tw
(mutex)Tj
/TT6 1 Tf
2.666 0 TD
[(.)-356(Suelen)]TJ
-39.867 -1.2 TD
[(usarse las e)15(xpresiones)]TJ
/TT4 1 Tf
9.0656 0 TD
[(co)10(g)10(e)0(r)-250(e)0(l)-250(mute)20(x)]TJ
/TT6 1 Tf
6.0962 0 TD
(y)Tj
/TT4 1 Tf
0.75 0 TD
[(soltar el mute)20(x)]TJ
/TT6 1 Tf
6.1734 0 TD
(para indicar que se echa el cierre y se libera.)Tj
-22.0852 -2.4 TD
0.0463 Tw
(Cuando utilizamos)Tj
/TT4 1 Tf
7.8695 0 TD
0 Tw
[(pthr)37(eads)]TJ
/TT6 1 Tf
3.7593 0 TD
0.0462 Tw
(tenemos a nuestra disposición el tipo de datos)Tj
/TT8 1 Tf
18.9214 0 TD
0 Tw
(pthread_mutex_t)Tj
/TT6 1 Tf
9.2977 0 TD
0.0462 Tw
(que rep-)Tj
-39.8478 -1.2 TD
0.0254 Tw
[(resenta un mute)15(x)-275.4(y)-275.4(funciones para adquirir y liberar el mute)15(x. P)15(ara implementar e)15(xclusión mutua basta con)]TJ
T*
0 Tw
(usar)Tj
/TT8 1 Tf
8 0 0 8 133 474 Tm
(pthread_mutex_lock\(&lock\);)Tj
0 -1.5 TD
(...región crítica...)Tj
T*
(pthread_mutex_unlock\(&lock\);)Tj
/TT6 1 Tf
10 0 0 10 72 432 Tm
[(Donde la v)25(ariable)]TJ
/TT8 1 Tf
7.3329 0 TD
(lock)Tj
/TT6 1 Tf
2.6504 0 TD
[(puede declararse e inicializarse se)15(gún)]TJ
/TT8 1 Tf
8 0 0 8 133 414 Tm
(pthread_mutex_t lock;)Tj
0 -1.5 TD
(...)Tj
T*
(pthread_mutex_init\(&lock, NULL\);)Tj
/TT6 1 Tf
10 0 0 10 72 372 Tm
[(Una v)15(ez deje de ser útil el mute)15(x, hay que liberar los recursos que usa llamando a)]TJ
/TT8 1 Tf
8 0 0 8 133 354 Tm
(pthread_mutex_destroy\(&lock\);)Tj
/TT6 1 Tf
10 0 0 10 72 324 Tm
0.0642 Tw
[(Un a)20(viso. T)80(odas estas llamadas de)25(vuelv)15(en en realidad una indicación de error)55(.)-314.2(Normalmente)]TJ
/TT8 1 Tf
37.9316 0 TD
0 Tw
(0)Tj
/TT6 1 Tf
0.9143 0 TD
0.0641 Tw
(is hacen el)Tj
-38.8459 -1.2 TD
0.1233 Tw
(trabajo y algún otro número si no. Hemos optado por no comprobar estos errores en los programas que)Tj
T*
0.0363 Tw
(mostramos en esta sección para no distraer del código que requiere la programación concurrente. Pero)Tj
/TT2 1 Tf
41.6391 0 TD
0 Tw
(hay)Tj
-41.6391 -1.2 TD
0.115 Tw
[(que compr)18(obar los err)18(or)18(es)]TJ
/TT6 1 Tf
12.0144 0 TD
[(cuando se utilicen en la práctica. Muchas v)15(eces sólo f)10(allan si el proceso se)]TJ
-12.0144 -1.2 TD
0 Tw
[(queda sin memoria disponible, pero eso no es una e)15(xcusa para no comprobar errores.)]TJ
0 -2.4 TD
(El siguiente programa es similar al del epígrafe anterior pero no presenta condiciones de carrera.)Tj
0 -22.8 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
38 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
40 0 obj
<<
/Length 970
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-11-)Tj
/TT11 1 Tf
-14.667 -3.6 TD
([safe.c])Tj
/TT6 1 Tf
4.8008 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 696 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include <stdlib.h>)Tj
T*
(#include <pthread.h>)Tj
T*
(#include <err.h>)Tj
T*
(#include <string.h>)Tj
0 -3 TD
(typedef struct Cnt Cnt;)Tj
0 -1.5 TD
(struct Cnt {)Tj
2.4 -1.5 TD
(int n;)Tj
T*
(pthread_mutex_t lock;)Tj
-2.4 -1.5 TD
(};)Tj
0 -3 TD
(enum { Nloops = 10 };)Tj
0 -1.5 TD
(static int nloops = Nloops;)Tj
0 -4.5 TD
(static void*)Tj
0 -1.5 TD
(tmain\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i;)Tj
T*
(Cnt *cntp;)Tj
0 -3 TD
(cntp = a;)Tj
0 -1.5 TD
(for\(i = 0; i < nloops; i++\) {)Tj
2.4 -1.5 TD
(pthread_mutex_lock\(&cntp->lock\);)Tj
T*
(cntp->n = cntp->n + 1;)Tj
T*
(pthread_mutex_unlock\(&cntp->lock\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 24 Tm
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
41 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
45 0 obj
<<
/Length 2770
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-12-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(int)Tj
0 -1.5 TD
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i;)Tj
T*
(Cnt cnt;)Tj
T*
(pthread_t thr[3];)Tj
T*
(void *sts[3];)Tj
0 -3 TD
(if\(argc > 1\) {)Tj
2.4 -1.5 TD
(nloops = atoi\(argv[1]\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(cnt.n = 0;)Tj
T*
(if\(pthread_mutex_init\(&cnt.lock, NULL\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "mutex"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(for\(i = 0; i < 3; i++\) {)Tj
2.4 -1.5 TD
(if\(pthread_create\(thr+i, NULL, tmain, &cnt\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
0 -3 TD
(for\(i = 0; i < 3; i++\) {)Tj
2.4 -1.5 TD
(pthread_join\(thr[i], sts+i\);)Tj
T*
(free\(sts[i]\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(pthread_mutex_destroy\(&cnt.lock\);)Tj
T*
(printf\("cnt is %d\\n", cnt.n\);)Tj
T*
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 342 Tm
0.0894 Tw
[(Hemos se)15(guido la costumbre de situar el cierre cerca del recurso al que cierra, si ello es posible. En este)]TJ
0 -1.2 TD
0 Tw
(caso, situamos tanto el cierre como el contador dentro de la misma estructura:)Tj
/TT8 1 Tf
8 0 0 8 133 312 Tm
(typedef struct Cnt Cnt;)Tj
0 -1.5 TD
(struct Cnt {)Tj
2.4 -1.5 TD
(int n;)Tj
T*
(pthread_mutex_t lock;)Tj
-2.4 -1.5 TD
(};)Tj
/TT6 1 Tf
10 0 0 10 72 234 Tm
[(Cuando los threads intentan incrementar el contador)40(,)-250(ejecutan)]TJ
/TT8 1 Tf
8 0 0 8 133 216 Tm
(pthread_mutex_lock\(&cntp->lock\);)Tj
T*
(cntp->n = cntp->n + 1;)Tj
T*
(pthread_mutex_unlock\(&cntp->lock\);)Tj
/TT6 1 Tf
10 0 0 10 72 174 Tm
-0.0002 Tc
0.0912 Tw
[(y)-341.2(uno de ellos lle)14.8(gará a)]TJ
/TT8 1 Tf
10.0226 0 TD
0 Tc
0 Tw
(pthread_mutex_lock)Tj
/TT6 1 Tf
11.1428 0 TD
0.091 Tw
(antes que los demás. Ese proceso adquiere el cierre y)Tj
-21.1653 -1.2 TD
-0.0002 Tc
0.0485 Tw
[(continúa. Si lle)14.8(gan)-298.5(otros a)]TJ
/TT8 1 Tf
10.8863 0 TD
0 Tc
0 Tw
(pthread_mutex_lock)Tj
/TT6 1 Tf
11.1001 0 TD
0.0483 Tw
[(antes de que el proceso que tiene el mute)15(x)-298.3(l)0(o)-298.3(suelte,)]TJ
-21.9863 -1.2 TD
0.087 Tw
(quedarán bloqueados dentro de)Tj
/TT8 1 Tf
13.0658 0 TD
0 Tw
(pthread_mutex_lock)Tj
/TT6 1 Tf
11.1388 0 TD
0.087 Tw
(hasta que el cierre quede libre. Si ahora edita-)Tj
-24.2045 -1.2 TD
0.1028 Tw
(mos el código y añadimos un)Tj
/TT8 1 Tf
12.5597 0 TD
0 Tw
(sleep)Tj
/TT6 1 Tf
3.3533 0 TD
0.1027 Tw
[(a)-352.8(mitad del incremento, como hicimos antes, v)15(eremos que no ten-)]TJ
-15.913 -1.2 TD
0 Tw
[(emos condiciones de carrera. Podemos v)15(er esto además en la siguiente ejecución:)]TJ
/TT8 1 Tf
8 0 0 8 133 108 Tm
(unix$ safe 10000)Tj
0 -1.5 TD
(cnt is 30000)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 66 Tm
(¡No se pierden incrementos!)Tj
0 -4.2 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
46 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
48 0 obj
<<
/Length 3101
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-13-)Tj
-20.767 -3.6 TD
0.0035 Tw
[(Por cierto, los mute)15(x)-253.5(d)0(e)]TJ
/TT4 1 Tf
9.7784 0 TD
0 Tw
[(pthr)37(ead\(3\))]TJ
/TT6 1 Tf
4.4934 0 TD
0.0035 Tw
(suelen bloquear el proceso para hacer que espere, por lo que no son)Tj
/TT4 1 Tf
27.257 0 TD
0 Tw
(spin)Tj
-41.5288 -1.2 TD
[(loc)20(ks)]TJ
/TT6 1 Tf
2.2847 0 TD
[(y)-250(n)0(o)-250(desperdician procesador)55(.)]TJ
-2.2847 -2.4 TD
0.1545 Tw
[(Otro detalle importante es que es posible inicializar un cierre usando un v)25(alor inicial, en lugar de usar)]TJ
/TT8 1 Tf
0 -1.2 TD
0 Tw
(pthread_mutex_init)Tj
/TT6 1 Tf
10.8018 0 TD
[(.)-500(P)15(ara hacerlo, basta usar código como:)]TJ
/TT8 1 Tf
8 0 0 8 133 642 Tm
(pthread_mutex_t lock = PTHREAD_MUTEX_INITIALIZER;)Tj
/TT2 1 Tf
10 0 0 10 72 612 Tm
0.25 Tw
[(4. Cierr)18(es )250(en )]TJ
/TT12 1 Tf
5.8966 0 TD
0 Tw
(Þ)Tj
/TT2 1 Tf
0.5562 0 TD
[(cher)18(os)]TJ
/TT6 1 Tf
-6.4527 -1.56 TD
0.0495 Tw
(El siguiente programa incrementa un contador que tenemos escrito dentro de un )Tj
/TT9 1 Tf
32.8054 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0495 Tw
(chero. Esto sucede en la)Tj
-33.3616 -1.2 TD
0.1255 Tw
[(realidad en aplicaciones que deben numerar secuencialmente recursos cada v)15(ez que ejecuta determinado)]TJ
T*
0.0697 Tw
(programa, por ejemplo. Si tenemos un )Tj
/TT9 1 Tf
15.9704 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero)Tj
/TT8 1 Tf
2.5404 0 TD
(datafile)Tj
/TT6 1 Tf
5.1205 0 TD
0.0697 Tw
(que contiene ")Tj
/TT8 1 Tf
5.8787 0 TD
0 Tw
(3)Tj
/TT6 1 Tf
0.6001 0 TD
0.0698 Tw
[(")-319.8(y)-319.8(ejecutamos el programa, el)]TJ
/TT9 1 Tf
-30.6662 -1.2 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero pasará a contener)Tj
/TT8 1 Tf
9.6606 0 TD
(4)Tj
/TT6 1 Tf
0.6001 0 TD
[(.)-250(E)0(l)-250(código del programa es simple:)]TJ
/TT11 1 Tf
-4.7169 -1.8 TD
([incr.c])Tj
/TT6 1 Tf
4.8008 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 530.4 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include <stdlib.h>)Tj
T*
(#include <err.h>)Tj
T*
(#include <string.h>)Tj
T*
(#include <sys/file.h>)Tj
0 -3 TD
(int)Tj
0 -1.5 TD
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
(int fd, n, nb;)Tj
T*
(char buf[100];)Tj
0 -3 TD
(fd = open\("datafile", O_RDWR\);)Tj
0 -1.5 TD
(if\(fd < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "open"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
[(n)-600(=)-600(read\(fd, buf, sizeof\(buf\)-1\);)]TJ
T*
(if\(n < 0\){)Tj
2.4 -1.5 TD
(err\(1, "read"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(buf[n] = 0;)Tj
T*
(nb = atoi\(buf\);)Tj
T*
(fprintf\(stderr, "nb is %d\\n", nb\);)Tj
0 -3 TD
(nb++;)Tj
0 -1.5 TD
(fprintf\(stderr, "set to %d\\n", nb\);)Tj
T*
(snprintf\(buf, sizeof buf, "%d", nb\);)Tj
T*
(lseek\(fd, 0, 0\);)Tj
T*
(if\(write\(fd, buf, strlen\(buf\)\) != strlen\(buf\)\) {)Tj
2.4 -1.5 TD
(err\(1, "write"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(close\(fd\);)Tj
T*
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 104.4 Tm
0.0098 Tw
[(Hemos incluído multiples prints que no tendríamos normalmente para que v)15(eamos qué sucede al ejecutarlo.)]TJ
0 -1.2 TD
0 Tw
[(V)111(amos a hacerlo:)]TJ
0 -6.84 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
49 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
/TT11 9 0 R
/TT12 50 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
52 0 obj
<<
/Length 3140
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-14-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(unix$ cat datafile)Tj
0 -1.5 TD
(3)Tj
T*
(unix$ incr)Tj
T*
(nb is 3)Tj
T*
(set to 4)Tj
T*
(unix$ cat datafile)Tj
T*
(4)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 606 Tm
[(T)80(odo bien.)]TJ
0 -2.4 TD
-0.0003 Tc
0.0003 Tw
(Pero pongamos un)Tj
/TT8 1 Tf
7.6889 0 TD
0 Tc
0 Tw
(sleep)Tj
/TT6 1 Tf
3.2505 0 TD
(de tal forma que el código use ahora)Tj
/TT8 1 Tf
8 0 0 8 133 564 Tm
(nb++;)Tj
0 -1.5 TD
(sleep\(5\);)Tj
/TT6 1 Tf
10 0 0 10 72 534 Tm
-0.0002 Tc
0.0002 Tw
(en lugar de tan sólo incrementar)Tj
/TT8 1 Tf
13.101 0 TD
0 Tc
0 Tw
(nb)Tj
/TT6 1 Tf
1.2002 0 TD
[(.)-250(Y)-250(ahora ejecutemos dos v)15(eces el programa:)]TJ
/TT8 1 Tf
8 0 0 8 133 516 Tm
(unix$ incr &)Tj
0 -1.5 TD
([1] 47846)Tj
T*
(nb is 4)Tj
T*
(unix$ incr)Tj
T*
(nb is 4)Tj
T*
(set to 5)Tj
T*
(set to 5)Tj
T*
(unix$ cat datafile)Tj
T*
(5)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 390 Tm
(¡Hemos perdido un incremento!)Tj
0 -2.4 TD
0.0131 Tw
(Naturalmente, dos procesos que acceden al mismo )Tj
/TT9 1 Tf
20.5292 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0131 Tw
(chero producen una condición de carrera por compartir)Tj
-21.0854 -1.2 TD
0 Tw
(el )Tj
/TT9 1 Tf
1.0604 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0887 Tw
[(chero. Necesitamos un cierre.)-588.7(Si ambos procesos compartiesen memoria podríamos utilizar un cierre)]TJ
-1.6165 -1.2 TD
0.0333 Tw
(como los que hemos antes sin ningún problema \(¡Aunque el recurso que cierran sea un )Tj
/TT9 1 Tf
35.4614 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0333 Tw
(chero y esté fuera)Tj
-36.0176 -1.2 TD
0.0189 Tw
[(de la memoria del proceso!\).)-518.9(Recuerda que todo esto es un con)40(v)15(enio. Hemos quedado en adquirir un cierre)]TJ
T*
0 Tw
[(antes de entrar en la re)15(gión crítica, pero es tan sólo un acuerdo.)]TJ
0 -2.4 TD
0.0102 Tw
(En este caso, por desgracia, los procesos no comparten memoria. Pero aún podemos solucionar el problema)Tj
0 -1.2 TD
0.0258 Tw
(con la ayuda de UNIX. En UNIX es posible adquirir un cierre sobre un )Tj
/TT9 1 Tf
29.0467 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0258 Tw
(chero e incluso sobre un rango de)Tj
-29.6029 -1.2 TD
0 Tw
(bytes dentro de un )Tj
/TT9 1 Tf
7.6094 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
[(chero. La llamada al sistema para conse)15(guirlo es)]TJ
/TT13 1 Tf
19.6159 0 TD
(ß)Tj
/TT4 1 Tf
0.5 0 TD
[(oc)20(k\(2\))]TJ
/TT6 1 Tf
2.5337 0 TD
[(.)-250(Concretamente,)]TJ
/TT8 1 Tf
8 0 0 8 133 252 Tm
(flock\(fd, LOCK_EX\);)Tj
/TT6 1 Tf
10 0 0 10 72 234 Tm
(echa el cierre en)Tj
/TT8 1 Tf
6.7725 0 TD
(fd)Tj
/TT6 1 Tf
1.4502 0 TD
[(de modo e)15(xclusi)25(v)20(o)20( )-20(\(como en los cierres que vimos antes\) y)]TJ
/TT8 1 Tf
8 0 0 8 133 216 Tm
(flock\(fd, LOCK_UN\);)Tj
/TT6 1 Tf
10 0 0 10 72 198 Tm
(libera el cierre. Si el proceso muere o cierra el descriptor de )Tj
/TT9 1 Tf
24.127 0 TD
(Þ)Tj
/TT6 1 Tf
0.5561 0 TD
(chero, el cierre se libera.)Tj
-24.6831 -2.4 TD
0.0801 Tw
[(Sabiendo esto, el siguiente programa es la v)15(ersión correcta del programa anterior)40(,)-330.2(sin condiciones de car)20(-)]TJ
0 -1.2 TD
0 Tw
(rera.)Tj
0 -13.8 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
53 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
/TT13 54 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
56 0 obj
<<
/Length 2980
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-15-)Tj
/TT11 1 Tf
-14.667 -3.6 TD
([safeincr])Tj
/TT6 1 Tf
6.001 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 696 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include <stdlib.h>)Tj
T*
(#include <err.h>)Tj
T*
(#include <string.h>)Tj
T*
(#include <sys/file.h>)Tj
0 -3 TD
(int)Tj
0 -1.5 TD
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
(int fd, n, nb;)Tj
T*
(char buf[100];)Tj
0 -3 TD
(fd = open\("datafile", O_RDWR\);)Tj
0 -1.5 TD
(if\(fd < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "open"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if\(flock\(fd, LOCK_EX\) != 0\){)Tj
2.4 -1.5 TD
(err\(1, "lock"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
[(n)-600(=)-600(read\(fd, buf, sizeof\(buf\)-1\);)]TJ
T*
(if\(n < 0\){)Tj
2.4 -1.5 TD
(err\(1, "read"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(buf[n] = 0;)Tj
T*
(nb = atoi\(buf\);)Tj
T*
(fprintf\(stderr, "nb is %d\\n", nb\);)Tj
0 -3 TD
(nb++;)Tj
T*
(fprintf\(stderr, "set to %d\\n", nb\);)Tj
0 -1.5 TD
(snprintf\(buf, sizeof buf, "%d", nb\);)Tj
T*
(lseek\(fd, 0, 0\);)Tj
T*
(if\(write\(fd, buf, strlen\(buf\)\) != strlen\(buf\)\) {)Tj
2.4 -1.5 TD
(err\(1, "write"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if\(flock\(fd, LOCK_UN\) != 0\){)Tj
2.4 -1.5 TD
(err\(1, "lock"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(close\(fd\);)Tj
T*
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 174 Tm
0.0472 Tw
[(Recuerda que todo esto es un con)40(v)15(enio. ¡Podríamos echar el cierre en un )]TJ
/TT9 1 Tf
29.882 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0472 Tw
(chero para trabajar en otro! Así)Tj
-30.4381 -1.2 TD
0.0935 Tw
(pues, tenemos ya la forma de trabajar con )Tj
/TT9 1 Tf
17.6577 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0935 Tw
(cheros compartidos. Basta pensar dónde y cómo disponemos)Tj
/TT9 1 Tf
-18.2138 -1.2 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.118 Tw
(cheros que usamos como cierre. Por ejemplo, muchos programas de correo utilizan un )Tj
/TT9 1 Tf
36.2733 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5561 0 TD
0.118 Tw
(chero llamado)Tj
/TT8 1 Tf
-37.3856 -1.2 TD
0 Tw
(.LOCK)Tj
/TT6 1 Tf
3.3007 0 TD
0.0503 Tw
[(en el directorio que contiene los b)20(uzones de correo \(que son )]TJ
/TT9 1 Tf
24.7745 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0503 Tw
[(cheros\). P)15(ara utilizar los )]TJ
/TT9 1 Tf
10.1549 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0503 Tw
(cheros en)Tj
-39.3425 -1.2 TD
0.0254 Tw
(dicho directorio, estos programas llaman a)Tj
/TT8 1 Tf
17.3969 0 TD
0 Tw
(flock)Tj
/TT6 1 Tf
3.2758 0 TD
(sobre)Tj
/TT8 1 Tf
2.4413 0 TD
(.LOCK)Tj
/TT6 1 Tf
3.2758 0 TD
0.0253 Tw
[(y)-275.3(lue)15(go trabajan con los b)20(uzones. Cuando)]TJ
-26.3898 -1.2 TD
0.07 Tw
[(terminan de trabajar)40(,)-320(sueltan el cierre. No es muy diferente a lo que hicimos nosotros utilizando una v)25(ari-)]TJ
T*
0 Tw
(able)Tj
/TT8 1 Tf
1.9155 0 TD
(lock)Tj
/TT6 1 Tf
2.6504 0 TD
[(para tener e)15(xclusión mutua en el acceso a un contador)]TJ
/TT8 1 Tf
21.8087 0 TD
(cnt)Tj
/TT6 1 Tf
1.8003 0 TD
(.)Tj
-28.1749 -7.8 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
57 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
59 0 obj
<<
/Length 3087
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-16-)Tj
/TT2 1 Tf
-20.767 -3.6 TD
[(5. )-250(Cierr)18(es de lectura/escritura)]TJ
/TT6 1 Tf
0 -1.56 TD
0.0258 Tw
[(Como en ocasiones nos pre)15(guntamos qué v)25(alor tendrá el contador que incrementamos en el programa ante-)]TJ
0 -1.2 TD
0.061 Tw
[(rior)40(,)-311(v)25(amos a realizar un programa para imprimirlo. Podríamos utilizar)]TJ
/TT4 1 Tf
29.0357 0 TD
0 Tw
(cat\(1\))Tj
/TT6 1 Tf
2.3877 0 TD
0.061 Tw
[(,)-311(naturalmente, pero v)25(amos a)]TJ
-31.4234 -1.2 TD
0 Tw
[(hacer un programa que pueda v)15(er el v)25(alor sin condiciones de carrera.)]TJ
/TT11 1 Tf
6.1 -3 TD
([safecat])Tj
/TT6 1 Tf
5.4009 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 626.4 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include <stdlib.h>)Tj
T*
(#include <err.h>)Tj
T*
(#include <string.h>)Tj
T*
(#include <sys/file.h>)Tj
0 -3 TD
(int)Tj
0 -1.5 TD
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
(int fd, n, nb;)Tj
T*
(char buf[100];)Tj
0 -3 TD
(fd = open\("datafile", O_RDONLY\);)Tj
0 -1.5 TD
(if\(fd < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "open"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if\(flock\(fd, LOCK_EX\) != 0\){)Tj
2.4 -1.5 TD
(err\(1, "lock"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
[(n)-600(=)-600(read\(fd, buf, sizeof\(buf\)-1\);)]TJ
T*
(if\(n < 0\){)Tj
2.4 -1.5 TD
(err\(1, "read"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(buf[n] = 0;)Tj
T*
(nb = atoi\(buf\);)Tj
T*
(fprintf\(stderr, "nb is %d\\n", nb\);)Tj
T*
(if\(flock\(fd, LOCK_UN\) != 0\){)Tj
2.4 -1.5 TD
(err\(1, "lock"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(close\(fd\);)Tj
T*
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 212.4 Tm
(Podemos usarlo sin condiciones de carrera:)Tj
/TT8 1 Tf
8 0 0 8 133 194.4 Tm
(unix$ safecat)Tj
T*
(nb is 5)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 140.4 Tm
0.1857 Tw
(¿Qué sucede si ejecutamos tres)Tj
/TT8 1 Tf
13.618 0 TD
0 Tw
(safecat)Tj
/TT6 1 Tf
4.6364 0 TD
0.4357 Tc
[(yu)435.7(n)]TJ
/TT8 1 Tf
2.3714 0 TD
0 Tc
(safeinr)Tj
/TT6 1 Tf
4.6364 0 TD
0.1857 Tw
[(simultáneamente? T)80(odos ellos adquieren el)]TJ
-25.2621 -1.2 TD
0.0069 Tw
(cierre sobre el )Tj
/TT9 1 Tf
5.9338 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
-0.0001 Tc
0.007 Tw
[(chero para trabajar en él con e)14.9(xclusión mutua y)64.9(,)-257(aunque el orden en que consigan ejecutar y)]TJ
-6.4899 -1.2 TD
0 Tc
0 Tw
[(echar el cierre v)25(ariará, podríamos tener una ejecución como la que v)15(emos en la )]TJ
/TT9 1 Tf
31.8057 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(gura 3.)Tj
-32.3619 -2.4 TD
0.1043 Tw
[(Si hay muchos procesos le)15(yendo \(ejecutando)]TJ
/TT8 1 Tf
18.8281 0 TD
0 Tw
(safecat)Tj
/TT6 1 Tf
4.2007 0 TD
0.1043 Tw
[(\))-354.3(tardaremos mucho en ejecutarlo todo. Pero hay)]TJ
-23.0288 -1.2 TD
0.0192 Tw
(una posibilidad de mejorar las cosas: puesto que los lectores sólo leen el )Tj
/TT9 1 Tf
29.3809 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0192 Tw
(chero, es posible ejecutar más de)Tj
-29.9371 -1.2 TD
0.0841 Tw
[(un lector a la v)15(ez sin e)15(xclusión mutua respecto a otros lectores. Dicho de otro modo, podríamos tener un)]TJ
0 -4.44 TD
0 Tw
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
60 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
62 0 obj
<<
/Length 12643
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-17-)Tj
-15.15 -6.22 TD
(Escritor)Tj
ET
0 G
1 J 1 j 0.4 w 10 M []0 d
1 i 
171.03 684.03 m
243.03 684.03 l
S
BT
/TT9 1 Tf
10 0 0 10 193.115 687.8 Tm
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero)Tj
-0.6667 -1.2 TD
(cerrado)Tj
ET
243.03 684.03 m
246.63 684.03 l
250.11 684.03 m
253.71 684.03 l
257.19 684.03 m
260.79 684.03 l
264.27 684.03 m
267.87 684.03 l
271.35 684.03 m
274.95 684.03 l
278.43 684.03 m
282.03 684.03 l
285.51 684.03 m
289.11 684.03 l
292.59 684.03 m
296.19 684.03 l
299.67 684.03 m
303.27 684.03 l
306.75 684.03 m
310.35 684.03 l
313.83 684.03 m
317.43 684.03 l
320.91 684.03 m
324.51 684.03 l
327.99 684.03 m
331.59 684.03 l
335.07 684.03 m
338.67 684.03 l
342.15 684.03 m
345.75 684.03 l
349.23 684.03 m
352.83 684.03 l
356.31 684.03 m
359.91 684.03 l
363.39 684.03 m
366.99 684.03 l
370.47 684.03 m
374.07 684.03 l
377.55 684.03 m
381.15 684.03 l
384.63 684.03 m
388.23 684.03 l
391.71 684.03 m
395.31 684.03 l
398.79 684.03 m
402.39 684.03 l
405.87 684.03 m
409.47 684.03 l
412.95 684.03 m
416.55 684.03 l
420.03 684.03 m
423.63 684.03 l
427.11 684.03 m
430.71 684.03 l
434.19 684.03 m
437.79 684.03 l
441.27 684.03 m
444.87 684.03 l
448.35 684.03 m
451.95 684.03 l
455.43 684.03 m
459.03 684.03 l
S
BT
10 0 0 10 127.2 645.8 Tm
(Lector 1)Tj
ET
171.03 648.03 m
174.63 648.03 l
178.59 648.03 m
182.19 648.03 l
186.15 648.03 m
189.75 648.03 l
193.83 648.03 m
197.43 648.03 l
201.39 648.03 m
204.99 648.03 l
209.07 648.03 m
212.67 648.03 l
216.63 648.03 m
220.23 648.03 l
224.19 648.03 m
227.79 648.03 l
231.75 648.03 m
235.35 648.03 l
239.43 648.03 m
315.03 648.03 l
S
BT
/TT9 1 Tf
10 0 0 10 265.115 651.8 Tm
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero)Tj
-0.6667 -1.2 TD
(cerrado)Tj
ET
315.03 648.03 m
318.63 648.03 l
322.11 648.03 m
325.71 648.03 l
329.07 648.03 m
332.67 648.03 l
336.03 648.03 m
339.63 648.03 l
343.11 648.03 m
346.71 648.03 l
350.07 648.03 m
353.67 648.03 l
357.15 648.03 m
360.75 648.03 l
364.23 648.03 m
367.83 648.03 l
371.19 648.03 m
374.79 648.03 l
378.15 648.03 m
381.75 648.03 l
385.23 648.03 m
388.83 648.03 l
392.19 648.03 m
395.79 648.03 l
399.27 648.03 m
402.87 648.03 l
406.35 648.03 m
409.95 648.03 l
413.31 648.03 m
416.91 648.03 l
420.39 648.03 m
423.99 648.03 l
427.35 648.03 m
430.95 648.03 l
434.31 648.03 m
437.91 648.03 l
441.39 648.03 m
444.99 648.03 l
448.47 648.03 m
452.07 648.03 l
455.43 648.03 m
459.03 648.03 l
S
BT
10 0 0 10 127.2 609.8 Tm
(Lector 2)Tj
ET
171.03 612.03 m
174.63 612.03 l
177.99 612.03 m
181.59 612.03 l
185.07 612.03 m
188.67 612.03 l
192.03 612.03 m
195.63 612.03 l
199.11 612.03 m
202.71 612.03 l
206.19 612.03 m
209.79 612.03 l
213.15 612.03 m
216.75 612.03 l
220.23 612.03 m
223.83 612.03 l
227.19 612.03 m
230.79 612.03 l
234.15 612.03 m
237.75 612.03 l
241.23 612.03 m
244.83 612.03 l
248.31 612.03 m
251.91 612.03 l
255.27 612.03 m
258.87 612.03 l
262.35 612.03 m
265.95 612.03 l
269.31 612.03 m
272.91 612.03 l
276.39 612.03 m
279.99 612.03 l
283.35 612.03 m
286.95 612.03 l
290.31 612.03 m
293.91 612.03 l
297.39 612.03 m
300.99 612.03 l
304.47 612.03 m
308.07 612.03 l
311.43 612.03 m
387.03 612.03 l
S
BT
/TT9 1 Tf
10 0 0 10 337.115 615.8 Tm
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero)Tj
-0.6667 -1.2 TD
(cerrado)Tj
ET
387.03 612.03 m
390.63 612.03 l
394.59 612.03 m
398.19 612.03 l
402.15 612.03 m
405.75 612.03 l
409.83 612.03 m
413.43 612.03 l
417.39 612.03 m
420.99 612.03 l
425.07 612.03 m
428.67 612.03 l
432.63 612.03 m
436.23 612.03 l
440.19 612.03 m
443.79 612.03 l
447.75 612.03 m
451.35 612.03 l
455.43 612.03 m
459.03 612.03 l
S
BT
10 0 0 10 127.2 573.8 Tm
(Lector 3)Tj
ET
171.03 576.03 m
174.63 576.03 l
178.11 576.03 m
181.71 576.03 l
185.19 576.03 m
188.79 576.03 l
192.27 576.03 m
195.87 576.03 l
199.35 576.03 m
202.95 576.03 l
206.43 576.03 m
210.03 576.03 l
213.51 576.03 m
217.11 576.03 l
220.59 576.03 m
224.19 576.03 l
227.67 576.03 m
231.27 576.03 l
234.75 576.03 m
238.35 576.03 l
241.83 576.03 m
245.43 576.03 l
248.91 576.03 m
252.51 576.03 l
255.99 576.03 m
259.59 576.03 l
263.07 576.03 m
266.67 576.03 l
270.15 576.03 m
273.75 576.03 l
277.23 576.03 m
280.83 576.03 l
284.31 576.03 m
287.91 576.03 l
291.39 576.03 m
294.99 576.03 l
298.47 576.03 m
302.07 576.03 l
305.55 576.03 m
309.15 576.03 l
312.63 576.03 m
316.23 576.03 l
319.71 576.03 m
323.31 576.03 l
326.79 576.03 m
330.39 576.03 l
333.87 576.03 m
337.47 576.03 l
340.95 576.03 m
344.55 576.03 l
348.03 576.03 m
351.63 576.03 l
355.11 576.03 m
358.71 576.03 l
362.19 576.03 m
365.79 576.03 l
369.27 576.03 m
372.87 576.03 l
376.35 576.03 m
379.95 576.03 l
383.43 576.03 m
459.03 576.03 l
S
BT
/TT9 1 Tf
10 0 0 10 409.115 579.8 Tm
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero)Tj
-0.6666 -1.2 TD
(cerrado)Tj
/TT2 1 Tf
-31.101 -3.28 TD
0.0747 Tw
(Figura 3:)Tj
/TT4 1 Tf
4.3711 0 TD
[(Múltiples lector)37(es y escritor)37(es de un )]TJ
/TT13 1 Tf
15.1486 0 TD
0 Tw
(Þ)Tj
/TT4 1 Tf
0.5 0 TD
0.0746 Tw
[(c)15(her)45(o)-324.7(con un cierr)37(e)-324.6(e)20(xclusivo. Sólo puede ejecutar)]TJ
-20.0197 -1.2 TD
0 Tw
[(uno cada vez dentr)45(o)-250(d)0(e)-250(l)0(a)-250(r)37(e)40(gión crítica.)]TJ
/TT6 1 Tf
-2.5 -1.2 TD
0.0018 Tw
[(escritor o cualquier número de lectores, pero no ambas cosas. Existe un tipo de cierre que permite e)15(xclusión)]TJ
T*
0.0373 Tw
[(mutua entre lectores y escritores. Permite lectores concurrentes en e)15(xclusión con escritores.)-537.4(Naturalmente,)]TJ
T*
0.113 Tw
[(los escritores e)15(xcluyen otros escritores también. Si utilizamos este tipo de cierre, la ejecución podría ser)]TJ
T*
0.0261 Tw
[(como se v)15(en la )]TJ
/TT9 1 Tf
6.3096 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0261 Tw
[(gura 4. Como puede v)15(erse, los procesos han de esperar en menos y)65(,)-276.2(conjuntamente, termi-)]TJ
-6.8658 -1.2 TD
0 Tw
(namos antes.)Tj
5.617 -3.82 TD
(Escritor)Tj
ET
171.03 426.99 m
243.03 426.99 l
S
BT
/TT9 1 Tf
10 0 0 10 193.115 430.8 Tm
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero)Tj
-0.6667 -1.2 TD
(cerrado)Tj
ET
243.03 426.99 m
246.63 426.99 l
250.11 426.99 m
253.71 426.99 l
257.19 426.99 m
260.79 426.99 l
264.27 426.99 m
267.87 426.99 l
271.35 426.99 m
274.95 426.99 l
278.43 426.99 m
282.03 426.99 l
285.51 426.99 m
289.11 426.99 l
292.59 426.99 m
296.19 426.99 l
299.67 426.99 m
303.27 426.99 l
306.75 426.99 m
310.35 426.99 l
313.83 426.99 m
317.43 426.99 l
320.91 426.99 m
324.51 426.99 l
327.99 426.99 m
331.59 426.99 l
335.07 426.99 m
338.67 426.99 l
342.15 426.99 m
345.75 426.99 l
349.23 426.99 m
352.83 426.99 l
356.31 426.99 m
359.91 426.99 l
363.39 426.99 m
366.99 426.99 l
370.47 426.99 m
374.07 426.99 l
377.55 426.99 m
381.15 426.99 l
384.63 426.99 m
388.23 426.99 l
391.71 426.99 m
395.31 426.99 l
398.79 426.99 m
402.39 426.99 l
405.87 426.99 m
409.47 426.99 l
412.95 426.99 m
416.55 426.99 l
420.03 426.99 m
423.63 426.99 l
427.11 426.99 m
430.71 426.99 l
434.19 426.99 m
437.79 426.99 l
441.27 426.99 m
444.87 426.99 l
448.35 426.99 m
451.95 426.99 l
455.43 426.99 m
459.03 426.99 l
S
BT
10 0 0 10 127.2 388.8 Tm
(Lector 1)Tj
ET
171.03 390.99 m
171.03 390.99 l
174.63 390.99 m
174.63 390.99 l
178.23 390.99 m
178.23 390.99 l
181.83 390.99 m
181.83 390.99 l
185.43 390.99 m
185.43 390.99 l
189.03 390.99 m
189.03 390.99 l
192.63 390.99 m
192.63 390.99 l
196.23 390.99 m
196.23 390.99 l
199.83 390.99 m
199.83 390.99 l
203.43 390.99 m
203.43 390.99 l
207.03 390.99 m
207.03 390.99 l
210.63 390.99 m
210.63 390.99 l
214.23 390.99 m
214.23 390.99 l
217.83 390.99 m
217.83 390.99 l
221.43 390.99 m
221.43 390.99 l
225.03 390.99 m
225.03 390.99 l
228.63 390.99 m
228.63 390.99 l
232.23 390.99 m
232.23 390.99 l
235.83 390.99 m
235.83 390.99 l
239.43 390.99 m
239.43 390.99 l
243.03 390.99 m
315.03 390.99 l
S
BT
/TT9 1 Tf
10 0 0 10 265.115 394.8 Tm
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero)Tj
-0.6667 -1.2 TD
(cerrado)Tj
ET
315.03 390.99 m
318.63 390.99 l
322.11 390.99 m
325.71 390.99 l
329.07 390.99 m
332.67 390.99 l
336.03 390.99 m
339.63 390.99 l
343.11 390.99 m
346.71 390.99 l
350.07 390.99 m
353.67 390.99 l
357.15 390.99 m
360.75 390.99 l
364.23 390.99 m
367.83 390.99 l
371.19 390.99 m
374.79 390.99 l
378.15 390.99 m
381.75 390.99 l
385.23 390.99 m
388.83 390.99 l
392.19 390.99 m
395.79 390.99 l
399.27 390.99 m
402.87 390.99 l
406.35 390.99 m
409.95 390.99 l
413.31 390.99 m
416.91 390.99 l
420.39 390.99 m
423.99 390.99 l
427.35 390.99 m
430.95 390.99 l
434.31 390.99 m
437.91 390.99 l
441.39 390.99 m
444.99 390.99 l
448.47 390.99 m
452.07 390.99 l
455.43 390.99 m
459.03 390.99 l
S
BT
10 0 0 10 127.2 352.8 Tm
(Lector 2)Tj
ET
171.03 354.99 m
171.03 354.99 l
174.63 354.99 m
174.63 354.99 l
178.23 354.99 m
178.23 354.99 l
181.83 354.99 m
181.83 354.99 l
185.43 354.99 m
185.43 354.99 l
189.03 354.99 m
189.03 354.99 l
192.63 354.99 m
192.63 354.99 l
196.23 354.99 m
196.23 354.99 l
199.83 354.99 m
199.83 354.99 l
203.43 354.99 m
203.43 354.99 l
207.03 354.99 m
207.03 354.99 l
210.63 354.99 m
210.63 354.99 l
214.23 354.99 m
214.23 354.99 l
217.83 354.99 m
217.83 354.99 l
221.43 354.99 m
221.43 354.99 l
225.03 354.99 m
225.03 354.99 l
228.63 354.99 m
228.63 354.99 l
232.23 354.99 m
232.23 354.99 l
235.83 354.99 m
235.83 354.99 l
239.43 354.99 m
239.43 354.99 l
243.03 354.99 m
243.03 354.99 l
246.63 354.99 m
246.63 354.99 l
250.23 354.99 m
322.23 354.99 l
S
BT
/TT9 1 Tf
10 0 0 10 272.315 358.8 Tm
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero)Tj
-0.6666 -1.2 TD
(cerrado)Tj
ET
322.23 354.99 m
325.83 354.99 l
329.67 354.99 m
333.27 354.99 l
336.99 354.99 m
340.59 354.99 l
344.43 354.99 m
348.03 354.99 l
351.75 354.99 m
355.35 354.99 l
359.19 354.99 m
362.79 354.99 l
366.63 354.99 m
370.23 354.99 l
373.95 354.99 m
377.55 354.99 l
381.39 354.99 m
384.99 354.99 l
388.83 354.99 m
392.43 354.99 l
396.27 354.99 m
399.87 354.99 l
403.59 354.99 m
407.19 354.99 l
411.03 354.99 m
414.63 354.99 l
418.35 354.99 m
421.95 354.99 l
425.79 354.99 m
429.39 354.99 l
433.23 354.99 m
436.83 354.99 l
440.55 354.99 m
444.15 354.99 l
447.99 354.99 m
451.59 354.99 l
455.43 354.99 m
459.03 354.99 l
S
BT
10 0 0 10 127.2 316.8 Tm
(Lector 3)Tj
ET
171.03 318.99 m
171.03 318.99 l
174.63 318.99 m
174.63 318.99 l
178.23 318.99 m
178.23 318.99 l
181.83 318.99 m
181.83 318.99 l
185.43 318.99 m
185.43 318.99 l
189.03 318.99 m
189.03 318.99 l
192.63 318.99 m
192.63 318.99 l
196.23 318.99 m
196.23 318.99 l
199.83 318.99 m
199.83 318.99 l
203.43 318.99 m
203.43 318.99 l
207.03 318.99 m
207.03 318.99 l
210.63 318.99 m
210.63 318.99 l
214.23 318.99 m
214.23 318.99 l
217.83 318.99 m
217.83 318.99 l
221.43 318.99 m
221.43 318.99 l
225.03 318.99 m
225.03 318.99 l
228.63 318.99 m
228.63 318.99 l
232.23 318.99 m
232.23 318.99 l
235.83 318.99 m
235.83 318.99 l
239.43 318.99 m
239.43 318.99 l
243.03 318.99 m
243.03 318.99 l
246.63 318.99 m
246.63 318.99 l
250.23 318.99 m
250.23 318.99 l
253.83 318.99 m
253.83 318.99 l
257.43 318.99 m
329.43 318.99 l
S
BT
/TT9 1 Tf
10 0 0 10 279.515 322.8 Tm
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero)Tj
-0.6667 -1.2 TD
(cerrado)Tj
ET
329.43 318.99 m
333.03 318.99 l
336.87 318.99 m
340.47 318.99 l
344.19 318.99 m
347.79 318.99 l
351.63 318.99 m
355.23 318.99 l
359.07 318.99 m
362.67 318.99 l
366.51 318.99 m
370.11 318.99 l
373.95 318.99 m
377.55 318.99 l
381.27 318.99 m
384.87 318.99 l
388.71 318.99 m
392.31 318.99 l
396.03 318.99 m
399.63 318.99 l
403.47 318.99 m
407.07 318.99 l
410.91 318.99 m
414.51 318.99 l
418.35 318.99 m
421.95 318.99 l
425.79 318.99 m
429.39 318.99 l
433.11 318.99 m
436.71 318.99 l
440.55 318.99 m
444.15 318.99 l
447.99 318.99 m
451.59 318.99 l
455.43 318.99 m
459.03 318.99 l
S
BT
/TT2 1 Tf
10 0 0 10 97 278 Tm
0.051 Tw
(Figura 4:)Tj
/TT4 1 Tf
4.3237 0 TD
[(Con un cierr)37(e)-300.9(d)0(e)-300.9(tipo lector)37(es/escritor)37(es permitimos múltiples lector)37(es concurr)37(entes man-)]TJ
-4.3237 -1.2 TD
0 Tw
[(teniendo la e)20(xclusión mutua de los escritor)37(es.)]TJ
/TT6 1 Tf
-2.5 -2.4 TD
0.1148 Tw
[(Otra forma de v)15(erlo \(que en realidad coincide con la implementación\) es pensar que los escritores com-)]TJ
0 -1.2 TD
0 Tw
[(parten el mute)15(x)-250(con otros lectores cuando lo adquieren.)]TJ
0 -2.4 TD
0.101 Tw
[(En nuestro programa podemos conse)15(guir este efecto haciendo que)]TJ
/TT8 1 Tf
27.5791 0 TD
0 Tw
(safecat)Tj
/TT6 1 Tf
4.5517 0 TD
0.101 Tw
(adquiera el cierre en modo)Tj
/TT4 1 Tf
-32.1307 -1.2 TD
0 Tw
(lector)Tj
/TT6 1 Tf
2.3325 0 TD
0.3463 Tw
[(.)-596.3(S)0(i)-596.3(hacemos tal cosa, estamos utilizando el cierre del )]TJ
/TT9 1 Tf
25.0113 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.3463 Tw
(chero como un cierre de tipo lec-)Tj
-27.9 -1.2 TD
0 Tw
(tores/escritores, también llamado)Tj
/TT2 1 Tf
13.4956 0 TD
[(r)18(ead/write lock)]TJ
/TT6 1 Tf
6.4522 0 TD
(.)Tj
-19.9478 -15.8 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
63 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
/TT13 54 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
65 0 obj
<<
/Length 2450
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-18-)Tj
/TT11 1 Tf
-14.667 -3.6 TD
([safecatr])Tj
/TT6 1 Tf
6.001 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 696 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include <stdlib.h>)Tj
T*
(#include <err.h>)Tj
T*
(#include <string.h>)Tj
T*
(#include <sys/file.h>)Tj
0 -3 TD
(int)Tj
0 -1.5 TD
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
(int fd, n, nb;)Tj
T*
(char buf[100];)Tj
0 -3 TD
(fd = open\("afile", O_RDONLY\);)Tj
0 -1.5 TD
(if\(fd < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "open"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if\(flock\(fd, LOCK_SH\) != 0\){)Tj
2.4 -1.5 TD
(err\(1, "lock"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
[(n)-600(=)-600(read\(fd, buf, sizeof\(buf\)-1\);)]TJ
T*
(if\(n < 0\){)Tj
2.4 -1.5 TD
(err\(1, "read"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(buf[n] = 0;)Tj
T*
(nb = atoi\(buf\);)Tj
T*
(fprintf\(stderr, "nb is %d\\n", nb\);)Tj
T*
(if\(flock\(fd, LOCK_UN\) != 0\){)Tj
2.4 -1.5 TD
(err\(1, "lock"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(close\(fd\);)Tj
T*
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 282 Tm
0.0913 Tw
(Ahora tenemos algunos \(lectores\) que adquieren un cierre usando)Tj
/TT8 1 Tf
27.284 0 TD
0 Tw
(LOCK_SH)Tj
/TT6 1 Tf
4.5419 0 TD
(\()Tj
/TT4 1 Tf
0.333 0 TD
[(shar)37(ed)]TJ
/TT6 1 Tf
2.6852 0 TD
0.0912 Tw
[(\))-341.2(y)-341.2(otros \(escritores\))]TJ
-34.8441 -1.2 TD
0 Tw
(que lo hacen usando)Tj
/TT8 1 Tf
8.3862 0 TD
(LOCK_EX)Tj
/TT6 1 Tf
4.4507 0 TD
(\()Tj
/TT4 1 Tf
0.333 0 TD
[(e)20(xclusive)]TJ
/TT6 1 Tf
3.6441 0 TD
(\).)Tj
/TT2 1 Tf
-16.814 -3.6 TD
[(6. )-250(Cierr)18(es de lectura/escritura para thr)18(eads)]TJ
/TT6 1 Tf
0 -1.56 TD
0.1123 Tw
(La librería de)Tj
/TT4 1 Tf
5.9726 0 TD
0 Tw
[(pthr)37(eads)]TJ
/TT6 1 Tf
3.8253 0 TD
0.1124 Tw
(dispone de cierres de tipo lectura/escritura. Su uso es similar al que hemos visto)Tj
-9.7979 -1.2 TD
0 Tw
[(para usar los mute)15(x)-250(d)0(e)]TJ
/TT4 1 Tf
9.2321 0 TD
[(pthr)37(ead)]TJ
/TT6 1 Tf
3.0738 0 TD
[(,)-250(pero las v)25(ariables de tipo cierre se declaran e inicializan como en)]TJ
/TT8 1 Tf
8 0 0 8 133 188.4 Tm
(pthread_rwlock_t rwlock;)Tj
0 -1.5 TD
(...)Tj
T*
(pthread_rwlock_init\(&rwlock\);)Tj
/TT6 1 Tf
10 0 0 10 72 146.4 Tm
[(o)-250(bien)]TJ
/TT8 1 Tf
8 0 0 8 133 128.4 Tm
(pthread_rwlock_t rwlock = PTHREAD_RWLOCK_INITIALIZER;)Tj
/TT6 1 Tf
10 0 0 10 72 98.4 Tm
[(Un lector usaría estas llamadas para prote)15(ger su re)15(gión crítica:)]TJ
0 -7.44 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
66 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
68 0 obj
<<
/Length 3905
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-19-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(pthread_rwlock_rdlock\(&rwlock\);)Tj
2.4 -1.5 TD
(... región crítica ...)Tj
-2.4 -1.5 TD
(pthread_rwlock_unlock\(&rwlock\);)Tj
/TT6 1 Tf
10 0 0 10 72 666 Tm
[(Y)-250(u)0(n)-250(escritor estas otras:)]TJ
/TT8 1 Tf
8 0 0 8 133 648 Tm
(pthread_rwlock_wrlock\(&rwlock\);)Tj
2.4 -1.5 TD
(... región crítica ...)Tj
-2.4 -1.5 TD
(pthread_rwlock_unlock\(&rwlock\);)Tj
/TT6 1 Tf
10 0 0 10 72 594 Tm
[(Una v)15(ez deja de ser necesario el cierre hay que liberar sus recursos con)]TJ
/TT8 1 Tf
8 0 0 8 133 576 Tm
(pthread_rwlock_destroy\(&rwlock\);)Tj
/TT6 1 Tf
10 0 0 10 72 546 Tm
0.0381 Tw
[(Si un proceso necesita un cierre como lector y posteriormente con)40(v)15(ertirse en escritor)40(,)-288.2(suele ser mejor man-)]TJ
0 -1.2 TD
0 Tw
(tener el cierre como escritor todo el tiempo.)Tj
/TT2 1 Tf
0 -2.4 TD
0.25 Tw
(7. Deadlocks)Tj
/TT6 1 Tf
0 -1.56 TD
0.0932 Tw
[(Rara v)15(ez necesitaremos un único cierre. O, dicho de otro modo, rara v)15(ez necesitaremos un único recurso)]TJ
0 -1.2 TD
0.0972 Tw
[(compartido. Lo normal es compartir di)25(v)15(ersos recursos. En principio cada recurso puede utilizar un cierre)]TJ
T*
0.0576 Tw
[(distinto y los procesos que necesitan acceder al recurso pueden adquirir su cierre durante la re)15(gión crítica.)]TJ
T*
0 Tw
(Pero piensa lo que sucede si un proceso ejecuta)Tj
/TT8 1 Tf
8 0 0 8 133 440.4 Tm
(lock\(a\);)Tj
0 -1.5 TD
(lock\(b\);)Tj
T*
(...)Tj
/TT6 1 Tf
10 0 0 10 72 398.4 Tm
[(y)-250(otro en cambio ejecuta)]TJ
/TT8 1 Tf
8 0 0 8 133 380.4 Tm
(lock\(b\);)Tj
T*
(lock\(a\);)Tj
/TT6 1 Tf
10 0 0 10 72 338.4 Tm
0.0296 Tw
(Si ejecutamos el primer)Tj
/TT8 1 Tf
9.8376 0 TD
0 Tw
(lock)Tj
/TT6 1 Tf
2.68 0 TD
0.0296 Tw
(de cada proceso, ninguno podrá continuar jamás. Cada uno tiene un cierre y)Tj
-12.5176 -1.2 TD
0.0427 Tw
[(necesita el que tiene el otro. El efecto neto es que los procesos se quedan bloqueados de por vida y no ter)20(-)]TJ
T*
0.1932 Tw
(minan. A esto lo denominamos)Tj
/TT2 1 Tf
13.6867 0 TD
0 Tw
(deadlock)Tj
/TT6 1 Tf
4.2772 0 TD
(o)Tj
/TT2 1 Tf
0.9431 0 TD
(interbloqueo)Tj
/TT6 1 Tf
5.4448 0 TD
0.1931 Tw
[(.)-443.1(¿Recuerdas qué sucedía si un proceso deja)]TJ
-24.3518 -1.2 TD
0 Tw
[(abierto un descriptor de escritura en un pipe y se pone a leer del mismo? Efecti)25(v)25(amente, es un deadlock.)]TJ
0 -2.4 TD
0.0451 Tw
[(En el caso de cierres, para e)25(vitar el problema suele bastar )]TJ
/TT9 1 Tf
23.6264 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0451 Tw
(jar un)Tj
/TT2 1 Tf
2.645 0 TD
0 Tw
(orden)Tj
/TT6 1 Tf
2.7952 0 TD
0.0452 Tw
[(a)-295.2(l)0(a)-295.2(hora de adquirir los recursos.)]TJ
-29.6227 -1.2 TD
0.11 Tw
(Si todos adquieren los cierres que necesitan siguiendo el orden acordado, no tenemos interbloqueos. Por)Tj
T*
0.0046 Tw
(ejemplo, podemos acordar que el cierre de)Tj
/TT8 1 Tf
17.2467 0 TD
0 Tw
(a)Tj
/TT6 1 Tf
0.8548 0 TD
0.0047 Tw
(ha de tomarse antes que el de)Tj
/TT8 1 Tf
12.0002 0 TD
0 Tw
(b)Tj
/TT6 1 Tf
0.8548 0 TD
0.2547 Tc
[(ye)254.7(ld)254.7(e)]TJ
/TT8 1 Tf
2.9296 0 TD
0 Tc
(b)Tj
/TT6 1 Tf
0.8548 0 TD
0.0047 Tw
(antes que el de)Tj
/TT8 1 Tf
6.1829 0 TD
0 Tw
(c)Tj
/TT6 1 Tf
0.6001 0 TD
0.2547 Tc
[(.D)254.7(e)]TJ
-41.5238 -1.2 TD
0 Tc
(ser así, podríamos tener código para un proceso que ejecute)Tj
/TT8 1 Tf
8 0 0 8 133 224.4 Tm
(lock\(a\);)Tj
0 -1.5 TD
(lock\(c\);)Tj
T*
(...)Tj
/TT6 1 Tf
10 0 0 10 72 182.4 Tm
(otro que ejecute)Tj
/TT8 1 Tf
8 0 0 8 133 164.4 Tm
(lock\(a\);)Tj
T*
(lock\(b\);)Tj
/TT6 1 Tf
10 0 0 10 72 134.4 Tm
[(y)-250(otro)]TJ
/TT8 1 Tf
8 0 0 8 133 116.4 Tm
(lock\(b\);)Tj
T*
(lock\(c\);)Tj
/TT6 1 Tf
10 0 0 10 72 86.4 Tm
0.0613 Tw
[(y)-311.3(e)0(n)-311.3(ningún caso tendríamos un bloqueo. Si alguien necesita un cierre nadie puede tenerlo y además estar)]TJ
0 -1.2 TD
0 Tw
(esperando los que ya tenemos nosotros: no hay deadlocks.)Tj
0 -5.04 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
69 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
71 0 obj
<<
/Length 5395
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-20-)Tj
-20.767 -3.6 TD
0.0198 Tw
(Esto puede resultar complicado y en ocasiones se opta por usar un único cierre para todos los recursos, a lo)Tj
0 -1.2 TD
0.0212 Tw
(que se suele denominar)Tj
/TT4 1 Tf
9.6926 0 TD
[(giant loc)20(k)]TJ
/TT6 1 Tf
4.2434 0 TD
[(o)-271.1("cierre gordo". Pero naturalmente se limita la concurrencia y se reduce)]TJ
-13.936 -1.2 TD
0.0491 Tw
(el rendimiento. No obstante, hay menos posibilidades de tener condiciones de carrera por olvidar echar un)Tj
T*
0 Tw
(cierre en el momento adecuado.)Tj
0 -2.4 TD
0.03 Tw
[(Hay v)15(eces en que se opta por dejar que suceda el deadlock y)65(,)-280(tras detectarlo o comprobar que estamos ante)]TJ
0 -1.2 TD
0.068 Tw
[(un posible deadlock, soltar todos los cierres y v)20(olv)15(erlo a intentar)55(.)-318.1(Esto no es realmente una solución dado)]TJ
T*
0.0677 Tw
[(que podríamos v)20(olv)15(er a caer en el interbloqueo una v)15(ez tras otra \(aunque no es 100% se)15(guro que siempre)]TJ
T*
0.0738 Tw
(suceda tal cosa\). A este tipo de bloqueos \(que podrían romperse con cierta probabilidad\) se los denomina)Tj
/TT2 1 Tf
T*
0 Tw
[(li)10(v)10(elock)]TJ
/TT6 1 Tf
3.2573 0 TD
(.)Tj
-3.2573 -2.4 TD
-0.0001 Tc
0.1016 Tw
[(Lo que es más, puede que algún proceso tenga)-351.6(mala suerte y)64.9(,)-351.6(si)-351.6(aplica esta estrate)14.9(gia, nunca consiga)-351.6(los)]TJ
0 -1.2 TD
0 Tc
0.0585 Tw
(cierres que necesita porque siempre gane otro proceso al obtener uno de los cierres que necesita. El pobre)Tj
T*
0 Tw
[(proceso continuaría sin poder trabajar)40(,)-250(a)-250(l)0(o)-250(que se denomina)]TJ
/TT2 1 Tf
24.2569 0 TD
[(star)10(v)10(ation)]TJ
/TT6 1 Tf
4.313 0 TD
0.25 Tc
(,o)Tj
/TT2 1 Tf
1.25 0 TD
0 Tc
(hambruna)Tj
/TT6 1 Tf
4.5015 0 TD
(.)Tj
/TT2 1 Tf
-34.3214 -3.6 TD
0.25 Tw
[(8. Semáf)25(or)18(os)]TJ
/TT6 1 Tf
0 -1.56 TD
0.104 Tw
(Quizá la abstracción más conocida para sincronizar procesos en programación concurrente y controlar el)Tj
0 -1.2 TD
0.0423 Tw
(acceso a los recursos sean los)Tj
/TT2 1 Tf
12.3051 0 TD
0 Tw
[(semáf)25(or)18(os)]TJ
/TT6 1 Tf
4.289 0 TD
0.0423 Tw
[(.)-292.3(U)0(n)-292.3(semáforo es en realidad un contador que indica cuántos)]TJ
/TT4 1 Tf
24.8457 0 TD
0 Tw
[(tic)20(k-)]TJ
-41.4398 -1.2 TD
(ets)Tj
/TT6 1 Tf
1.5156 0 TD
0.1547 Tw
(tenemos disponibles para acceder a determinado recurso. No son muy diferentes de un contador de)Tj
-1.5156 -1.2 TD
0.1733 Tw
(entradas para acceder al cine. Si no hay entradas, no se puede entrar al cine. Del mismo modo, si un)Tj
T*
0 Tw
(semáforo está a)Tj
/TT8 1 Tf
6.4692 0 TD
(0)Tj
/TT6 1 Tf
0.6001 0 TD
[(,)-250(n)0(o)-250(s)0(e)-250(puede acceder al recurso de que se trate.)]TJ
-7.0693 -2.4 TD
(La parte interesante del semáforo es que dispone de dos operaciones:)Tj
/TT8 1 Tf
8 0 0 8 133 410.4 Tm
(down\(sem\);)Tj
/TT6 1 Tf
10 0 0 10 72 392.4 Tm
(y)Tj
/TT8 1 Tf
8 0 0 8 133 374.4 Tm
(up\(sem\);)Tj
/TT6 1 Tf
10 0 0 10 72 356.4 Tm
[(que \(respecti)25(v)25(amente\) adquieren un)]TJ
/TT4 1 Tf
14.4988 0 TD
[(tic)20(k)10(e)0(t)]TJ
/TT6 1 Tf
2.385 0 TD
[(y)-250(l)0(o)-250(liberan.)]TJ
-14.3839 -1.56 TD
[(•)-2150(L)0(a)-399.4(primera,)]TJ
/TT8 1 Tf
7.713 0 TD
(down)Tj
/TT6 1 Tf
2.4004 0 TD
0.1494 Tw
[(,)-399.4(toma un tick)10(et del semáforo \(cuyo v)25(alor se decrementa\) cuando e)15(xisten)]TJ
-7.6133 -1.2 TD
0.1482 Tw
[(tick)10(ets \(el v)25(alor es positi)25(v)20(o\). De no haber tick)10(ets disponibles \(cuando el semáforo es cero\),)]TJ
/TT8 1 Tf
T*
0 Tw
(down)Tj
/TT4 1 Tf
2.6504 0 TD
[(esper)15(a)]TJ
/TT6 1 Tf
2.901 0 TD
[(a)-250(que e)15(xistan tick)10(ets libres y entonces toma uno.)]TJ
-8.0514 -1.56 TD
[(•)-2150(L)0(a)-444.8(llamada)]TJ
/TT8 1 Tf
7.6094 0 TD
(up)Tj
/TT6 1 Tf
1.6449 0 TD
0.1947 Tw
[(simplemente libera un tick)10(et. Si alguien estaba esperando en un)]TJ
/TT8 1 Tf
27.5679 0 TD
0 Tw
(down)Tj
/TT6 1 Tf
2.4004 0 TD
0.4447 Tc
[(,l)444.7(o)]TJ
-36.7226 -1.2 TD
0 Tc
0.0971 Tw
[(adquiere y continúa.)-597.1(Si nadie estaba esperando en un)]TJ
/TT8 1 Tf
22.5052 0 TD
0 Tw
(down)Tj
/TT6 1 Tf
2.4004 0 TD
0.0972 Tw
[(,)-347.1(e)0(l)-347.2(tick)10(et queda en el semáforo,)]TJ
-24.9056 -1.2 TD
0 Tw
(que pasa a incrementarse.)Tj
-5 -2.4 TD
0.0313 Tw
[(A)-281.4(l)0(a)-281.4(abstracción se la denomina semáforo puesto que su in)40(v)15(entor pensó en semáforos ferro)15(viarios que con-)]TJ
0 -1.2 TD
0 Tw
(trolan el acceso a las vías. Por cierto que en muchas implementaciones se utilizan los nombres)Tj
/TT8 1 Tf
8 0 0 8 133 223.2 Tm
(P\(sem\);)Tj
/TT6 1 Tf
10 0 0 10 72 205.2 Tm
(y)Tj
/TT8 1 Tf
8 0 0 8 133 187.2 Tm
(V\(sem\);)Tj
/TT6 1 Tf
10 0 0 10 72 169.2 Tm
-0.0005 Tc
0.0005 Tw
(en lugar de)Tj
/TT8 1 Tf
4.6874 0 TD
0 Tc
0 Tw
(down)Tj
/TT6 1 Tf
2.6504 0 TD
(y)Tj
/TT8 1 Tf
0.75 0 TD
(up)Tj
/TT6 1 Tf
1.2002 0 TD
[(,)-250(y)-250(e)0(n)-250(otras implementaciones se utiliza)]TJ
/TT8 1 Tf
8 0 0 8 133 151.2 Tm
(wait\(sem\);)Tj
/TT6 1 Tf
10 0 0 10 72 133.2 Tm
(y)Tj
/TT8 1 Tf
8 0 0 8 133 115.2 Tm
(signal\(sem\);)Tj
/TT6 1 Tf
10 0 0 10 72 97.2 Tm
-0.0002 Tc
0.0002 Tw
[(en su lugar)54.8(.)-250.2(Nosotros usaremos)]TJ
/TT8 1 Tf
12.7159 0 TD
0 Tc
0 Tw
(down)Tj
/TT6 1 Tf
2.6504 0 TD
(y)Tj
/TT8 1 Tf
0.75 0 TD
(up)Tj
/TT6 1 Tf
1.4502 0 TD
[(para e)25(vitar confusiones con otras operaciones.)]TJ
-17.5665 -2.4 TD
[(Dado un semáforo, podemos implementar un mute)15(x)-250(utilizando código como)]TJ
0 -4.92 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
72 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
74 0 obj
<<
/Length 2300
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-21-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(Sem sem = 1;)Tj
0 -1.5 TD
(...)Tj
T*
(down\(sem\);)Tj
T*
(...región crítica...)Tj
T*
(up\(sem\);)Tj
/TT6 1 Tf
10 0 0 10 72 642 Tm
0.2071 Tw
[(Puesto que sólo hay un tick)10(et en el semáforo, sólo un proceso puede adquirirlo, con lo que tenemos)]TJ
0 -1.2 TD
0 Tw
[(e)15(xclusión mutua.)]TJ
/TT2 1 Tf
0 -3.6 TD
[(9. )-250(Semáf)25(or)18(os en UNIX)]TJ
/TT6 1 Tf
0 -1.56 TD
0.1285 Tw
[(Existen di)25(v)15(ersas implementaciones de semáforos en UNIX. Normalmente tienes disponible una denomi-)]TJ
0 -1.2 TD
0 Tw
(nada)Tj
/TT4 1 Tf
2.1377 0 TD
[(posix semaphor)37(es)]TJ
/TT6 1 Tf
7.1012 0 TD
[(,)-250(que puedes combinar con los threads de la librería de)]TJ
/TT4 1 Tf
21.9922 0 TD
[(pthr)37(ead\(3\))]TJ
/TT6 1 Tf
4.2399 0 TD
(.)Tj
-35.4709 -2.4 TD
0.0226 Tw
[(Así pues... ¡Cuidado! Es posible que si usas determinado tipo de semáforos estos sólo e)15(xistan en tu sistema)]TJ
0 -1.2 TD
0.0313 Tw
[(y)-281.3(n)0(o)-281.3(e)0(n)-281.3(otros UNIX. Por ejemplo, Linux dispone de semáforos con nombre y sin nombre, pero OS X sum-)]TJ
T*
0.0581 Tw
(inistra semáforos con nombre y no dispone del otro tipo de semáforos. Nosotros usaremos sólo semáforos)Tj
T*
0 Tw
[(con nombre que tenemos disponibles en gran parte de los sistemas UNIX ho)10(y)-250(e)0(n)-250(día.)]TJ
0 -2.4 TD
[(V)111(eamos el siguiente programa:)]TJ
/TT11 1 Tf
6.1 -1.8 TD
([semcnt.c])Tj
/TT6 1 Tf
6.001 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 452.4 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include <stdlib.h>)Tj
T*
(#include <pthread.h>)Tj
T*
(#include <semaphore.h>)Tj
T*
(#include <err.h>)Tj
T*
(#include <string.h>)Tj
0 -3 TD
(static int cnt;)Tj
0 -1.5 TD
(static sem_t *sem;)Tj
0 -3 TD
(enum { Nloops = 10 };)Tj
0 -1.5 TD
(static int nloops = Nloops;)Tj
0 -4.5 TD
(static void*)Tj
0 -1.5 TD
(tmain\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i;)Tj
0 -3 TD
(for\(i = 0; i < nloops; i++\) {)Tj
2.4 -1.5 TD
(if \(sem_wait\(sem\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "down"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(cnt++;)Tj
T*
(if \(sem_post\(sem\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "up"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 24 Tm
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
75 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
78 0 obj
<<
/Length 2783
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-22-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(int)Tj
0 -1.5 TD
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i;)Tj
T*
(pthread_t thr[3];)Tj
T*
(void *sts;)Tj
T*
(char name[1024];)Tj
0 -3 TD
(if\(argc > 1\) {)Tj
2.4 -1.5 TD
(nloops = atoi\(argv[1]\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(snprintf\(name, sizeof name, "/sem.%s.%d", argv[0], getpid\(\)\);)Tj
T*
(sem = sem_open\(name, O_CREAT, 0644, 1\);)Tj
T*
(if \(sem == NULL\) {)Tj
2.4 -1.5 TD
(err\(1, "sem creat"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(printf\("sem ’%s’ created\\n", name\);)Tj
T*
(for\(i = 0; i < 3; i++\) {)Tj
2.4 -1.5 TD
(if\(pthread_create\(thr+i, NULL, tmain, &cnt\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
0 -3 TD
(for\(i = 0; i < 3; i++\) {)Tj
2.4 -1.5 TD
(pthread_join\(thr[i], &sts\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(sem_close\(sem\) < 0\) {)Tj
2.4 -1.5 TD
(warn\("sem close"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(sem_unlink\(name\);)Tj
0 -3 TD
(printf\("cnt is %d\\n", cnt\);)Tj
0 -1.5 TD
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 294 Tm
0.0313 Tw
[(Se trata una v)15(ez más de nuestro programa para incrementar un contador en tres threads el número indicado)]TJ
0 -1.2 TD
0 Tw
[(de v)15(eces, y podemos comprobar que funciona sin condiciones de carrera:)]TJ
/TT8 1 Tf
8 0 0 8 133 264 Tm
(unix$ semcnt 10000)Tj
0 -1.5 TD
(sem ’/sem.semcnt.49029’ created)Tj
T*
(cnt is 30000)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 198 Tm
0.1934 Tw
(Lo primero que hemos de tener en cuenta es que estos semáforos)Tj
/TT4 1 Tf
28.5342 0 TD
[(tienen nombr)37(e)]TJ
/TT6 1 Tf
6.3483 0 TD
0.1935 Tw
[(y)-443.4(e)15(xisten como una)]TJ
-34.8825 -1.2 TD
0.2818 Tw
[(abstracción que suministra el k)10(ernel. UNIX mantendrá un record dentro con la implementación del)]TJ
T*
0 Tw
(semáforo. Eso quiere decir que hemos de destruirlo cuando no sean útil.)Tj
0 -2.4 TD
0.0962 Tw
(Puesto que tienen nombre, hemos de tener cuidado de no utilizar nombres que usen otros programas. En)Tj
0 -1.2 TD
0.0035 Tw
(nuestro caso optamos por construir un nombre a partir de ")Tj
/TT8 1 Tf
23.5482 0 TD
0 Tw
(sem)Tj
/TT6 1 Tf
1.8003 0 TD
0.0035 Tw
[(")-253.5(\(el nombre de nuestra v)25(ariable\),)]TJ
/TT8 1 Tf
13.6483 0 TD
0 Tw
(argv[0])Tj
/TT6 1 Tf
-38.9968 -1.2 TD
(\(el nombre de nuestro programa\) y)Tj
/TT8 1 Tf
14.1616 0 TD
(getpid\(\))Tj
/TT6 1 Tf
4.8008 0 TD
[(.)-250(Por ejemplo,)]TJ
/TT8 1 Tf
8 0 0 8 133 108 Tm
(/sem.semcnt.49029)Tj
/TT6 1 Tf
10 0 0 10 72 90 Tm
0.105 Tw
[(es el nombre del semáforo que hemos creado en la ejecución anterior)55(.)-605.1(Haciéndolo así, es imposible que)]TJ
0 -1.2 TD
0 Tw
(colisionemos con otros nombres de semáforo de nuestro programa o de otros.)Tj
0 -5.4 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
79 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
81 0 obj
<<
/Length 4552
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-23-)Tj
-20.767 -3.6 TD
(El semáforo lo ha creado la llamada)Tj
/TT8 1 Tf
8 0 0 8 133 690 Tm
(sem = sem_open\(name, O_CREAT, 0644, 1\);)Tj
0 -1.5 TD
(if \(sem == NULL\) {)Tj
2.4 -1.5 TD
(err\(1, "sem creat"\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 636 Tm
0.0719 Tw
(que es similar a)Tj
/TT4 1 Tf
6.7856 0 TD
0 Tw
(open\(2\))Tj
/TT6 1 Tf
3.4318 0 TD
0.0719 Tw
(cuando se usa para crear )Tj
/TT9 1 Tf
10.3815 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0719 Tw
[(chero. Esta v)15(ez creamos un semáforo y no un )]TJ
/TT9 1 Tf
19.0144 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero.)Tj
-40.7256 -1.2 TD
0.101 Tw
[(T)35(ras los permisos se indica)]TJ
/TT4 1 Tf
11.5511 0 TD
[(qué númer)45(o)-351(d)0(e)-351.1(tic)20(k)10(ets)]TJ
/TT6 1 Tf
9.3263 0 TD
(queremos inicialmente en el semáforo. En este caso)Tj
/TT8 1 Tf
21.7175 0 TD
0 Tw
(1)Tj
/TT6 1 Tf
-42.5948 -1.2 TD
[(dado que es un mute)15(x.)]TJ
0 -2.4 TD
(Cuando todo termine, necesitamos cerrar y destruir el semáforo utilizando)Tj
/TT8 1 Tf
8 0 0 8 133 570 Tm
(if \(sem_close\(sem\) < 0\) {)Tj
2.4 -1.5 TD
(warn\("sem close"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(sem_unlink\(name\);)Tj
/TT6 1 Tf
10 0 0 10 72 504 Tm
0.0021 Tw
[(Una v)15(ez creado, podemos compartir el semáforo con otros procesos que no compartan memoria. Basta abrir)]TJ
0 -1.2 TD
0 Tw
(el semáforo en ellos utilizando)Tj
/TT8 1 Tf
8 0 0 8 133 474 Tm
(sem = sem_open\(semname, 0\);)Tj
0 -1.5 TD
(if \(sem == NULL\) {)Tj
2.4 -1.5 TD
(// no existe!)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 420 Tm
0.0236 Tw
(después de haberlo creado. No obstante, es mejor utilizar en ellos la misma llamada que usamos en nuestro)Tj
0 -1.2 TD
0 Tw
(programa, indicando)Tj
/TT8 1 Tf
8.5249 0 TD
(O_CREAT)Tj
/TT6 1 Tf
4.4507 0 TD
[(para que el semáforo se cree si no e)15(xiste.)]TJ
/TT2 1 Tf
-12.9756 -3.6 TD
[(10. )-250(¿Y)-250(si algo falla?)]TJ
/TT6 1 Tf
0 -1.56 TD
0.0376 Tw
[(Un problema con este tipo de semáforos es que siguen e)15(xistiendo hasta que se llame a)]TJ
/TT8 1 Tf
35.1876 0 TD
0 Tw
(sem_unlink)Tj
/TT6 1 Tf
6.2885 0 TD
(para)Tj
-41.4761 -1.2 TD
0.0303 Tw
[(borrarlos. Si nuestro programa f)10(alla, el semáforo se)15(guirá e)15(xistiendo en el k)10(ernel hasta que rearranquemos o)]TJ
T*
0.0184 Tw
(detengamos el sistema. Lamentablemente, no disponemos de comando alguno para listar los semáforos que)Tj
T*
0 Tw
[(e)15(xisten y es posible que dejemos semáforos perdidos si nuestro programa f)10(alla.)]TJ
0 -2.4 TD
0.0614 Tw
[(Un remedio paliati)25(v)20(o)20( )-20(es)-311.4(usar como nombre del semáforo uno que no incluya el)]TJ
/TT4 1 Tf
32.6398 0 TD
0 Tw
(pid)Tj
/TT6 1 Tf
1.5893 0 TD
0.0615 Tw
(del proceso y tan sólo)Tj
-34.2292 -1.2 TD
0.1481 Tw
(use el nombre de nuestra aplicación y escribir un programa que borre el semáforo \(o borrarlo antes de)Tj
T*
0 Tw
(crearlo por si habíamos dejado alguno en ejecuciones anteriores.)Tj
0 -2.4 TD
[(Otro problema importante es que si un proceso muere mientras tiene un tick)10(et el tick)10(et se pierde.)]TJ
T*
0.0088 Tw
[(En conclusión, si se desea un mute)15(x)-258.8(e)0(s)-258.8(mucho mejor utilizar un cierre en un )]TJ
/TT9 1 Tf
30.7191 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0088 Tw
(chero si hemos de sincronizar)Tj
-31.2752 -1.2 TD
0 Tw
(procesos distintos que no forman parte del mismo programa.)Tj
0 -2.4 TD
0.0029 Tw
(Este problema afecta a muchos otros semáforos y abstracciones disponibles en UNIX. Presta atención a qué)Tj
0 -1.2 TD
0.0536 Tw
[(hace el sistema ante una muere prematura de un proceso que tiene un mute)15(x. Lo deseable es que el mute)15(x)]TJ
T*
0.1054 Tw
(se libere, pero posiblemente no suceda tal cosa. Los cierres en )Tj
/TT9 1 Tf
26.2331 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.1054 Tw
(cheros con)Tj
/TT8 1 Tf
4.7645 0 TD
0 Tw
(flock)Tj
/TT6 1 Tf
3.3559 0 TD
0.1054 Tw
(si que se comportan)Tj
-34.9097 -1.2 TD
0.1302 Tw
[(correctamente y es por ello que son populares a la hora de conse)15(guir un mute)15(x)-380.2(para compartir recursos)]TJ
T*
0 Tw
(entre procesos totalmente distintos.)Tj
0 -2.4 TD
0.0506 Tw
[(Cuando los procesos forman parte del mismo programa basta con que los mute)15(x)-300.6(que creamos se liberen si)]TJ
0 -1.2 TD
0.0776 Tw
[(el programa muere. Si uno de los procesos del programa muere prematuramente, esto se debe a un b)20(ug y)]TJ
T*
0.0724 Tw
(dado que es el mismo programa no afecta a otras aplicaciones, por lo que no es un problema en realidad:)Tj
T*
0 Tw
(habrá que depurar el error y listo.)Tj
0 -5.64 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
82 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
84 0 obj
<<
/Length 2309
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-24-)Tj
/TT2 1 Tf
-20.767 -3.6 TD
[(11. )-250(Semáf)25(or)18(os con pipes)]TJ
/TT6 1 Tf
0 -1.56 TD
0.0492 Tw
[(V)111(amos a implementar un semáforo que podremos usar en aplicaciones que compartan un proceso padre \(o)]TJ
0 -1.2 TD
0.094 Tw
(ancestro\) común. La idea es utilizar un pipe como semáforo y guardar tantos bytes en el semáforo como)Tj
T*
0 Tw
[(tick)10(ets queramos tener: P)15(ara hacer un)]TJ
/TT8 1 Tf
15.1908 0 TD
(down)Tj
/TT6 1 Tf
2.6504 0 TD
(leeremos y byte y para hacer un)Tj
/TT8 1 Tf
12.9663 0 TD
(up)Tj
/TT6 1 Tf
1.4502 0 TD
(escribiremos un byte.)Tj
-32.2577 -2.4 TD
0.1187 Tw
(Con esta idea, el único problema es que es preciso crear el semáforo antes de llamar a)Tj
/TT8 1 Tf
36.559 0 TD
0 Tw
(fork)Tj
/TT6 1 Tf
2.7692 0 TD
0.1188 Tw
(\(para que)Tj
-39.3282 -1.2 TD
0.177 Tw
(todos lo procesos lo compartan\), si es que usamos)Tj
/TT8 1 Tf
21.8117 0 TD
0 Tw
(fork)Tj
/TT6 1 Tf
2.4004 0 TD
0.177 Tw
[(.)-427(S)0(i)-427(usamos threads, dado que comparten los)]TJ
-24.2121 -1.2 TD
0 Tw
(descriptores de )Tj
/TT9 1 Tf
6.2754 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero, no tenemos problemas.)Tj
-6.8315 -2.4 TD
[(Este es el interf)10(az para nuestros semáforos)]TJ
/TT11 1 Tf
6.1 -1.8 TD
([sem.h])Tj
/TT6 1 Tf
4.2007 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 566.4 Tm
(typedef struct Sem Sem;)Tj
0 -1.5 TD
(struct Sem {)Tj
2.4 -1.5 TD
(int fd[2];)Tj
-2.4 -1.5 TD
(};)Tj
0 -3 TD
(int semdown\(Sem *s\);)Tj
0 -1.5 TD
(int semup\(Sem *s\);)Tj
T*
(int semcreat\(Sem *s, int val\);)Tj
T*
(void semclose\(Sem *s\);)Tj
/TT6 1 Tf
10 0 0 10 72 452.4 Tm
[(y)-250(esta es la implementación:)]TJ
/TT11 1 Tf
6.1 -1.8 TD
([sem.c])Tj
/TT6 1 Tf
4.2007 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 422.4 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include "sem.h")Tj
0 -3 TD
(int)Tj
0 -1.5 TD
(semdown\(Sem *s\))Tj
T*
({)Tj
2.4 -1.5 TD
(char c;)Tj
0 -3 TD
(if \(read\(s->fd[0], &c, 1\) != 1\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return 0;)Tj
-2.4 -1.5 TD
(})Tj
0 -4.5 TD
(int)Tj
0 -1.5 TD
(semup\(Sem *s\))Tj
T*
({)Tj
2.4 -1.5 TD
(if \(write\(s->fd[1], " ", 1\) != 1\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return 0;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 24 Tm
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
85 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
87 0 obj
<<
/Length 1306
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-25-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(void)Tj
0 -1.5 TD
(semclose\(Sem *s\))Tj
T*
({)Tj
2.4 -1.5 TD
(close\(s->fd[0]\);)Tj
T*
(close\(s->fd[1]\);)Tj
T*
(s->fd[0] = s->fd[1] = -1;)Tj
-2.4 -1.5 TD
(})Tj
0 -4.5 TD
(int)Tj
0 -1.5 TD
(semcreat\(Sem *s, int n\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i;)Tj
0 -3 TD
(if \(pipe\(s->fd\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(for \(i = 0; i < n; i++\) {)Tj
2.4 -1.5 TD
(if \(semup\(s\) < 0\) {)Tj
2.4 -1.5 TD
(semclose\(s\);)Tj
T*
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
T*
(return 0;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 390 Tm
0.0204 Tw
[(Una v)15(ez los tenemos, podemos utilizarlos como en nuestro programa de ejemplo, que hemos adaptado para)]TJ
0 -1.2 TD
0 Tw
(utilizar estos semáforos:)Tj
/TT11 1 Tf
6.1 -1.8 TD
([semcnt.c])Tj
/TT6 1 Tf
6.001 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 348 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include <stdlib.h>)Tj
T*
(#include <pthread.h>)Tj
T*
(#include <err.h>)Tj
T*
(#include <string.h>)Tj
T*
(#include "sem.h")Tj
0 -3 TD
(enum { Nloops = 10 };)Tj
0 -1.5 TD
(static int nloops = Nloops;)Tj
T*
(static int cnt;)Tj
T*
(static Sem sem;)Tj
/TT6 1 Tf
10 0 0 10 72 24 Tm
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
88 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
90 0 obj
<<
/Length 1524
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-26-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(static void*)Tj
0 -1.5 TD
(tmain\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i;)Tj
0 -3 TD
(for\(i = 0; i < nloops; i++\) {)Tj
2.4 -1.5 TD
(if \(semdown\(&sem\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "down"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(cnt++;)Tj
T*
(if \(semup\(&sem\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "up"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
0 -4.5 TD
(int)Tj
0 -1.5 TD
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
(int i;)Tj
T*
(pthread_t thr[3];)Tj
T*
(void *sts;)Tj
0 -3 TD
(if\(argc > 1\) {)Tj
2.4 -1.5 TD
(nloops = atoi\(argv[1]\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(semcreat\(&sem, 1\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "sem creat"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(for\(i = 0; i < 3; i++\) {)Tj
2.4 -1.5 TD
(if\(pthread_create\(thr+i, NULL, tmain, &cnt\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
0 -3 TD
(for\(i = 0; i < 3; i++\) {)Tj
2.4 -1.5 TD
(pthread_join\(thr[i], &sts\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(semclose\(&sem\);)Tj
T*
(printf\("cnt is %d\\n", cnt\);)Tj
T*
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 162 Tm
(Ahora podemos compilarlo y ejecutarlo sin problemas:)Tj
/TT8 1 Tf
8 0 0 8 133 144 Tm
(unix$ cc -c sem.c)Tj
T*
(unix$ cc -c semcnt.c)Tj
T*
(unix$ cc -o semcnt semcnt.o sem.o)Tj
T*
(unix$ semcnt 10000)Tj
T*
(cnt is 30000)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 24 Tm
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
91 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
93 0 obj
<<
/Length 6413
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-27-)Tj
-20.767 -3.6 TD
0.0554 Tw
[(Un problema con estos semáforos es que no podemos hacer que el número de tick)10(ets supere el número de)]TJ
0 -1.2 TD
0.0216 Tw
[(bytes que caben en el b)20(u)0(f)25(fer del pipe.)-521.6(¿Qué pasaría si lo hacemos? Una v)15(entaja es que cuando nuestro pro-)]TJ
T*
0.1713 Tw
(grama termine su ejecución se cerrarán sus descriptores de )Tj
/TT9 1 Tf
25.2258 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.1713 Tw
(chero incluso si hemos olvidado llamar a)Tj
/TT8 1 Tf
-25.7819 -1.2 TD
0 Tw
(semclose)Tj
/TT6 1 Tf
5.1345 0 TD
0.0838 Tw
[(y)-333.7(e)0(l)-333.7(semáforo \(el pipe\) se destruirá sin dejar recursos perdidos en el sistema. Otra v)15(entaja es)]TJ
-5.1345 -1.2 TD
0 Tw
(que podemos usarlos tanto si creamos procesos que llamen a)Tj
/TT8 1 Tf
24.4937 0 TD
(fork)Tj
/TT6 1 Tf
2.6504 0 TD
(como si usamos)Tj
/TT8 1 Tf
6.6387 0 TD
(pthread_create)Tj
/TT6 1 Tf
8.4014 0 TD
(.)Tj
/TT2 1 Tf
-42.1841 -2.4 TD
[(12. )-250(Buffers)-250(compartidos: el pr)18(oductor/consumidor)]TJ
/TT6 1 Tf
0 -1.56 TD
0.1401 Tw
(Un problema que aparece a todas horas en programación concurrente es el del)Tj
/TT2 1 Tf
33.2792 0 TD
0 Tw
[(pr)18(oductor)37(-consumidor)]TJ
/TT6 1 Tf
9.6672 0 TD
(,)Tj
-42.9464 -1.2 TD
0.0855 Tw
(también conocido como el del)Tj
/TT2 1 Tf
12.7293 0 TD
[(b)20(uffer acotado)]TJ
/TT6 1 Tf
6.3145 0 TD
[(.)-335.5(S)0(e)-335.5(trata de tener procesos que producen cosas y procesos)]TJ
-19.0438 -1.2 TD
0.1346 Tw
[(que las consumen, como puede v)15(erse en la )]TJ
/TT9 1 Tf
18.3059 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.1346 Tw
[(gura 5. Cuando el b)20(u)0(f)25(fer no tiene límite se denomina)]TJ
/TT4 1 Tf
22.656 0 TD
0 Tw
[(pr)45(o-)]TJ
-41.5181 -1.2 TD
[(ductor)20(-consumidor)]TJ
/TT6 1 Tf
8.0358 0 TD
0.1398 Tw
(al problema y en otro caso se le conoce como el problema del)Tj
/TT4 1 Tf
26.7246 0 TD
0.1399 Tw
[(b)20(u)0(f)18(fer acotado)]TJ
/TT6 1 Tf
5.9623 0 TD
0 Tw
[(.)-389.9(¡Los)]TJ
-40.7227 -1.2 TD
(pipes son un caso de dicho problema!)Tj
ET
0 G
1 J 1 j 0.4 w 10 M []0 d
1 i 
165.6 513.6 m
165.6 497.702 152.698 484.8 136.8 484.8 c
120.902 484.8 108 497.702 108 513.6 c
108 529.498 120.902 542.4 136.8 542.4 c
152.698 542.4 165.6 529.498 165.6 513.6 c
s
BT
10 0 0 10 117.36 511.4 Tm
(productor)Tj
ET
165.6 441.6 m
165.6 425.702 152.698 412.8 136.8 412.8 c
120.902 412.8 108 425.702 108 441.6 c
108 457.498 120.902 470.4 136.8 470.4 c
152.698 470.4 165.6 457.498 165.6 441.6 c
s
BT
10 0 0 10 117.36 439.4 Tm
(productor)Tj
ET
165.6 369.6 m
165.6 353.702 152.698 340.8 136.8 340.8 c
120.902 340.8 108 353.702 108 369.6 c
108 385.498 120.902 398.4 136.8 398.4 c
152.698 398.4 165.6 385.498 165.6 369.6 c
s
BT
10 0 0 10 117.36 367.4 Tm
(productor)Tj
ET
0.5 g
201.6 448.8 14.4 -14.4 re
f
201.6 434.4 14.4 14.4 re
S
216 448.8 14.4 -14.4 re
f
216 434.4 14.4 14.4 re
S
230.4 448.8 14.4 -14.4 re
f
230.4 434.4 14.4 14.4 re
S
244.8 448.8 14.4 -14.4 re
f
244.8 434.4 14.4 14.4 re
259.2 434.4 14.4 14.4 re
273.6 434.4 14.4 14.4 re
288 434.4 14.4 14.4 re
302.4 434.4 14.4 14.4 re
316.8 434.4 14.4 14.4 re
331.2 434.4 14.4 14.4 re
345.6 434.4 14.4 14.4 re
360 434.4 14.4 14.4 re
468 477.6 m
468 461.702 455.098 448.8 439.2 448.8 c
423.302 448.8 410.4 461.702 410.4 477.6 c
410.4 493.498 423.302 506.4 439.2 506.4 c
455.098 506.4 468 493.498 468 477.6 c
s
BT
10 0 0 10 415.59 475.4 Tm
0 g
(consumidor)Tj
ET
468 405.6 m
468 389.702 455.098 376.8 439.2 376.8 c
423.302 376.8 410.4 389.702 410.4 405.6 c
410.4 421.498 423.302 434.4 439.2 434.4 c
455.098 434.4 468 421.498 468 405.6 c
s
BT
10 0 0 10 415.59 403.4 Tm
(consumidor)Tj
ET
201.6 448.8 m
195.264 452.616 l
197.784 455.136 l
f
0.1 w 
201.6 448.8 m
195.264 452.616 l
197.784 455.136 l
s
0.4 w 
157.23 493.23 m
196.47 453.87 l
S
201.6 441.6 m
194.4 439.8 l
194.4 443.4 l
f
0.1 w 
201.6 441.6 m
194.4 439.8 l
194.4 443.4 l
s
0.4 w 
165.63 441.63 m
194.43 441.63 l
S
201.6 434.4 m
197.784 428.064 l
195.264 430.584 l
f
0.1 w 
201.6 434.4 m
197.784 428.064 l
195.264 430.584 l
s
0.4 w 
157.23 390.03 m
196.47 429.27 l
S
418.824 457.224 m
412.632 453.12 l
411.408 456.504 l
f
0.1 w 
418.824 457.224 m
412.632 453.12 l
411.408 456.504 l
s
0.4 w 
374.43 441.63 m
412.11 454.83 l
S
418.824 425.976 m
411.408 426.696 l
412.632 430.08 l
f
0.1 w 
418.824 425.976 m
411.408 426.696 l
412.632 430.08 l
s
0.4 w 
374.43 441.63 m
412.11 428.31 l
S
BT
/TT2 1 Tf
10 0 0 10 97 317.8 Tm
(Figura 5:)Tj
/TT4 1 Tf
4.2217 0 TD
[(El pr)45(oblema del pr)45(oductor consumidor con un b)20(u)0(f)18(fer acotado.)]TJ
/TT6 1 Tf
-6.7217 -1.2 TD
(La solución es sencilla si pensamos en lo siguiente:)Tj
2.5 -1.56 TD
[(•)-2150(P)15(ara producir un ítem es preciso tener un hueco en el b)20(u)0(f)25(fer)]TJ
T*
[(•)-2150(P)15(ara consumir in ítem es preciso tener un ítem en el b)20(u)0(f)25(fer)]TJ
T*
[(•)-2150(P)15(ara operar con el b)20(u)0(f)25(fer es preciso utilizar un mute)15(x.)]TJ
-2.5 -2.4 TD
0.1179 Tw
[(La idea es tener un semáforo que represente los ítems en el b)20(u)0(f)25(fer)40(,)-367.9(otro que represente los huecos en el)]TJ
0 -1.2 TD
0 Tw
[(b)20(u)0(f)25(fer y otro que represente el mute)15(x:)]TJ
2.5 -1.56 TD
[(•)-2150(Cuando queramos un hueco basta pedirlo:)]TJ
/TT8 1 Tf
19.5514 0 TD
(down\(huecos\))Tj
/TT6 1 Tf
7.2012 0 TD
(.)Tj
-26.7525 -1.56 TD
[(•)-2150(Cuando queramos un ítem basta pedirlo:)]TJ
/TT8 1 Tf
18.941 0 TD
(down\(ítems\))Tj
/TT6 1 Tf
6.6011 0 TD
(.)Tj
-28.0421 -1.2 TD
0.1104 Tw
[(El mute)15(x)-360.4(y)0(a)-360.4(sabes manejarlo. Naturalmente, si alguien produce un ítem deberá llamar a)]TJ
/TT8 1 Tf
36.7396 0 TD
0 Tw
(up\(ítems\))Tj
/TT6 1 Tf
5.7613 0 TD
(e,)Tj
-42.5009 -1.2 TD
0.0446 Tw
(igualmente, si alguien produce un hueco deberá llamar a)Tj
/TT8 1 Tf
23.2255 0 TD
0 Tw
(up\(huecos)Tj
/TT6 1 Tf
5.4009 0 TD
0.0445 Tw
(\). Si piensas en los semáforos como)Tj
-28.6264 -1.2 TD
0 Tw
[(en cajas con tick)10(ets, todo esto te resultará natural.)]TJ
0 -2.4 TD
0.178 Tw
[(Primero v)25(amos a implementar un b)20(u)0(f)25(fer compartido que, en nuestro caso, será una cola de caracteres.)]TJ
0 -1.2 TD
0.1021 Tw
[(V)111(amos a mostrar y discutir el código en el mismo orden en que aparece en el )]TJ
/TT9 1 Tf
32.5675 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero)Tj
/TT8 1 Tf
2.5727 0 TD
(pc.c)Tj
/TT6 1 Tf
2.4004 0 TD
[(,)-352(secuencial-)]TJ
-38.0968 -1.2 TD
(mente de arriba a abajo.)Tj
0 -8.38 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
94 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
96 0 obj
<<
/Length 2384
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-28-)Tj
/TT11 1 Tf
-14.667 -3.6 TD
([pc.c])Tj
/TT6 1 Tf
3.6006 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 696 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include <stdlib.h>)Tj
T*
(#include <string.h>)Tj
T*
(#include <pthread.h>)Tj
T*
(#include <err.h>)Tj
T*
(#include "sem.h")Tj
0 -3 TD
(enum {QSIZE = 4};)Tj
T*
(typedef struct Queue Queue;)Tj
0 -1.5 TD
(struct Queue {)Tj
2.4 -1.5 TD
(Sem mutex, nchars, nholes;)Tj
T*
(char buf[QSIZE];)Tj
T*
(int hd, tl;)Tj
-2.4 -1.5 TD
(};)Tj
/TT6 1 Tf
10 0 0 10 72 486 Tm
0.0559 Tw
(En la cola)Tj
/TT8 1 Tf
4.4157 0 TD
0 Tw
(Queue)Tj
/TT6 1 Tf
3.3064 0 TD
0.0559 Tw
[(guardamos los tres semáforos que hemos mencionado, el b)20(u)0(f)25(fer para guardar los carac-)]TJ
-7.7221 -1.2 TD
0.0304 Tw
(teres y la posición de la cabeza \()Tj
/TT8 1 Tf
13.1786 0 TD
0 Tw
(hd)Tj
/TT6 1 Tf
1.2002 0 TD
0.0303 Tw
[(\))-280.3(y)-280.3(cola \()]TJ
/TT8 1 Tf
3.6724 0 TD
0 Tw
(tl)Tj
/TT6 1 Tf
1.2002 0 TD
0.0303 Tw
[(\))-280.3(e)0(n)-280.3(e)0(l)-280.3(b)20(uf)25(fer)55(.)-280.3(Insertaremos caracteres al )]TJ
/TT9 1 Tf
16.4358 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0303 Tw
(nal de la cola \(en)Tj
/TT8 1 Tf
-36.2434 -1.2 TD
0 Tw
(tl)Tj
/TT6 1 Tf
1.2002 0 TD
[(\))-250(y)-250(los tomaremos del principio, de)]TJ
/TT8 1 Tf
14.2192 0 TD
(hd)Tj
/TT6 1 Tf
1.2002 0 TD
(.)Tj
-16.6196 -2.4 TD
(Inicializar la cola requiere crear los semáforos y poco más:)Tj
/TT8 1 Tf
8 0 0 8 133 420 Tm
(static int)Tj
0 -1.5 TD
(qinit\(Queue *q\))Tj
T*
({)Tj
2.4 -1.5 TD
(memset\(q, 0, sizeof *q\);)Tj
T*
(if \(semcreat\(&q->mutex, 1\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(semcreat\(&q->nchars, 0\) < 0\) {)Tj
2.4 -1.5 TD
(semclose\(&q->mutex\);)Tj
T*
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(semcreat\(&q->nholes, QSIZE\) < 0\) {)Tj
2.4 -1.5 TD
(semclose\(&q->mutex\);)Tj
T*
(semclose\(&q->nchars\);)Tj
T*
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return 0;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 198 Tm
0.05 Tw
[(T)80(omamos la precaución de dejar todos los campos a v)25(alores nulos llamando a)]TJ
/TT8 1 Tf
31.8975 0 TD
0 Tw
(memset)Tj
/TT6 1 Tf
3.9007 0 TD
0.0501 Tw
(para que todo esté)Tj
-35.7981 -1.2 TD
0 Tw
(bien inicializado.)Tj
0 -2.4 TD
[(T)70(erminar de usar la cola requiere cerrar nuestros semáforos:)]TJ
0 -13.8 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
97 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
99 0 obj
<<
/Length 1476
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-29-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(static void)Tj
0 -1.5 TD
(qterm\(Queue *q\))Tj
T*
({)Tj
2.4 -1.5 TD
(semclose\(&q->mutex\);)Tj
T*
(semclose\(&q->nchars\);)Tj
T*
(semclose\(&q->nholes\);)Tj
T*
(q->hd = q->tl = 0;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 594 Tm
0.1124 Tw
[(¡Ahora hay que hacer la parte interesante! P)15(ara poner un carácter en la cola necesitamos y hueco, lue)15(go)]TJ
0 -1.2 TD
0.0016 Tw
[(ponerlo mientras tenemos el mute)15(x)-251.6(\(para e)25(vitar condiciones de carrera en el uso de la cola\) y además hemos)]TJ
T*
0 Tw
[(de echar un tick)10(et al semáforo que indica cuántos ítems hay en la cola:)]TJ
/TT8 1 Tf
8 0 0 8 133 552 Tm
(static int)Tj
0 -1.5 TD
(qput\(Queue *q, int c\))Tj
T*
({)Tj
2.4 -1.5 TD
(if \(semdown\(&q->nholes\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(semdown\(&q->mutex\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(q->buf[q->tl] = c;)Tj
T*
(q->tl = \(q->tl+1\)%QSIZE;)Tj
T*
(if \(semup\(&q->mutex\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(semup\(&q->nchars\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return 0;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 306 Tm
0.0154 Tw
[(T)80(omar un carácter de la cola es simétrico con respecto a ponerlo. Esta v)15(ez pedimos ítems y generamos hue-)]TJ
0 -1.2 TD
0 Tw
(cos:)Tj
0 -27 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
100 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
102 0 obj
<<
/Length 1997
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-30-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(static int)Tj
0 -1.5 TD
(qget\(Queue *q\))Tj
T*
({)Tj
2.4 -1.5 TD
(int c;)Tj
0 -3 TD
(if \(semdown\(&q->nchars\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(semdown\(&q->mutex\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
[(c)-600(=)-600(q->buf[q->hd];)]TJ
T*
(q->hd = \(q->hd+1\)%QSIZE;)Tj
T*
(if \(semup\(&q->mutex\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(semup\(&q->nholes\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return c;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 438 Tm
[(Y)100(a)100( )-100(podemos declarar la cola:)]TJ
/TT8 1 Tf
8 0 0 8 133 420 Tm
(static Queue q;)Tj
/TT6 1 Tf
10 0 0 10 72 390 Tm
(Un)Tj
/TT4 1 Tf
1.4722 0 TD
[(pr)45(oductor)]TJ
/TT6 1 Tf
4.205 0 TD
(será un proceso que pone caracteres en la cola. En nuestro caso cada productor pondrá 10:)Tj
/TT8 1 Tf
8 0 0 8 133 372 Tm
(static void*)Tj
0 -1.5 TD
(tput\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(char *s;)Tj
T*
(int i;)Tj
0 -3 TD
0.6 Tc
[(s=a)600(;)]TJ
0 -1.5 TD
0 Tc
(for \(i = 0; i < 10; i++\) {)Tj
2.4 -1.5 TD
(if \(qput\(&q, *s\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "qput"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 198 Tm
0.0578 Tw
(Hemos pasado como parámetro un puntero a un)Tj
/TT8 1 Tf
19.8458 0 TD
0 Tw
(char)Tj
/TT6 1 Tf
2.7083 0 TD
-0.0001 Tc
0.058 Tw
[(para que cada productor ponga)-308(u)-0.1(n)-308(carácter distinto)]TJ
-22.5541 -1.2 TD
0 Tc
0 Tw
(en la cola.)Tj
0 -2.4 TD
-0.0001 Tc
0.0676 Tw
[(El consumidor v)24.9(a)-317.6(a)-317.6(sacar de la cola todo lo que pueda hasta que obtenga)-317.6(u)-0.1(n)]TJ
/TT8 1 Tf
31.4841 0 TD
0 Tc
0 Tw
(0)Tj
/TT6 1 Tf
0.6001 0 TD
0.0674 Tw
[(,)-317.4(con lo que marcaremos el)]TJ
/TT9 1 Tf
-32.0842 -1.2 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(nal de los datos:)Tj
-0.5562 -12.6 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
103 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
105 0 obj
<<
/Length 1675
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-31-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(static void*)Tj
0 -1.5 TD
(tget\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(int c;)Tj
T*
(char buf[1];)Tj
0 -3 TD
(for \(;;\) {)Tj
2.4 -1.5 TD
[(c)-600(=)-600(qget\(&q\);)]TJ
T*
(if \(c == 0\) {)Tj
2.4 -1.5 TD
(break;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(c < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "qget"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(buf[0] = c;)Tj
T*
(if \(write\(1, buf, 1\) != 1\) {)Tj
2.4 -1.5 TD
(err\(1, "write"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 438 Tm
[(Por último, nuestro programa principal inicializará la cola y creará dos productores y un consumidor)55(.)]TJ
/TT8 1 Tf
8 0 0 8 133 420 Tm
(int)Tj
T*
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
(pthread_t p1, p2, g;)Tj
T*
(void *sts;)Tj
0 -3 TD
(if \(qinit\(&q\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "qinit"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(pthread_create\(&p1, NULL, tput, "a"\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(pthread_create\(&p2, NULL, tput, "b"\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(pthread_create\(&g, NULL, tget, NULL\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(pthread_join\(p1, &sts\);)Tj
T*
(pthread_join\(p2, &sts\);)Tj
T*
(if \(qput\(&q, 0\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "qput"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(pthread_join\(g, &sts\);)Tj
T*
(write\(1, "\\n", 1\);)Tj
T*
(qterm\(&q\);)Tj
T*
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 66 Tm
(¡Listos para ejecutarlo!)Tj
0 -4.2 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
106 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
109 0 obj
<<
/Length 3246
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-32-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(unix$ pc)Tj
0 -1.5 TD
(bbaabaaaaabababbabbb)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 654 Tm
0.0278 Tw
[(Este problema es muy importante. En casi todos los programas utilizarás algún tipo de b)20(u)0(f)25(fer compartido y)]TJ
0 -1.2 TD
0.036 Tw
[(necesitarás código que resuelv)25(a)-286.1(e)0(l)-286.1(problema del productor)20(-consumidor)55(.)-286.1(Además, es un b)20(uen problema para)]TJ
T*
0.0186 Tw
[(terminar de entender cómo se utilizan los semáforos y cómo funcionan. Observ)25(a)-268.6(que si el b)20(u)0(f)25(fer se llena, el)]TJ
T*
0.0049 Tw
[(productor espera a tener hueco. Igualmente, si el b)20(u)0(f)25(fer se v)25(acía, el consumidor espera a tener algo que con-)]TJ
T*
0 Tw
[(sumir)55(.)-250(¡Los pipes funcionan de este modo!)]TJ
/TT2 1 Tf
0 -3.6 TD
0.25 Tw
[(13. Monitor)18(es)]TJ
/TT6 1 Tf
0 -1.56 TD
0.0434 Tw
[(Existe otra abstracción básica para conse)15(guir la sincronización entre procesos a la hora de acceder a recur)20(-)]TJ
0 -1.2 TD
0 Tw
(sos compartidos. Se trata del)Tj
/TT2 1 Tf
11.7197 0 TD
(monitor)Tj
/TT6 1 Tf
3.4438 0 TD
(.)Tj
-15.1636 -2.4 TD
0.0131 Tw
(Un monitor es una abstracción que, en teoría, suministra el lenguaje de programación y presenta un aspecto)Tj
0 -1.2 TD
0.0128 Tw
[(similar a un módulo o paquete.)-512.8(La diferencia con respecto a un módulo \(o paquete\) radica en que se garan-)]TJ
T*
0.0257 Tw
(tiza que)Tj
/TT4 1 Tf
3.4386 0 TD
[(sólo un pr)45(oceso puede ejecutar dentr)45(o)-275.7(del monitor en un momento dado)]TJ
/TT6 1 Tf
29.0491 0 TD
[(.)-275.6(Dicho de otro modo, ten-)]TJ
-32.4878 -1.2 TD
0 Tw
[(emos e)15(xclusión mutua en el acceso al monitor)55(.)]TJ
0 -2.4 TD
0.1231 Tw
(Los datos compartidos se declararían dentro del monitor y sólo pueden ser utilizados llamando a opera-)Tj
0 -1.2 TD
0 Tw
[(ciones del monitor)55(.)]TJ
0 -2.4 TD
0.1239 Tw
(Así pues, podríamos utilizar un contador compartido sin tener condiciones de carrera si escribimos algo)Tj
0 -1.2 TD
0 Tw
(como:)Tj
/TT8 1 Tf
8 0 0 8 133 392.4 Tm
(monitor sharedcnt;)Tj
0 -1.5 TD
(static int cnt;)Tj
T*
(void)Tj
T*
(incr\(int delta\))Tj
T*
({)Tj
2.4 -1.5 TD
(cnt += delta;)Tj
-2.4 -1.5 TD
(})Tj
T*
(int)Tj
T*
(get\(void\))Tj
T*
({)Tj
2.4 -1.5 TD
(return cnt;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 230.4 Tm
[(La idea es que desde fuera del monitor)40(,)-250(podemos utilizar llamadas del estilo a)]TJ
/TT8 1 Tf
8 0 0 8 133 212.4 Tm
(sharedcnt c;)Tj
T*
(c.incr\(+3\);)Tj
T*
(printf\("val is %d\\n", c.get\(\)\);)Tj
/TT6 1 Tf
10 0 0 10 72 170.4 Tm
(sin tener que preocuparlos por la programación concurrente.)Tj
0 -2.4 TD
0.0547 Tw
(Esta abstracción es tan simple de usar y suele entenderse tan bien que habitualmente siempre se programa)Tj
0 -1.2 TD
-0.0001 Tc
0.0785 Tw
[(pensando en ella. ¡T)69.9(engamos monitores o no! De hecho, rara v)14.9(ez tenemos monitores de v)14.9(erdad. )-250(Normal-)]TJ
T*
0 Tc
0.0531 Tw
(mente tenemos las herramientas para implementarlos y para programar pensando en ellos, y ese es el caso)Tj
T*
0 Tw
(en UNIX.)Tj
0 -2.4 TD
[(P)15(ara implementar un monitor basta con declarar un mute)15(x)-250(para el monitor y)]TJ
0 -6.24 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
110 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
112 0 obj
<<
/Length 2245
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-33-)Tj
-18.267 -3.6 TD
[(•)-2150(adquirir el mute)15(x)-250(a)0(l)-250(principio de cada operación del monitor y)]TJ
0 -1.56 TD
[(•)-2150(soltar el mute)15(x)-250(a)0(l)]TJ
/TT9 1 Tf
9.6496 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
[(nal de cada operación del monitor)55(.)]TJ
-12.7058 -1.2 TD
[(T)80(a)0(n)-250(sencillo como eso.)]TJ
0 -2.4 TD
0.0406 Tw
(Por ejemplo, para el caso del contador compartido podríamos implementar el monitor como una estructura)Tj
0 -1.2 TD
0.0926 Tw
[(que contiene el contador y el mute)15(x)-342.7(del monitor: Una v)15(ez más, v)25(amos a describir el código en el mismo)]TJ
T*
0 Tw
(orden en que aparece en el )Tj
/TT9 1 Tf
10.8823 0 TD
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
(chero en C del programa.)Tj
/TT11 1 Tf
-5.3385 -3 TD
([cntmon.c])Tj
/TT6 1 Tf
6.001 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 590.4 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include <stdlib.h>)Tj
T*
(#include <string.h>)Tj
T*
(#include <pthread.h>)Tj
T*
(#include <err.h>)Tj
T*
(#include "sem.h")Tj
0 -3 TD
(typedef struct Cnt Cnt;)Tj
0 -1.5 TD
(struct Cnt {)Tj
2.4 -1.5 TD
(Sem mutex;)Tj
T*
(int val;)Tj
-2.4 -1.5 TD
(};)Tj
T*
(static Cnt cnt;)Tj
/TT6 1 Tf
10 0 0 10 72 404.4 Tm
0.0885 Tw
(En este caso,)Tj
/TT8 1 Tf
5.7079 0 TD
0 Tw
(cnt)Tj
/TT6 1 Tf
2.1388 0 TD
0.0885 Tw
[(es nuestro monitor)55(.)-338.5(Pero necesitamos programar las operaciones del monitor)55(.)-338.5(Primero,)]TJ
-7.8467 -1.2 TD
0 Tw
(una para inicializarlo)Tj
/TT8 1 Tf
8 0 0 8 133 374.4 Tm
(static int)Tj
0 -1.5 TD
(cntinit\(Cnt *c\))Tj
T*
({)Tj
2.4 -1.5 TD
(memset\(c, 0, sizeof *c\);)Tj
T*
(if \(semcreat\(&c->mutex, 1\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return 0;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 260.4 Tm
[(y)-250(otra para terminar su operación)]TJ
/TT8 1 Tf
8 0 0 8 133 242.4 Tm
(static void)Tj
T*
(cntterm\(Cnt *c\))Tj
T*
({)Tj
2.4 -1.5 TD
(semclose\(&c->mutex\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 164.4 Tm
0.0371 Tw
[(Después, una función para cada operación del monitor teniendo cuidado de mantener el mute)15(x)-287.2(del monitor)]TJ
0 -1.2 TD
0 Tw
(cerrado durante toda la función.)Tj
0 -12.84 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
113 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
115 0 obj
<<
/Length 1921
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-34-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(static int)Tj
0 -1.5 TD
(cntincr\(Cnt *c, int delta\))Tj
T*
({)Tj
2.4 -1.5 TD
(if \(semdown\(&c->mutex\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(c->val += delta;)Tj
T*
(if \(semup\(&c->mutex\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return 0;)Tj
-2.4 -1.5 TD
(})Tj
T*
([verb)Tj
T*
(static int)Tj
T*
(cntget\(Cnt *c, int *valp\))Tj
T*
({)Tj
2.4 -1.5 TD
(if \(semdown\(&c->mutex\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(*valp = c->val;)Tj
T*
(if \(semup\(&c->mutex\) < 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return 0;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 390 Tm
[(Y)-250(y)0(a)-250(tenemos implementado el monitor)55(.)-250(Ahora podemos declararlo:)]TJ
/TT8 1 Tf
8 0 0 8 133 372 Tm
(static Cnt c;)Tj
/TT6 1 Tf
10 0 0 10 72 342 Tm
(Un thread que desee incrementar el contador utiliza la operación del monitor correspondiente para hacerlo:)Tj
/TT8 1 Tf
8 0 0 8 133 324 Tm
(static void*)Tj
T*
(tincr\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(if \(cntincr\(&c, 1\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "cntintr"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 222 Tm
0.1116 Tw
(Nótese como podemos utilizar)Tj
/TT8 1 Tf
12.8878 0 TD
0 Tw
(cntintr)Tj
/TT6 1 Tf
4.5623 0 TD
0.1116 Tw
(casi como en un programa secuencial, sin pensar mucho en la)Tj
-17.4501 -1.2 TD
0 Tw
(programación concurrente.)Tj
0 -2.4 TD
0.0205 Tw
[(El programa principal v)25(a)-270.5(a)-270.5(inicializar el monitor)40(,)-270.6(crear v)25(arios threads que incrementen el contador que con-)]TJ
0 -1.2 TD
0 Tw
[(tiene y por último imprimir cuánto v)25(ale dicho contador utilizando la operación)]TJ
/TT8 1 Tf
31.6322 0 TD
(cntget)Tj
/TT6 1 Tf
3.8506 0 TD
[(del monitor)55(.)]TJ
-35.4828 -15 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
116 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
118 0 obj
<<
/Length 2706
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-35-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(int)Tj
0 -1.5 TD
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
(pthread_t thr[10];)Tj
T*
(void *sts;)Tj
T*
(int i, val;)Tj
0 -3 TD
(if \(cntinit\(&c\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "cntinit"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(for \(i = 0; i < 10; i++\) {)Tj
2.4 -1.5 TD
(if \(pthread_create\(&thr[i], NULL, tincr, NULL\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
T*
(for\(i = 0; i < 10; i++\) {)Tj
2.4 -1.5 TD
(pthread_join\(thr[i], &sts\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(cntget\(&c, &val\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "cntget"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(printf\("val %d\\n", val\);)Tj
T*
(cntterm\(&c\);)Tj
T*
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 390 Tm
(Si ejecutamos el programa podemos utilizar el contador compartido sin condiciones de carrera:)Tj
/TT8 1 Tf
8 0 0 8 133 372 Tm
(unix$ cntmon)Tj
T*
(val 10)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 318 Tm
(¿Podríamos entonces programar)Tj
/TT8 1 Tf
8 0 0 8 133 300 Tm
(if \(cntget\(&c, &val\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "cntget"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(val > 0\) {)Tj
2.4 -1.5 TD
(if \(cntincr\(&c, -1\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "cntincr"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 198 Tm
0.106 Tw
[(para decrementar un contador sólo si es positi)25(v)20(o)0(?)-356(E)0(n)-356(teoría el monitor nos permite solucionar las condi-)]TJ
0 -1.2 TD
0 Tw
(ciones de carrera... ¿No? ¡Lo que no impide es que cometamos estupideces!)Tj
0 -2.4 TD
0.013 Tw
(Pensemos. La llamada a)Tj
/TT8 1 Tf
9.9656 0 TD
0 Tw
(cntget)Tj
/TT6 1 Tf
3.8636 0 TD
0.013 Tw
(funciona correctamente, y deja en)Tj
/TT8 1 Tf
13.8355 0 TD
0 Tw
(val)Tj
/TT6 1 Tf
2.0633 0 TD
0.013 Tw
[(el v)25(alor del contador)55(.)-263(Igualmente,)]TJ
-29.728 -1.2 TD
0.0392 Tw
(la llamada a)Tj
/TT8 1 Tf
5.1982 0 TD
0 Tw
(cntincr)Tj
/TT6 1 Tf
4.4899 0 TD
0.0392 Tw
(incrementa el contador \(en)Tj
/TT8 1 Tf
11.0958 0 TD
0 Tw
(-1)Tj
/TT6 1 Tf
1.4894 0 TD
0.0392 Tw
(en este caso\). Lo que ocurre es que entre una y otra)Tj
-22.2732 -1.2 TD
0.0744 Tw
[(llamadas podría ser que otro proceso entre y decremente el contador)55(.)-324.5(Este es el problema de no mantener)]TJ
T*
0 Tw
(cerrado el recurso durante)Tj
/TT4 1 Tf
10.6606 0 TD
[(toda la r)37(e)40(gión crítica)]TJ
/TT6 1 Tf
8.4499 0 TD
(.)Tj
-19.1105 -2.4 TD
0.0766 Tw
(En este ejemplo, todo el código debería formar parte de una operación del monitor:)Tj
/TT4 1 Tf
34.5879 0 TD
0 Tw
[(decr)37(ementar)20(-si-pode-)]TJ
-34.5879 -1.2 TD
(mos)Tj
/TT6 1 Tf
1.6113 0 TD
(.)Tj
-1.6113 -6.6 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
119 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
121 0 obj
<<
/Length 4675
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-36-)Tj
/TT2 1 Tf
-20.767 -3.6 TD
0.25 Tw
[(14. V)92(ariables )250(condición)]TJ
/TT6 1 Tf
0 -1.56 TD
0.1192 Tw
[(V)111(amos a implementar el problema del b)20(u)0(f)25(fer acotado utilizando monitores. Al contrario que cuando uti-)]TJ
0 -1.2 TD
0.0356 Tw
(lizamos semáforos, aquí la idea es poder tener operaciones en el monitor que podamos llamar olvidando la)Tj
T*
0 Tw
(concurrencia.)Tj
0 -2.4 TD
0.0476 Tw
[(En principio tendríamos una operación para poner un ítem en el b)20(u)0(f)25(fer y otra para consumirlo. Ambas uti-)]TJ
0 -1.2 TD
0.0103 Tw
[(lizarían un b)20(u)0(f)25(fer declarado)]TJ
/TT4 1 Tf
11.3233 0 TD
0 Tw
[(dentr)45(o)]TJ
/TT6 1 Tf
2.8261 0 TD
0.0103 Tw
[(del monitor y ambas tendrían el cierre \(o el mute)15(x\) del monitor mientras)]TJ
-14.1495 -1.2 TD
0 Tw
[(ejecutan. Lue)15(go no habría condiciones de carrera en el acceso al b)20(u)0(f)25(fer)55(.)]TJ
0 -2.4 TD
0.0509 Tw
[(El problema viene en cuanto v)15(emos que para implementar)]TJ
/TT8 1 Tf
23.9621 0 TD
0 Tw
(put)Tj
/TT6 1 Tf
2.1012 0 TD
0.051 Tw
(necesitamos esperar a tener un hueco para)Tj
-26.0633 -1.2 TD
0 Tw
[(poder continuar)55(.)-250(D)0(e)-250(tener monitores, nos gustaría poder escribir)]TJ
/TT8 1 Tf
8 0 0 8 133 566.4 Tm
(void)Tj
0 -1.5 TD
(put\(int item\))Tj
T*
({)Tj
2.4 -1.5 TD
(if\(buffer lleno\) {)Tj
2.4 -1.5 TD
(wait until\(tenemos hueco\))Tj
-2.4 -1.5 TD
(})Tj
T*
(buffer[nitems++] = item;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 464.4 Tm
0.0125 Tw
(El código se entiende, ¿No? Dentro de)Tj
/TT8 1 Tf
15.7486 0 TD
0 Tw
(put)Tj
/TT6 1 Tf
2.0628 0 TD
0.0124 Tw
[(tenemos el mute)15(x)-262.5(del monitor)40(,)-262.4(n)0(o)-262.4(t)0(e)-262.4(preocupes por condiciones)]TJ
-17.8114 -1.2 TD
0 Tw
(de carrera. Habría bastado)Tj
/TT8 1 Tf
8 0 0 8 133 434.4 Tm
(buffer[nitems++] = item;)Tj
/TT6 1 Tf
10 0 0 10 72 416.4 Tm
0.0435 Tw
[(si el b)20(u)0(f)25(fer nunca se llena. El problema es que si el b)20(u)0(f)25(fer puede llenarse hay que esperar a tener un hueco)]TJ
T*
0 Tw
(antes de consumirlo.)Tj
0 -2.4 TD
(Igualmente, el consumidor podría utilizar una operación como la que sigue:)Tj
/TT8 1 Tf
8 0 0 8 133 362.4 Tm
(int)Tj
0 -1.5 TD
(get\(void\))Tj
T*
({)Tj
2.4 -1.5 TD
(if\(buffer vacio\) {)Tj
2.4 -1.5 TD
(wait until\(tenemos un item\))Tj
-2.4 -1.5 TD
(})Tj
T*
(return buffer[--nitems];)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 260.4 Tm
0.048 Tw
[(Primero esperamos si es que el b)20(u)0(f)25(fer está v)25(acío a que deje de estarlo y lue)15(go consumimos uno de los ele-)]TJ
0 -1.2 TD
0 Tw
[(mentos del b)20(u)0(f)25(fer)55(.)]TJ
0 -2.4 TD
0.0531 Tw
[(P)15(ara poder esperar hasta que se cumpla determinada condición que necesitamos)]TJ
/TT4 1 Tf
32.7508 0 TD
0 Tw
[(dentr)45(o)-303.2(d)0(e)-303.2(u)0(n)-303.2(monitor)]TJ
/TT6 1 Tf
8.8895 0 TD
(ten-)Tj
-41.6403 -1.2 TD
(emos)Tj
/TT2 1 Tf
2.3608 0 TD
[(v)10(ariables condición)]TJ
/TT6 1 Tf
8.2405 0 TD
[(.)-250(Son v)25(ariables que representan una condición y tienen dos operaciones:)]TJ
-8.1013 -1.56 TD
(•)Tj
/TT8 1 Tf
2.5001 0 TD
(wait)Tj
/TT6 1 Tf
2.4004 0 TD
[(:)-250(espera incondicionalmente a que se cumpla la condición)]TJ
-4.9005 -1.56 TD
(•)Tj
/TT8 1 Tf
2.5001 0 TD
(signal)Tj
/TT6 1 Tf
3.6006 0 TD
[(:)-250(a)20(visa de que la condición se cumple.)]TJ
-8.6007 -2.4 TD
0.1394 Tw
(Nótese que estamos comprobando con un)Tj
/TT8 1 Tf
17.7211 0 TD
0 Tw
(if)Tj
/TT6 1 Tf
1.5895 0 TD
0.1393 Tw
(si la condición se cumple o no antes de esperar a que se)Tj
-19.3106 -1.2 TD
0.0693 Tw
(cumpla. Dicho de otro modo,)Tj
/TT8 1 Tf
12.3162 0 TD
0 Tw
(wait)Tj
/TT6 1 Tf
2.7197 0 TD
0.0694 Tw
[(en una v)25(ariable condición duerme al proceso incondicionalmente. En)]TJ
-15.0359 -1.2 TD
0 Tw
(cambio,)Tj
/TT8 1 Tf
3.4839 0 TD
(wait)Tj
/TT6 1 Tf
2.6909 0 TD
0.0405 Tw
(en un semáforo \(recuerda que era un posible nombre para)Tj
/TT8 1 Tf
23.6726 0 TD
0 Tw
(down)Tj
/TT6 1 Tf
2.4004 0 TD
0.0404 Tw
[(\))-290.4(sólo duerme al proceso si)]TJ
-32.2477 -1.2 TD
0 Tw
[(el semáforo está sin tick)10(ets.)]TJ
0 -2.4 TD
0.0013 Tw
[(Otra forma de v)15(erlo es que con los semáforos es el semáforo el que se ocupa de si tenemos que dormir o no.)]TJ
0 -1.2 TD
-0.0001 Tc
0.0476 Tw
[(Nosotros tan sólo pedimos un tick)9.9(et y cuando lo tengamos)]TJ
/TT8 1 Tf
24.0684 0 TD
0 Tc
0 Tw
(down)Tj
/TT6 1 Tf
2.6979 0 TD
(\(o)Tj
/TT8 1 Tf
1.1305 0 TD
(wait)Tj
/TT6 1 Tf
2.4004 0 TD
0.0475 Tw
[(\))-297.5(nos dejará continuar)55(.)-297.5(Pero con)]TJ
-30.2972 -1.2 TD
0.081 Tw
[(las v)25(ariables condición somos nosotros los que decidimos esperar cuando v)15(emos que no podemos contin-)]TJ
T*
0 Tw
[(uar)55(.)]TJ
0 -3.72 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
122 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
124 0 obj
<<
/Length 3540
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-37-)Tj
-20.767 -3.6 TD
0.0095 Tw
[(P)15(ara que el código de nuestro problema esté completo f)10(alta llamar a)]TJ
/TT8 1 Tf
27.4674 0 TD
0 Tw
(signal)Tj
/TT6 1 Tf
3.86 0 TD
0.0094 Tw
(cuando se cumplan las condi-)Tj
-31.3274 -1.2 TD
0 Tw
(ciones. Si le damos un repaso, este sería nuestro código por el momento:)Tj
/TT8 1 Tf
8 0 0 8 133 678 Tm
(Cond hayhuecos, hayitems;)Tj
0 -1.5 TD
(void)Tj
T*
(put\(int item\))Tj
T*
({)Tj
2.4 -1.5 TD
(if\(ntimes == SIZEOFBUFFER\) {)Tj
2.4 -1.5 TD
(wait\(hayhuecos\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(buffer[nitems++] = item;)Tj
T*
(signal\(hayitems\);)Tj
-2.4 -1.5 TD
(})Tj
0 -4.5 TD
(int)Tj
0 -1.5 TD
(get\(void\))Tj
T*
({)Tj
2.4 -1.5 TD
(int item;)Tj
T*
(if\(nitems == 0\) {)Tj
2.4 -1.5 TD
(wait\(hayitems\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(item = buffer[--nitems];)Tj
T*
(signal\(hayhuecos\);)Tj
T*
(return item;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 384 Tm
0.0967 Tw
[(Un b)20(uen nombre para una v)25(ariable condición es el nombre de la condición. Cuando se llama a)]TJ
/TT8 1 Tf
39.4761 0 TD
0 Tw
(wait)Tj
/TT6 1 Tf
2.4004 0 TD
0.3468 Tc
[(,e)346.8(l)]TJ
-41.8765 -1.2 TD
0 Tc
0.0416 Tw
[(proceso se duerme soltando el mute)15(x)-291.6(del monitor para que otros procesos puedan utilizar el monitor mien-)]TJ
T*
0.0029 Tw
(tras dormimos. Cuando se llama a)Tj
/TT8 1 Tf
13.8758 0 TD
0 Tw
(signal)Tj
/TT6 1 Tf
3.6006 0 TD
0.003 Tw
[(,)-252.9(uno de los procesos que duermen despierta. Si no hay procesos)]TJ
-17.4764 -1.2 TD
0 Tw
(dormidos esperando,)Tj
/TT8 1 Tf
8.5815 0 TD
(signal)Tj
/TT6 1 Tf
3.8506 0 TD
(no hace nada.)Tj
-12.4321 -2.4 TD
0.0229 Tw
(Esto quiere decir que deberíamos llamar a)Tj
/TT8 1 Tf
17.2365 0 TD
0 Tw
(signal)Tj
/TT6 1 Tf
3.8735 0 TD
0.0229 Tw
(justo al )Tj
/TT9 1 Tf
3.2123 0 TD
0 Tw
(Þ)Tj
/TT6 1 Tf
0.5562 0 TD
0.0229 Tw
(nal de la operación, de tal modo que nosotros)Tj
-24.8784 -1.2 TD
0 Tw
[(terminamos y el proceso que hemos despertado es el único que continúa ejecutando dentro del monitor)55(.)]TJ
0 -2.4 TD
0.1404 Tw
[(Las v)25(ariables condición forman parte de la implementación del monitor y se ocupan de soltar el mute)15(x)]TJ
0 -1.2 TD
0.0083 Tw
(mientras duermen. Dependiendo de la implementación, lo normal es que cuando un proceso despierta en un)Tj
/TT8 1 Tf
T*
0 Tw
(signal)Tj
/TT6 1 Tf
3.6006 0 TD
[(,)-250(e)0(l)-250(que lo despierta le ceda el mute)15(x.)]TJ
-3.6006 -2.4 TD
0.0241 Tw
[(En otras ocasiones \(lamentablemente\) el proceso que despierta compite por el mute)15(x)-274.1(del monitor con todos)]TJ
0 -1.2 TD
0.0362 Tw
[(los demás, lo que quiere decir que otro proceso podría ganarle y hacer que la condición de nue)25(v)20(o)20( )-20(sea f)10(alta.)]TJ
T*
0 Tw
(Eso implica que el código en este caso debería ser)Tj
/TT8 1 Tf
8 0 0 8 133 198 Tm
(while\(nitems == 0\) {)Tj
2.4 -1.5 TD
(wait\(hayitems\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 156 Tm
0.25 Tc
[(yn)250(o)]TJ
/TT8 1 Tf
8 0 0 8 133 138 Tm
0 Tc
(if\(nitems == 0\) {)Tj
2.4 -1.5 TD
(wait\(hayitems\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 96 Tm
0.0586 Tw
[(puesto que cuando despertamos es posible que tengamos que v)20(olv)15(er a dormir si otro se nos adelante antes)]TJ
0 -1.2 TD
0.0356 Tw
[(de que podamos adquirir el mute)15(x)-285.6(del monitor)55(.)-285.6(J)0(a)20(v)25(a)-285.6(e)0(s)-285.6(u)0(n)-285.6(notable ejemplo de esta)]TJ
/TT2 1 Tf
33.4659 0 TD
0 Tw
(pésima)Tj
/TT6 1 Tf
3.2856 0 TD
(implementación)Tj
-36.7515 -1.2 TD
(de monitores.)Tj
0 -4.8 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
125 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT2 4 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT9 8 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
127 0 obj
<<
/Length 2077
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-38-)Tj
-20.767 -3.6 TD
0.0372 Tw
(En UNIX disponemos de llamadas en la librería)Tj
/TT4 1 Tf
19.7366 0 TD
0 Tw
[(pthr)37(ead\(3\))]TJ
/TT6 1 Tf
4.5271 0 TD
0.0372 Tw
[(para usar v)25(ariables condición. Dichas llamadas)]TJ
-24.2636 -1.2 TD
0.0029 Tw
[(utilizan tanto una v)25(ariable condición como un mute)15(x)-252.9(que tenemos que crear para que lo use el monitor)55(.)-252.8(Esto)]TJ
T*
0 Tw
(es, podemos implementar monitores pero los estamos programando casi a mano.)Tj
0 -2.4 TD
0.0261 Tw
[(Sigue el código de nuestro productor consumidor utilizando los mute)15(x)-276.1(y)-276.1(v)25(ariables condición de)]TJ
/TT4 1 Tf
38.7058 0 TD
0 Tw
[(pthr)37(ead\(3\))]TJ
/TT6 1 Tf
4.2399 0 TD
(,)Tj
-42.9456 -1.2 TD
-0.0001 Tc
0.0001 Tw
(en lugar de utilizar nuestros semáforos como en la implementación que vimos antes.)Tj
/TT11 1 Tf
6.1 -3 TD
0 Tc
0 Tw
([pcmon.c])Tj
/TT6 1 Tf
5.4009 0 TD
(:)Tj
/TT8 1 Tf
8 0 0 8 133 606 Tm
(#include <stdio.h>)Tj
0 -1.5 TD
(#include <unistd.h>)Tj
T*
(#include <stdlib.h>)Tj
T*
(#include <string.h>)Tj
T*
(#include <pthread.h>)Tj
T*
(#include <err.h>)Tj
T*
(#include "sem.h")Tj
0 -3 TD
(enum {QSIZE = 4};)Tj
T*
(typedef struct Queue Queue;)Tj
0 -1.5 TD
(struct Queue {)Tj
2.4 -1.5 TD
(pthread_mutex_t mutex;)Tj
T*
(pthread_cond_t notempty, notfull;)Tj
T*
(char buf[QSIZE];)Tj
T*
(int hd, tl, sz;)Tj
-2.4 -1.5 TD
(};)Tj
0 -4.5 TD
(static int)Tj
0 -1.5 TD
(qinit\(Queue *q\))Tj
T*
({)Tj
2.4 -1.5 TD
(memset\(q, 0, sizeof *q\);)Tj
T*
(if \(pthread_mutex_init\(&q->mutex, NULL\) != 0\) {)Tj
2.4 -1.5 TD
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(pthread_cond_init\(&q->notfull, NULL\) < 0\) {)Tj
2.4 -1.5 TD
(pthread_mutex_destroy\(&q->mutex\);)Tj
T*
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(pthread_cond_init\(&q->notempty, NULL\) < 0\) {)Tj
2.4 -1.5 TD
(pthread_cond_destroy\(&q->notfull\);)Tj
T*
(pthread_mutex_destroy\(&q->mutex\);)Tj
T*
(return -1;)Tj
-2.4 -1.5 TD
(})Tj
T*
(return 0;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 24 Tm
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
128 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT4 5 0 R
/TT6 6 0 R
/TT8 7 0 R
/TT11 9 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
130 0 obj
<<
/Length 1129
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-39-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(static void)Tj
0 -1.5 TD
(qterm\(Queue *q\))Tj
T*
({)Tj
2.4 -1.5 TD
(pthread_cond_destroy\(&q->notfull\);)Tj
T*
(pthread_cond_destroy\(&q->notempty\);)Tj
T*
(pthread_mutex_destroy\(&q->mutex\);)Tj
T*
(q->hd = q->tl = 0;)Tj
-2.4 -1.5 TD
(})Tj
0 -4.5 TD
(static void)Tj
0 -1.5 TD
(qput\(Queue *q, int c\))Tj
T*
({)Tj
2.4 -1.5 TD
(if \(pthread_mutex_lock\(&q->mutex\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "mutex"\);)Tj
-2.4 -1.5 TD
(})Tj
0 -3 TD
(while \(q->sz == QSIZE\) {)Tj
2.4 -1.5 TD
(if \(pthread_cond_wait\(&q->notfull, &q->mutex\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "cond wait"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
0 -3 TD
(q->buf[q->tl] = c;)Tj
0 -1.5 TD
(q->tl = \(q->tl+1\)%QSIZE;)Tj
T*
(q->sz++;)Tj
0 -3 TD
(if \(pthread_cond_signal\(&q->notempty\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "cond signal"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(pthread_mutex_unlock\(&q->mutex\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "mutex"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 24 Tm
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
131 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
133 0 obj
<<
/Length 1211
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-40-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(static int)Tj
0 -1.5 TD
(qget\(Queue *q\))Tj
T*
({)Tj
2.4 -1.5 TD
(int c;)Tj
0 -3 TD
(if \(pthread_mutex_lock\(&q->mutex\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "mutex"\);)Tj
-2.4 -1.5 TD
(})Tj
0 -3 TD
(while \(q->sz == 0\) {)Tj
2.4 -1.5 TD
(if \(pthread_cond_wait\(&q->notempty, &q->mutex\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "cond wait"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
0 -3 TD
[(c)-600(=)-600(q->buf[q->hd];)]TJ
0 -1.5 TD
(q->hd = \(q->hd+1\)%QSIZE;)Tj
T*
(q->sz--;)Tj
0 -3 TD
(if \(pthread_cond_signal\(&q->notfull\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "cond signal"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(pthread_mutex_unlock\(&q->mutex\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "mutex"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(return c;)Tj
-2.4 -1.5 TD
(})Tj
0 -4.5 TD
(static Queue q;)Tj
T*
(static void*)Tj
0 -1.5 TD
(tput\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(char *s;)Tj
T*
(int i;)Tj
0 -3 TD
0.6 Tc
[(s=a)600(;)]TJ
0 -1.5 TD
0 Tc
(for \(i = 0; i < 10; i++\) {)Tj
2.4 -1.5 TD
(qput\(&q, s[0]\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 24 Tm
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
134 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
136 0 obj
<<
/Length 1529
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-41-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(static void*)Tj
0 -1.5 TD
(tget\(void *a\))Tj
T*
({)Tj
2.4 -1.5 TD
(int c;)Tj
T*
(char buf[1];)Tj
0 -3 TD
(for \(;;\) {)Tj
2.4 -1.5 TD
[(c)-600(=)-600(qget\(&q\);)]TJ
T*
(if \(c == 0\) {)Tj
2.4 -1.5 TD
(break;)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(c < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "qget"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(buf[0] = c;)Tj
T*
(if \(write\(1, buf, 1\) != 1\) {)Tj
2.4 -1.5 TD
(err\(1, "write"\);)Tj
-2.4 -1.5 TD
(})Tj
-2.4 -1.5 TD
(})Tj
T*
(return NULL;)Tj
-2.4 -1.5 TD
(})Tj
0 -4.5 TD
(int)Tj
0 -1.5 TD
(main\(int argc, char* argv[]\))Tj
T*
({)Tj
2.4 -1.5 TD
(pthread_t p1, p2, g;)Tj
T*
(void *sts;)Tj
0 -3 TD
(if \(qinit\(&q\) < 0\) {)Tj
2.4 -1.5 TD
(err\(1, "qinit"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(pthread_create\(&p1, NULL, tput, "a"\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(pthread_create\(&p2, NULL, tput, "b"\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(if \(pthread_create\(&g, NULL, tget, NULL\) != 0\) {)Tj
2.4 -1.5 TD
(err\(1, "thread"\);)Tj
-2.4 -1.5 TD
(})Tj
T*
(pthread_join\(p1, &sts\);)Tj
T*
(pthread_join\(p2, &sts\);)Tj
T*
(qput\(&q, 0\);)Tj
T*
(pthread_join\(g, &sts\);)Tj
T*
(write\(1, "\\n", 1\);)Tj
T*
(qterm\(&q\);)Tj
T*
(exit\(0\);)Tj
-2.4 -1.5 TD
(})Tj
/TT6 1 Tf
10 0 0 10 72 102 Tm
[(Si lo ejecutamos, v)15(eremos que funciona de un modo similar a nuestra última implementación.)]TJ
0 -7.8 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
137 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
140 0 obj
<<
/Length 412
>>
stream
BT
/TT6 1 Tf
10 0 0 10 279.67 744 Tm
0 g
/GS1 gs
0 Tc
0 Tw
(-42-)Tj
/TT8 1 Tf
8 0 0 8 133 708 Tm
(unix$ pcmon)Tj
0 -1.5 TD
(bababaaababaabbbaabb)Tj
T*
(unix$)Tj
/TT6 1 Tf
10 0 0 10 72 654 Tm
0.0907 Tw
[(T)70(e)70( )-70.1(resultará útil en este punto comparar la implementación con semáforos con la implementación con un)]TJ
0 -1.2 TD
0 Tw
[(monitor)55(.)]TJ
0 -61.8 TD
(\(c\) 2016 Francisco J. Ballesteros)Tj
ET
endstream
endobj
141 0 obj
<<
/ProcSet [/PDF /Text ]
/Font <<
/TT6 6 0 R
/TT8 7 0 R
>>
/ExtGState <<
/GS1 10 0 R
>>
>>
endobj
10 0 obj
<<
/Type /ExtGState
/SA false
/SM 0.02
/OP false
/op false
/OPM 1
/BG2 /Default
/UCR2 /Default
/HT /Default
/TR2 /Default
>>
endobj
142 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 676
/Descent -250
/Flags 262178
/FontBBox [-168 -218 1000 935]
/FontName /Times-Bold
/ItalicAngle 0
/StemV 133
/XHeight 461
/StemH 139
>>
endobj
143 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 653
/Descent -250
/Flags 98
/FontBBox [-169 -217 1010 883]
/FontName /Times-Italic
/ItalicAngle -15
/StemV 76
/XHeight 441
/StemH 76
>>
endobj
144 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 662
/Descent -250
/Flags 34
/FontBBox [-168 -218 1000 898]
/FontName /Times-Roman
/ItalicAngle 0
/StemV 84
/XHeight 450
/StemH 84
>>
endobj
145 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 35
/FontBBox [-28 -250 628 805]
/FontName /Courier
/ItalicAngle 0
/StemV 51
/XHeight 426
/StemH 51
>>
endobj
146 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 662
/Descent -250
/Flags 34
/FontBBox [-168 -218 1000 898]
/FontName /Times-Roman
/ItalicAngle 0
/StemV 84
/XHeight 450
/StemH 84
>>
endobj
147 0 obj
<<
/Type /FontDescriptor
/Ascent 753
/CapHeight 562
/Descent -246
/Flags 262179
/FontBBox [-113 -250 749 801]
/FontName /Courier-Bold
/ItalicAngle 0
/StemV 133
/XHeight 439
/StemH 84
>>
endobj
148 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 676
/Descent -250
/Flags 262178
/FontBBox [-168 -218 1000 935]
/FontName /Times-Bold
/ItalicAngle 0
/StemV 133
/XHeight 461
/StemH 139
>>
endobj
149 0 obj
<<
/Type /FontDescriptor
/Ascent 750
/CapHeight 653
/Descent -250
/Flags 98
/FontBBox [-169 -217 1010 883]
/FontName /Times-Italic
/ItalicAngle -15
/StemV 76
/XHeight 441
/StemH 76
>>
endobj
4 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 243
/Widths [250 0 0 500 0 0 0 0 333 333 0 0 0 333 250 278 
500 500 500 500 500 500 500 500 500 500 333 0 0 0 0 500 
0 0 667 722 722 0 611 0 0 389 0 0 0 944 722 778 
0 0 0 556 667 722 722 0 722 722 0 0 0 0 0 0 
0 500 556 444 556 444 333 500 556 278 0 556 278 833 556 500 
556 556 444 389 333 556 500 722 500 500 444 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 500 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 500 0 0 0 0 0 0 0 444 0 0 0 278 0 0 
0 0 0 500 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Bold
/FontDescriptor 142 0 R
>>
endobj
5 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 250
/Widths [250 0 0 0 0 0 0 0 333 333 0 0 250 333 250 278 
0 500 500 500 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 611 667 0 611 611 0 0 333 444 0 0 833 0 0 
0 0 0 500 0 722 0 0 0 0 0 0 0 0 0 0 
0 500 500 444 500 444 278 500 500 278 278 444 278 722 500 500 
500 500 389 389 278 500 444 667 444 444 389 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 444 0 0 0 278 0 0 
0 0 0 500 0 0 0 0 0 0 500 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Italic
/FontDescriptor 143 0 R
>>
endobj
6 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 250
/Widths [250 333 408 0 0 833 0 0 333 333 0 0 250 333 250 278 
500 500 500 500 500 500 500 500 500 500 278 278 0 0 0 444 
0 722 667 667 722 611 556 0 722 333 389 0 611 889 722 722 
556 722 667 556 611 722 722 0 722 722 0 0 0 0 0 0 
0 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 
500 500 333 389 278 500 500 0 500 500 444 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 350 0 0 0 0 0 0 0 0 0 0 
0 333 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 444 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 444 0 0 0 0 0 0 0 444 0 0 0 278 0 0 
0 500 0 500 0 0 0 0 0 0 500 ]
/Encoding /WinAnsiEncoding
/BaseFont /Times-Roman
/FontDescriptor 144 0 R
>>
endobj
7 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 32
/LastChar 243
/Widths [600 600 600 600 600 600 600 0 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
0 600 600 600 600 600 600 0 600 600 0 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 600 600 0 600 
0 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 
600 600 600 600 600 600 600 600 600 600 600 600 0 600 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 600 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 600 0 0 
0 0 0 600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier
/FontDescriptor 145 0 R
>>
endobj
8 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 222
/LastChar 223
/Widths [556 556 ]
/Encoding /MacRomanEncoding
/BaseFont /Times-Roman
/FontDescriptor 146 0 R
>>
endobj
9 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 46
/LastChar 116
/Widths [600 0 0 0 600 600 600 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 600 0 600 
0 0 0 600 0 600 0 600 600 0 600 600 0 0 0 600 
600 600 600 0 600 600 600 ]
/Encoding /WinAnsiEncoding
/BaseFont /Courier-Bold
/FontDescriptor 147 0 R
>>
endobj
50 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 222
/LastChar 222
/Widths [556 ]
/Encoding /MacRomanEncoding
/BaseFont /Times-Bold
/FontDescriptor 148 0 R
>>
endobj
54 0 obj
<<
/Type /Font
/Subtype /TrueType
/FirstChar 222
/LastChar 223
/Widths [500 500 ]
/Encoding /MacRomanEncoding
/BaseFont /Times-Italic
/FontDescriptor 149 0 R
>>
endobj
1 0 obj
<<
/Type /Page
/Parent 11 0 R
/Resources 3 0 R
/Contents 2 0 R
>>
endobj
12 0 obj
<<
/Type /Page
/Parent 11 0 R
/Resources 14 0 R
/Contents 13 0 R
>>
endobj
15 0 obj
<<
/Type /Page
/Parent 11 0 R
/Resources 17 0 R
/Contents 16 0 R
>>
endobj
18 0 obj
<<
/Type /Page
/Parent 11 0 R
/Resources 20 0 R
/Contents 19 0 R
>>
endobj
21 0 obj
<<
/Type /Page
/Parent 11 0 R
/Resources 23 0 R
/Contents 22 0 R
>>
endobj
24 0 obj
<<
/Type /Page
/Parent 11 0 R
/Resources 26 0 R
/Contents 25 0 R
>>
endobj
27 0 obj
<<
/Type /Page
/Parent 11 0 R
/Resources 29 0 R
/Contents 28 0 R
>>
endobj
30 0 obj
<<
/Type /Page
/Parent 11 0 R
/Resources 32 0 R
/Contents 31 0 R
>>
endobj
33 0 obj
<<
/Type /Page
/Parent 11 0 R
/Resources 35 0 R
/Contents 34 0 R
>>
endobj
36 0 obj
<<
/Type /Page
/Parent 11 0 R
/Resources 38 0 R
/Contents 37 0 R
>>
endobj
39 0 obj
<<
/Type /Page
/Parent 43 0 R
/Resources 41 0 R
/Contents 40 0 R
>>
endobj
44 0 obj
<<
/Type /Page
/Parent 43 0 R
/Resources 46 0 R
/Contents 45 0 R
>>
endobj
47 0 obj
<<
/Type /Page
/Parent 43 0 R
/Resources 49 0 R
/Contents 48 0 R
>>
endobj
51 0 obj
<<
/Type /Page
/Parent 43 0 R
/Resources 53 0 R
/Contents 52 0 R
>>
endobj
55 0 obj
<<
/Type /Page
/Parent 43 0 R
/Resources 57 0 R
/Contents 56 0 R
>>
endobj
58 0 obj
<<
/Type /Page
/Parent 43 0 R
/Resources 60 0 R
/Contents 59 0 R
>>
endobj
61 0 obj
<<
/Type /Page
/Parent 43 0 R
/Resources 63 0 R
/Contents 62 0 R
>>
endobj
64 0 obj
<<
/Type /Page
/Parent 43 0 R
/Resources 66 0 R
/Contents 65 0 R
>>
endobj
67 0 obj
<<
/Type /Page
/Parent 43 0 R
/Resources 69 0 R
/Contents 68 0 R
>>
endobj
70 0 obj
<<
/Type /Page
/Parent 43 0 R
/Resources 72 0 R
/Contents 71 0 R
>>
endobj
73 0 obj
<<
/Type /Page
/Parent 76 0 R
/Resources 75 0 R
/Contents 74 0 R
>>
endobj
77 0 obj
<<
/Type /Page
/Parent 76 0 R
/Resources 79 0 R
/Contents 78 0 R
>>
endobj
80 0 obj
<<
/Type /Page
/Parent 76 0 R
/Resources 82 0 R
/Contents 81 0 R
>>
endobj
83 0 obj
<<
/Type /Page
/Parent 76 0 R
/Resources 85 0 R
/Contents 84 0 R
>>
endobj
86 0 obj
<<
/Type /Page
/Parent 76 0 R
/Resources 88 0 R
/Contents 87 0 R
>>
endobj
89 0 obj
<<
/Type /Page
/Parent 76 0 R
/Resources 91 0 R
/Contents 90 0 R
>>
endobj
92 0 obj
<<
/Type /Page
/Parent 76 0 R
/Resources 94 0 R
/Contents 93 0 R
>>
endobj
95 0 obj
<<
/Type /Page
/Parent 76 0 R
/Resources 97 0 R
/Contents 96 0 R
>>
endobj
98 0 obj
<<
/Type /Page
/Parent 76 0 R
/Resources 100 0 R
/Contents 99 0 R
>>
endobj
101 0 obj
<<
/Type /Page
/Parent 76 0 R
/Resources 103 0 R
/Contents 102 0 R
>>
endobj
104 0 obj
<<
/Type /Page
/Parent 107 0 R
/Resources 106 0 R
/Contents 105 0 R
>>
endobj
108 0 obj
<<
/Type /Page
/Parent 107 0 R
/Resources 110 0 R
/Contents 109 0 R
>>
endobj
111 0 obj
<<
/Type /Page
/Parent 107 0 R
/Resources 113 0 R
/Contents 112 0 R
>>
endobj
114 0 obj
<<
/Type /Page
/Parent 107 0 R
/Resources 116 0 R
/Contents 115 0 R
>>
endobj
117 0 obj
<<
/Type /Page
/Parent 107 0 R
/Resources 119 0 R
/Contents 118 0 R
>>
endobj
120 0 obj
<<
/Type /Page
/Parent 107 0 R
/Resources 122 0 R
/Contents 121 0 R
>>
endobj
123 0 obj
<<
/Type /Page
/Parent 107 0 R
/Resources 125 0 R
/Contents 124 0 R
>>
endobj
126 0 obj
<<
/Type /Page
/Parent 107 0 R
/Resources 128 0 R
/Contents 127 0 R
>>
endobj
129 0 obj
<<
/Type /Page
/Parent 107 0 R
/Resources 131 0 R
/Contents 130 0 R
>>
endobj
132 0 obj
<<
/Type /Page
/Parent 107 0 R
/Resources 134 0 R
/Contents 133 0 R
>>
endobj
135 0 obj
<<
/Type /Page
/Parent 138 0 R
/Resources 137 0 R
/Contents 136 0 R
>>
endobj
139 0 obj
<<
/Type /Page
/Parent 138 0 R
/Resources 141 0 R
/Contents 140 0 R
>>
endobj
150 0 obj
<<
/S /D
>>
endobj
151 0 obj
<<
/Nums [0 150 0 R ]
>>
endobj
11 0 obj
<<
/Type /Pages
/Kids [1 0 R 12 0 R 15 0 R 18 0 R 21 0 R 24 0 R 27 0 R 30 0 R 33 0 R 36 0 R]
/Count 10
/Parent 42 0 R
>>
endobj
43 0 obj
<<
/Type /Pages
/Kids [39 0 R 44 0 R 47 0 R 51 0 R 55 0 R 58 0 R 61 0 R 64 0 R 67 0 R 70 0 R]
/Count 10
/Parent 42 0 R
>>
endobj
76 0 obj
<<
/Type /Pages
/Kids [73 0 R 77 0 R 80 0 R 83 0 R 86 0 R 89 0 R 92 0 R 95 0 R 98 0 R 101 0 R]
/Count 10
/Parent 42 0 R
>>
endobj
107 0 obj
<<
/Type /Pages
/Kids [104 0 R 108 0 R 111 0 R 114 0 R 117 0 R 120 0 R 123 0 R 126 0 R 129 0 R 132 0 R]
/Count 10
/Parent 42 0 R
>>
endobj
138 0 obj
<<
/Type /Pages
/Kids [135 0 R 139 0 R]
/Count 2
/Parent 42 0 R
>>
endobj
42 0 obj
<<
/Type /Pages
/Kids [11 0 R 43 0 R 76 0 R 107 0 R 138 0 R ]
/Count 42
/MediaBox [0 0 612 792]
>>
endobj
152 0 obj
<<
/CreationDate (D:20161107101222+01'00')
/ModDate (D:20161107101222+01'00')
/Producer (Apple pstopdf)
>>
endobj
153 0 obj
<<
/Type /Catalog
/Pages 42 0 R
/PageLabels 151 0 R
>>
endobj
xref
0 154
0000000000 65535 f 
0000141416 00000 n 
0000000016 00000 n 
0000004219 00000 n 
0000137549 00000 n 
0000138276 00000 n 
0000138991 00000 n 
0000139765 00000 n 
0000140543 00000 n 
0000140718 00000 n 
0000135809 00000 n 
0000145064 00000 n 
0000141497 00000 n 
0000004371 00000 n 
0000006916 00000 n 
0000141581 00000 n 
0000007046 00000 n 
0000011247 00000 n 
0000141665 00000 n 
0000011388 00000 n 
0000012939 00000 n 
0000141749 00000 n 
0000013070 00000 n 
0000015281 00000 n 
0000141833 00000 n 
0000015400 00000 n 
0000017138 00000 n 
0000141917 00000 n 
0000017269 00000 n 
0000021540 00000 n 
0000142001 00000 n 
0000021693 00000 n 
0000025480 00000 n 
0000142085 00000 n 
0000025621 00000 n 
0000031530 00000 n 
0000142169 00000 n 
0000031671 00000 n 
0000036028 00000 n 
0000142253 00000 n 
0000036158 00000 n 
0000037180 00000 n 
0000145711 00000 n 
0000145201 00000 n 
0000142337 00000 n 
0000037300 00000 n 
0000040123 00000 n 
0000142421 00000 n 
0000040231 00000 n 
0000043385 00000 n 
0000141068 00000 n 
0000142505 00000 n 
0000043551 00000 n 
0000046744 00000 n 
0000141239 00000 n 
0000142589 00000 n 
0000046887 00000 n 
0000049920 00000 n 
0000142673 00000 n 
0000050051 00000 n 
0000053191 00000 n 
0000142757 00000 n 
0000053344 00000 n 
0000066041 00000 n 
0000142841 00000 n 
0000066195 00000 n 
0000068698 00000 n 
0000142925 00000 n 
0000068840 00000 n 
0000072798 00000 n 
0000143009 00000 n 
0000072928 00000 n 
0000078376 00000 n 
0000143093 00000 n 
0000078506 00000 n 
0000080859 00000 n 
0000145339 00000 n 
0000143177 00000 n 
0000081001 00000 n 
0000083837 00000 n 
0000143261 00000 n 
0000083956 00000 n 
0000088561 00000 n 
0000143345 00000 n 
0000088702 00000 n 
0000091064 00000 n 
0000143429 00000 n 
0000091206 00000 n 
0000092565 00000 n 
0000143513 00000 n 
0000092685 00000 n 
0000094262 00000 n 
0000143597 00000 n 
0000094370 00000 n 
0000100836 00000 n 
0000143681 00000 n 
0000100977 00000 n 
0000103414 00000 n 
0000143765 00000 n 
0000103545 00000 n 
0000105074 00000 n 
0000143850 00000 n 
0000105183 00000 n 
0000107234 00000 n 
0000143937 00000 n 
0000107365 00000 n 
0000109094 00000 n 
0000145478 00000 n 
0000144025 00000 n 
0000109203 00000 n 
0000112503 00000 n 
0000144113 00000 n 
0000112634 00000 n 
0000114933 00000 n 
0000144201 00000 n 
0000115065 00000 n 
0000117040 00000 n 
0000144289 00000 n 
0000117149 00000 n 
0000119909 00000 n 
0000144377 00000 n 
0000120029 00000 n 
0000124758 00000 n 
0000144465 00000 n 
0000124889 00000 n 
0000128483 00000 n 
0000144553 00000 n 
0000128614 00000 n 
0000130745 00000 n 
0000144641 00000 n 
0000130877 00000 n 
0000132060 00000 n 
0000144729 00000 n 
0000132169 00000 n 
0000133434 00000 n 
0000144817 00000 n 
0000133543 00000 n 
0000135126 00000 n 
0000145627 00000 n 
0000144905 00000 n 
0000135235 00000 n 
0000135700 00000 n 
0000135950 00000 n 
0000136153 00000 n 
0000136354 00000 n 
0000136552 00000 n 
0000136744 00000 n 
0000136942 00000 n 
0000137145 00000 n 
0000137348 00000 n 
0000144993 00000 n 
0000145022 00000 n 
0000145826 00000 n 
0000145950 00000 n 
trailer
<<
/Size 154
/Root 153 0 R
/Info 152 0 R
/ID [<3cf76b4d2468a881ce90c6342741d5a7><3cf76b4d2468a881ce90c6342741d5a7>]
>>
startxref
146022
%%EOF
